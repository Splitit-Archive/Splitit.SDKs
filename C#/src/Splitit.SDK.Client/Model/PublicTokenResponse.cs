/* 
 * splitit-web-api-public-sdk
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Splitit.SDK.Client.Client.SwaggerDateConverter;

namespace Splitit.SDK.Client.Model
{
    /// <summary>
    /// PublicTokenResponse
    /// </summary>
    [DataContract]
    public partial class PublicTokenResponse :  IEquatable<PublicTokenResponse>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PublicTokenResponse" /> class.
        /// </summary>
        /// <param name="publicToken">publicToken.</param>
        /// <param name="checkoutUrl">checkoutUrl.</param>
        /// <param name="privacyPolicyUrl">privacyPolicyUrl.</param>
        /// <param name="termsAndConditionsUrl">termsAndConditionsUrl.</param>
        /// <param name="responseHeader">responseHeader.</param>
        public PublicTokenResponse(string publicToken = default(string), string checkoutUrl = default(string), string privacyPolicyUrl = default(string), string termsAndConditionsUrl = default(string), ResponseHeader responseHeader = default(ResponseHeader))
        {
            this.PublicToken = publicToken;
            this.CheckoutUrl = checkoutUrl;
            this.PrivacyPolicyUrl = privacyPolicyUrl;
            this.TermsAndConditionsUrl = termsAndConditionsUrl;
            this.ResponseHeader = responseHeader;
        }

        
        /// <summary>
        /// Gets or Sets PublicToken
        /// </summary>
        [DataMember(Name="PublicToken", EmitDefaultValue=false)]
        public string PublicToken { get; set; }

        /// <summary>
        /// Gets or Sets CheckoutUrl
        /// </summary>
        [DataMember(Name="CheckoutUrl", EmitDefaultValue=false)]
        public string CheckoutUrl { get; set; }

        /// <summary>
        /// Gets or Sets PrivacyPolicyUrl
        /// </summary>
        [DataMember(Name="PrivacyPolicyUrl", EmitDefaultValue=false)]
        public string PrivacyPolicyUrl { get; set; }

        /// <summary>
        /// Gets or Sets TermsAndConditionsUrl
        /// </summary>
        [DataMember(Name="TermsAndConditionsUrl", EmitDefaultValue=false)]
        public string TermsAndConditionsUrl { get; set; }

        /// <summary>
        /// Gets or Sets ResponseHeader
        /// </summary>
        [DataMember(Name="ResponseHeader", EmitDefaultValue=false)]
        public ResponseHeader ResponseHeader { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PublicTokenResponse {\n");
            sb.Append("  PublicToken: ").Append(PublicToken).Append("\n");
            sb.Append("  CheckoutUrl: ").Append(CheckoutUrl).Append("\n");
            sb.Append("  PrivacyPolicyUrl: ").Append(PrivacyPolicyUrl).Append("\n");
            sb.Append("  TermsAndConditionsUrl: ").Append(TermsAndConditionsUrl).Append("\n");
            sb.Append("  ResponseHeader: ").Append(ResponseHeader).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PublicTokenResponse);
        }

        /// <summary>
        /// Returns true if PublicTokenResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of PublicTokenResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PublicTokenResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PublicToken == input.PublicToken ||
                    (this.PublicToken != null &&
                    this.PublicToken.Equals(input.PublicToken))
                ) && 
                (
                    this.CheckoutUrl == input.CheckoutUrl ||
                    (this.CheckoutUrl != null &&
                    this.CheckoutUrl.Equals(input.CheckoutUrl))
                ) && 
                (
                    this.PrivacyPolicyUrl == input.PrivacyPolicyUrl ||
                    (this.PrivacyPolicyUrl != null &&
                    this.PrivacyPolicyUrl.Equals(input.PrivacyPolicyUrl))
                ) && 
                (
                    this.TermsAndConditionsUrl == input.TermsAndConditionsUrl ||
                    (this.TermsAndConditionsUrl != null &&
                    this.TermsAndConditionsUrl.Equals(input.TermsAndConditionsUrl))
                ) && 
                (
                    this.ResponseHeader == input.ResponseHeader ||
                    (this.ResponseHeader != null &&
                    this.ResponseHeader.Equals(input.ResponseHeader))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PublicToken != null)
                    hashCode = hashCode * 59 + this.PublicToken.GetHashCode();
                if (this.CheckoutUrl != null)
                    hashCode = hashCode * 59 + this.CheckoutUrl.GetHashCode();
                if (this.PrivacyPolicyUrl != null)
                    hashCode = hashCode * 59 + this.PrivacyPolicyUrl.GetHashCode();
                if (this.TermsAndConditionsUrl != null)
                    hashCode = hashCode * 59 + this.TermsAndConditionsUrl.GetHashCode();
                if (this.ResponseHeader != null)
                    hashCode = hashCode * 59 + this.ResponseHeader.GetHashCode();
                return hashCode;
            }
        }
    }

}
