/* 
 * splitit-web-api-public-sdk
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Splitit.SDK.Client.Client.SwaggerDateConverter;

namespace Splitit.SDK.Client.Model
{
    /// <summary>
    /// PaymentGatewayTransactionAsyncLogs
    /// </summary>
    [DataContract]
    public partial class PaymentGatewayTransactionAsyncLogs :  IEquatable<PaymentGatewayTransactionAsyncLogs>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PaymentGatewayTransactionAsyncLogs" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PaymentGatewayTransactionAsyncLogs() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PaymentGatewayTransactionAsyncLogs" /> class.
        /// </summary>
        /// <param name="id">id (required).</param>
        /// <param name="result">result (required).</param>
        /// <param name="manualVerification">manualVerification (required).</param>
        /// <param name="responseLog">responseLog.</param>
        /// <param name="referenceGatewayTransactionId">referenceGatewayTransactionId.</param>
        /// <param name="referencePaymentGatewayTransactionLogId">referencePaymentGatewayTransactionLogId.</param>
        /// <param name="referencePaymentGatewayTransactionLog">referencePaymentGatewayTransactionLog.</param>
        public PaymentGatewayTransactionAsyncLogs(long? id = default(long?), bool? result = default(bool?), bool? manualVerification = default(bool?), string responseLog = default(string), string referenceGatewayTransactionId = default(string), long? referencePaymentGatewayTransactionLogId = default(long?), PaymentGatewayTransactionLogs referencePaymentGatewayTransactionLog = default(PaymentGatewayTransactionLogs))
        {
            this.Id = id;
            this.Result = result;
            this.ManualVerification = manualVerification;
            this.ResponseLog = responseLog;
            this.ReferenceGatewayTransactionId = referenceGatewayTransactionId;
            this.ReferencePaymentGatewayTransactionLogId = referencePaymentGatewayTransactionLogId;
            this.ReferencePaymentGatewayTransactionLog = referencePaymentGatewayTransactionLog;
        }

        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="Id", EmitDefaultValue=false)]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or Sets Result
        /// </summary>
        [DataMember(Name="Result", EmitDefaultValue=false)]
        public bool? Result { get; set; }

        /// <summary>
        /// Gets or Sets ManualVerification
        /// </summary>
        [DataMember(Name="ManualVerification", EmitDefaultValue=false)]
        public bool? ManualVerification { get; set; }

        /// <summary>
        /// Gets or Sets ResponseLog
        /// </summary>
        [DataMember(Name="ResponseLog", EmitDefaultValue=false)]
        public string ResponseLog { get; set; }

        /// <summary>
        /// Gets or Sets ReferenceGatewayTransactionId
        /// </summary>
        [DataMember(Name="ReferenceGatewayTransactionId", EmitDefaultValue=false)]
        public string ReferenceGatewayTransactionId { get; set; }

        /// <summary>
        /// Gets or Sets ReferencePaymentGatewayTransactionLogId
        /// </summary>
        [DataMember(Name="ReferencePaymentGatewayTransactionLogId", EmitDefaultValue=false)]
        public long? ReferencePaymentGatewayTransactionLogId { get; set; }

        /// <summary>
        /// Gets or Sets ReferencePaymentGatewayTransactionLog
        /// </summary>
        [DataMember(Name="ReferencePaymentGatewayTransactionLog", EmitDefaultValue=false)]
        public PaymentGatewayTransactionLogs ReferencePaymentGatewayTransactionLog { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PaymentGatewayTransactionAsyncLogs {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Result: ").Append(Result).Append("\n");
            sb.Append("  ManualVerification: ").Append(ManualVerification).Append("\n");
            sb.Append("  ResponseLog: ").Append(ResponseLog).Append("\n");
            sb.Append("  ReferenceGatewayTransactionId: ").Append(ReferenceGatewayTransactionId).Append("\n");
            sb.Append("  ReferencePaymentGatewayTransactionLogId: ").Append(ReferencePaymentGatewayTransactionLogId).Append("\n");
            sb.Append("  ReferencePaymentGatewayTransactionLog: ").Append(ReferencePaymentGatewayTransactionLog).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PaymentGatewayTransactionAsyncLogs);
        }

        /// <summary>
        /// Returns true if PaymentGatewayTransactionAsyncLogs instances are equal
        /// </summary>
        /// <param name="input">Instance of PaymentGatewayTransactionAsyncLogs to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PaymentGatewayTransactionAsyncLogs input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Result == input.Result ||
                    (this.Result != null &&
                    this.Result.Equals(input.Result))
                ) && 
                (
                    this.ManualVerification == input.ManualVerification ||
                    (this.ManualVerification != null &&
                    this.ManualVerification.Equals(input.ManualVerification))
                ) && 
                (
                    this.ResponseLog == input.ResponseLog ||
                    (this.ResponseLog != null &&
                    this.ResponseLog.Equals(input.ResponseLog))
                ) && 
                (
                    this.ReferenceGatewayTransactionId == input.ReferenceGatewayTransactionId ||
                    (this.ReferenceGatewayTransactionId != null &&
                    this.ReferenceGatewayTransactionId.Equals(input.ReferenceGatewayTransactionId))
                ) && 
                (
                    this.ReferencePaymentGatewayTransactionLogId == input.ReferencePaymentGatewayTransactionLogId ||
                    (this.ReferencePaymentGatewayTransactionLogId != null &&
                    this.ReferencePaymentGatewayTransactionLogId.Equals(input.ReferencePaymentGatewayTransactionLogId))
                ) && 
                (
                    this.ReferencePaymentGatewayTransactionLog == input.ReferencePaymentGatewayTransactionLog ||
                    (this.ReferencePaymentGatewayTransactionLog != null &&
                    this.ReferencePaymentGatewayTransactionLog.Equals(input.ReferencePaymentGatewayTransactionLog))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Result != null)
                    hashCode = hashCode * 59 + this.Result.GetHashCode();
                if (this.ManualVerification != null)
                    hashCode = hashCode * 59 + this.ManualVerification.GetHashCode();
                if (this.ResponseLog != null)
                    hashCode = hashCode * 59 + this.ResponseLog.GetHashCode();
                if (this.ReferenceGatewayTransactionId != null)
                    hashCode = hashCode * 59 + this.ReferenceGatewayTransactionId.GetHashCode();
                if (this.ReferencePaymentGatewayTransactionLogId != null)
                    hashCode = hashCode * 59 + this.ReferencePaymentGatewayTransactionLogId.GetHashCode();
                if (this.ReferencePaymentGatewayTransactionLog != null)
                    hashCode = hashCode * 59 + this.ReferencePaymentGatewayTransactionLog.GetHashCode();
                return hashCode;
            }
        }
    }

}
