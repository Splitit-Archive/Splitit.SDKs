/* 
 * splitit-web-api-public-sdk
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Splitit.SDK.Client.Client.SwaggerDateConverter;

namespace Splitit.SDK.Client.Model
{
    /// <summary>
    /// Defines PisErrorCodes
    /// </summary>
    
    [JsonConverter(typeof(StringEnumConverter))]
    
    public enum PisErrorCodes
    {
        
        /// <summary>
        /// Enum ConfigurationKeyNotFound for value: ConfigurationKeyNotFound
        /// </summary>
        [EnumMember(Value = "ConfigurationKeyNotFound")]
        ConfigurationKeyNotFound = 1,
        
        /// <summary>
        /// Enum IdNotFound for value: IdNotFound
        /// </summary>
        [EnumMember(Value = "IdNotFound")]
        IdNotFound = 2,
        
        /// <summary>
        /// Enum InvalidInput for value: InvalidInput
        /// </summary>
        [EnumMember(Value = "InvalidInput")]
        InvalidInput = 3,
        
        /// <summary>
        /// Enum ExternalSystemCallFailed for value: ExternalSystemCallFailed
        /// </summary>
        [EnumMember(Value = "ExternalSystemCallFailed")]
        ExternalSystemCallFailed = 4,
        
        /// <summary>
        /// Enum IdempotencyError for value: IdempotencyError
        /// </summary>
        [EnumMember(Value = "IdempotencyError")]
        IdempotencyError = 5,
        
        /// <summary>
        /// Enum IdempotencyOriginalRequestError for value: IdempotencyOriginalRequestError
        /// </summary>
        [EnumMember(Value = "IdempotencyOriginalRequestError")]
        IdempotencyOriginalRequestError = 6,
        
        /// <summary>
        /// Enum RuleDataAlreadyExists for value: RuleDataAlreadyExists
        /// </summary>
        [EnumMember(Value = "RuleDataAlreadyExists")]
        RuleDataAlreadyExists = 7,
        
        /// <summary>
        /// Enum PGPEncryptionKeyNotFound for value: PGPEncryptionKeyNotFound
        /// </summary>
        [EnumMember(Value = "PGPEncryptionKeyNotFound")]
        PGPEncryptionKeyNotFound = 8,
        
        /// <summary>
        /// Enum InvalidPGPKey for value: InvalidPGPKey
        /// </summary>
        [EnumMember(Value = "InvalidPGPKey")]
        InvalidPGPKey = 9,
        
        /// <summary>
        /// Enum InvalidInstallmentPlanNumber for value: InvalidInstallmentPlanNumber
        /// </summary>
        [EnumMember(Value = "InvalidInstallmentPlanNumber")]
        InvalidInstallmentPlanNumber = 10,
        
        /// <summary>
        /// Enum InvalidInstallmentPlanStatus for value: InvalidInstallmentPlanStatus
        /// </summary>
        [EnumMember(Value = "InvalidInstallmentPlanStatus")]
        InvalidInstallmentPlanStatus = 11,
        
        /// <summary>
        /// Enum InvalidCCCardTypeNotSupported for value: InvalidCCCardTypeNotSupported
        /// </summary>
        [EnumMember(Value = "InvalidCCCardTypeNotSupported")]
        InvalidCCCardTypeNotSupported = 12,
        
        /// <summary>
        /// Enum InvalidNumberOfInstallments for value: InvalidNumberOfInstallments
        /// </summary>
        [EnumMember(Value = "InvalidNumberOfInstallments")]
        InvalidNumberOfInstallments = 13,
        
        /// <summary>
        /// Enum InvalidAmountFormat for value: InvalidAmountFormat
        /// </summary>
        [EnumMember(Value = "InvalidAmountFormat")]
        InvalidAmountFormat = 14,
        
        /// <summary>
        /// Enum CardUpdateIsNotAllowed for value: CardUpdateIsNotAllowed
        /// </summary>
        [EnumMember(Value = "CardUpdateIsNotAllowed")]
        CardUpdateIsNotAllowed = 15,
        
        /// <summary>
        /// Enum InvalidCountryCode for value: InvalidCountryCode
        /// </summary>
        [EnumMember(Value = "InvalidCountryCode")]
        InvalidCountryCode = 16,
        
        /// <summary>
        /// Enum InvalidResponseURL for value: InvalidResponseURL
        /// </summary>
        [EnumMember(Value = "InvalidResponseURL")]
        InvalidResponseURL = 17,
        
        /// <summary>
        /// Enum InvalidCardholderName for value: InvalidCardholderName
        /// </summary>
        [EnumMember(Value = "InvalidCardholderName")]
        InvalidCardholderName = 18,
        
        /// <summary>
        /// Enum InvalidAmount for value: InvalidAmount
        /// </summary>
        [EnumMember(Value = "InvalidAmount")]
        InvalidAmount = 19,
        
        /// <summary>
        /// Enum InvalidCVV for value: InvalidCVV
        /// </summary>
        [EnumMember(Value = "InvalidCVV")]
        InvalidCVV = 20,
        
        /// <summary>
        /// Enum InvalidCardNumber for value: InvalidCardNumber
        /// </summary>
        [EnumMember(Value = "InvalidCardNumber")]
        InvalidCardNumber = 21,
        
        /// <summary>
        /// Enum InvalidExpirationDate for value: InvalidExpirationDate
        /// </summary>
        [EnumMember(Value = "InvalidExpirationDate")]
        InvalidExpirationDate = 22,
        
        /// <summary>
        /// Enum InvalidConsumerFullName for value: InvalidConsumerFullName
        /// </summary>
        [EnumMember(Value = "InvalidConsumerFullName")]
        InvalidConsumerFullName = 23,
        
        /// <summary>
        /// Enum InvalidEmailFormat for value: InvalidEmailFormat
        /// </summary>
        [EnumMember(Value = "InvalidEmailFormat")]
        InvalidEmailFormat = 24,
        
        /// <summary>
        /// Enum InvalidAddress for value: InvalidAddress
        /// </summary>
        [EnumMember(Value = "InvalidAddress")]
        InvalidAddress = 25,
        
        /// <summary>
        /// Enum InvalidZIPCode for value: InvalidZIPCode
        /// </summary>
        [EnumMember(Value = "InvalidZIPCode")]
        InvalidZIPCode = 26,
        
        /// <summary>
        /// Enum InvalidCCIssueCountryNotSupportedByTerminal for value: InvalidCCIssueCountryNotSupportedByTerminal
        /// </summary>
        [EnumMember(Value = "InvalidCCIssueCountryNotSupportedByTerminal")]
        InvalidCCIssueCountryNotSupportedByTerminal = 27,
        
        /// <summary>
        /// Enum InvalidCurrency for value: InvalidCurrency
        /// </summary>
        [EnumMember(Value = "InvalidCurrency")]
        InvalidCurrency = 28,
        
        /// <summary>
        /// Enum InvalidMaskedCcNumNotFoundInPlan for value: InvalidMaskedCcNumNotFoundInPlan
        /// </summary>
        [EnumMember(Value = "InvalidMaskedCcNumNotFoundInPlan")]
        InvalidMaskedCcNumNotFoundInPlan = 29,
        
        /// <summary>
        /// Enum InstallmentPlanIsAboutToExpire for value: InstallmentPlanIsAboutToExpire
        /// </summary>
        [EnumMember(Value = "InstallmentPlanIsAboutToExpire")]
        InstallmentPlanIsAboutToExpire = 30,
        
        /// <summary>
        /// Enum CountrySubdivisionNotSupported for value: CountrySubdivisionNotSupported
        /// </summary>
        [EnumMember(Value = "CountrySubdivisionNotSupported")]
        CountrySubdivisionNotSupported = 31,
        
        /// <summary>
        /// Enum UpdateInstallmentWithHigherAmountThanPersistedIsNotAllow for value: UpdateInstallment_WithHigherAmountThanPersistedIsNotAllow
        /// </summary>
        [EnumMember(Value = "UpdateInstallment_WithHigherAmountThanPersistedIsNotAllow")]
        UpdateInstallmentWithHigherAmountThanPersistedIsNotAllow = 32,
        
        /// <summary>
        /// Enum UpdateInstallmentFirstInstallmentWithHigherAmountThanPersistedIsNotAllow for value: UpdateInstallment_FirstInstallmentWithHigherAmountThanPersistedIsNotAllow
        /// </summary>
        [EnumMember(Value = "UpdateInstallment_FirstInstallmentWithHigherAmountThanPersistedIsNotAllow")]
        UpdateInstallmentFirstInstallmentWithHigherAmountThanPersistedIsNotAllow = 33,
        
        /// <summary>
        /// Enum UpdateInstallmentInTheMiddleOfPlanAsZeroIsNotAllow for value: UpdateInstallment_InTheMiddleOfPlanAsZeroIsNotAllow
        /// </summary>
        [EnumMember(Value = "UpdateInstallment_InTheMiddleOfPlanAsZeroIsNotAllow")]
        UpdateInstallmentInTheMiddleOfPlanAsZeroIsNotAllow = 34,
        
        /// <summary>
        /// Enum RefundInstallmentWithHigherAmountThanOriginalIsNotAllowed for value: RefundInstallmentWithHigherAmountThanOriginalIsNotAllowed
        /// </summary>
        [EnumMember(Value = "RefundInstallmentWithHigherAmountThanOriginalIsNotAllowed")]
        RefundInstallmentWithHigherAmountThanOriginalIsNotAllowed = 35,
        
        /// <summary>
        /// Enum RefundInstallmentThatHasBeenCapturedYetIsNotAllowed for value: RefundInstallmentThatHasBeenCapturedYetIsNotAllowed
        /// </summary>
        [EnumMember(Value = "RefundInstallmentThatHasBeenCapturedYetIsNotAllowed")]
        RefundInstallmentThatHasBeenCapturedYetIsNotAllowed = 36,
        
        /// <summary>
        /// Enum UpdateInstallmentAlreadyProcessed for value: UpdateInstallment_AlreadyProcessed
        /// </summary>
        [EnumMember(Value = "UpdateInstallment_AlreadyProcessed")]
        UpdateInstallmentAlreadyProcessed = 37,
        
        /// <summary>
        /// Enum ApprovePlanPlanAlreadyApproved for value: ApprovePlan_PlanAlreadyApproved
        /// </summary>
        [EnumMember(Value = "ApprovePlan_PlanAlreadyApproved")]
        ApprovePlanPlanAlreadyApproved = 38,
        
        /// <summary>
        /// Enum InvalidExpirationDateFormat for value: InvalidExpirationDateFormat
        /// </summary>
        [EnumMember(Value = "InvalidExpirationDateFormat")]
        InvalidExpirationDateFormat = 39,
        
        /// <summary>
        /// Enum InvalidCCBinNotFound for value: InvalidCCBinNotFound
        /// </summary>
        [EnumMember(Value = "InvalidCCBinNotFound")]
        InvalidCCBinNotFound = 40,
        
        /// <summary>
        /// Enum InvalidCCCardBrandNotSupported for value: InvalidCCCardBrandNotSupported
        /// </summary>
        [EnumMember(Value = "InvalidCCCardBrandNotSupported")]
        InvalidCCCardBrandNotSupported = 41,
        
        /// <summary>
        /// Enum ApprovePlanNoApprovalEvidence for value: ApprovePlan_NoApprovalEvidence
        /// </summary>
        [EnumMember(Value = "ApprovePlan_NoApprovalEvidence")]
        ApprovePlanNoApprovalEvidence = 42,
        
        /// <summary>
        /// Enum PlanWithTheSamePaymentDataAlreadyBeenCreatedLately for value: PlanWithTheSamePaymentDataAlreadyBeenCreatedLately
        /// </summary>
        [EnumMember(Value = "PlanWithTheSamePaymentDataAlreadyBeenCreatedLately")]
        PlanWithTheSamePaymentDataAlreadyBeenCreatedLately = 43,
        
        /// <summary>
        /// Enum InvalidFutureChargeDate for value: InvalidFutureChargeDate
        /// </summary>
        [EnumMember(Value = "InvalidFutureChargeDate")]
        InvalidFutureChargeDate = 44,
        
        /// <summary>
        /// Enum InvalidFirstInstallmentAmount for value: InvalidFirstInstallmentAmount
        /// </summary>
        [EnumMember(Value = "InvalidFirstInstallmentAmount")]
        InvalidFirstInstallmentAmount = 45,
        
        /// <summary>
        /// Enum CultureNameNotValid for value: CultureNameNotValid
        /// </summary>
        [EnumMember(Value = "CultureNameNotValid")]
        CultureNameNotValid = 46,
        
        /// <summary>
        /// Enum CultureNotSupported for value: CultureNotSupported
        /// </summary>
        [EnumMember(Value = "CultureNotSupported")]
        CultureNotSupported = 47,
        
        /// <summary>
        /// Enum SystemTextKeyNotFound for value: SystemTextKeyNotFound
        /// </summary>
        [EnumMember(Value = "SystemTextKeyNotFound")]
        SystemTextKeyNotFound = 48,
        
        /// <summary>
        /// Enum TerminalNotFoundBySuppliedApiKey for value: TerminalNotFoundBySuppliedApiKey
        /// </summary>
        [EnumMember(Value = "TerminalNotFoundBySuppliedApiKey")]
        TerminalNotFoundBySuppliedApiKey = 49,
        
        /// <summary>
        /// Enum UnknownZipCode for value: UnknownZipCode
        /// </summary>
        [EnumMember(Value = "UnknownZipCode")]
        UnknownZipCode = 50,
        
        /// <summary>
        /// Enum CCRejectionProcessCannotBeInitiatedDueToAuthExpiration for value: CCRejectionProcessCannotBeInitiatedDueToAuthExpiration
        /// </summary>
        [EnumMember(Value = "CCRejectionProcessCannotBeInitiatedDueToAuthExpiration")]
        CCRejectionProcessCannotBeInitiatedDueToAuthExpiration = 51,
        
        /// <summary>
        /// Enum CantChargeInstallmentWhilePlanChargesAreOnHold for value: CantChargeInstallmentWhilePlanChargesAreOnHold
        /// </summary>
        [EnumMember(Value = "CantChargeInstallmentWhilePlanChargesAreOnHold")]
        CantChargeInstallmentWhilePlanChargesAreOnHold = 52,
        
        /// <summary>
        /// Enum CantReleaseHoldOnChargesSinceChargesAreNotHolded for value: CantReleaseHoldOnChargesSinceChargesAreNotHolded
        /// </summary>
        [EnumMember(Value = "CantReleaseHoldOnChargesSinceChargesAreNotHolded")]
        CantReleaseHoldOnChargesSinceChargesAreNotHolded = 53,
        
        /// <summary>
        /// Enum RefundNotAllowedOneOrMoreInstallmentsPassedRefundAllowedTime for value: RefundNotAllowedOneOrMoreInstallmentsPassedRefundAllowedTime
        /// </summary>
        [EnumMember(Value = "RefundNotAllowedOneOrMoreInstallmentsPassedRefundAllowedTime")]
        RefundNotAllowedOneOrMoreInstallmentsPassedRefundAllowedTime = 54,
        
        /// <summary>
        /// Enum RefundPartialyFailedOneOrMoreInstallmentFailedRefund for value: RefundPartialyFailedOneOrMoreInstallmentFailedRefund
        /// </summary>
        [EnumMember(Value = "RefundPartialyFailedOneOrMoreInstallmentFailedRefund")]
        RefundPartialyFailedOneOrMoreInstallmentFailedRefund = 55,
        
        /// <summary>
        /// Enum RefundFailed for value: RefundFailed
        /// </summary>
        [EnumMember(Value = "RefundFailed")]
        RefundFailed = 56,
        
        /// <summary>
        /// Enum UpdatePlanParametersAreNotSupported for value: UpdatePlanParametersAreNotSupported
        /// </summary>
        [EnumMember(Value = "UpdatePlanParametersAreNotSupported")]
        UpdatePlanParametersAreNotSupported = 57,
        
        /// <summary>
        /// Enum RefundRequestedAmountExceededPlanRefundableAmount for value: RefundRequestedAmountExceededPlanRefundableAmount
        /// </summary>
        [EnumMember(Value = "RefundRequestedAmountExceededPlanRefundableAmount")]
        RefundRequestedAmountExceededPlanRefundableAmount = 58,
        
        /// <summary>
        /// Enum InvalidCurrencyNotSupportedByTerminal for value: InvalidCurrency_NotSupportedByTerminal
        /// </summary>
        [EnumMember(Value = "InvalidCurrency_NotSupportedByTerminal")]
        InvalidCurrencyNotSupportedByTerminal = 59,
        
        /// <summary>
        /// Enum CreditCardIsMissing for value: CreditCardIsMissing
        /// </summary>
        [EnumMember(Value = "CreditCardIsMissing")]
        CreditCardIsMissing = 60,
        
        /// <summary>
        /// Enum PisMemberIsMissing for value: PisMemberIsMissing
        /// </summary>
        [EnumMember(Value = "PisMemberIsMissing")]
        PisMemberIsMissing = 61,
        
        /// <summary>
        /// Enum AddressDataIsMissingOrPartiallyInitiated for value: AddressDataIsMissingOrPartiallyInitiated
        /// </summary>
        [EnumMember(Value = "AddressDataIsMissingOrPartiallyInitiated")]
        AddressDataIsMissingOrPartiallyInitiated = 62,
        
        /// <summary>
        /// Enum CardHolderNameIsMissing for value: CardHolderNameIsMissing
        /// </summary>
        [EnumMember(Value = "CardHolderNameIsMissing")]
        CardHolderNameIsMissing = 63,
        
        /// <summary>
        /// Enum CardNumberIsMissing for value: CardNumberIsMissing
        /// </summary>
        [EnumMember(Value = "CardNumberIsMissing")]
        CardNumberIsMissing = 64,
        
        /// <summary>
        /// Enum CardExpirationMonthIsMissing for value: CardExpirationMonthIsMissing
        /// </summary>
        [EnumMember(Value = "CardExpirationMonthIsMissing")]
        CardExpirationMonthIsMissing = 65,
        
        /// <summary>
        /// Enum CardExpirationYearIsMissing for value: CardExpirationYearIsMissing
        /// </summary>
        [EnumMember(Value = "CardExpirationYearIsMissing")]
        CardExpirationYearIsMissing = 66,
        
        /// <summary>
        /// Enum NumberOfInstallmentNotDefined for value: NumberOfInstallmentNotDefined
        /// </summary>
        [EnumMember(Value = "NumberOfInstallmentNotDefined")]
        NumberOfInstallmentNotDefined = 67,
        
        /// <summary>
        /// Enum InvalidStateCode for value: InvalidStateCode
        /// </summary>
        [EnumMember(Value = "InvalidStateCode")]
        InvalidStateCode = 68,
        
        /// <summary>
        /// Enum EmailIsMissing for value: EmailIsMissing
        /// </summary>
        [EnumMember(Value = "EmailIsMissing")]
        EmailIsMissing = 69,
        
        /// <summary>
        /// Enum ConsumerFullNameIsMissing for value: ConsumerFullNameIsMissing
        /// </summary>
        [EnumMember(Value = "ConsumerFullNameIsMissing")]
        ConsumerFullNameIsMissing = 70,
        
        /// <summary>
        /// Enum CurrencyMustBeDefinedOnTransaction for value: CurrencyMustBeDefinedOnTransaction
        /// </summary>
        [EnumMember(Value = "CurrencyMustBeDefinedOnTransaction")]
        CurrencyMustBeDefinedOnTransaction = 71,
        
        /// <summary>
        /// Enum CouldNotFundInstallmentPlan for value: CouldNotFundInstallmentPlan
        /// </summary>
        [EnumMember(Value = "CouldNotFundInstallmentPlan")]
        CouldNotFundInstallmentPlan = 72,
        
        /// <summary>
        /// Enum CouldNotRevertFund for value: CouldNotRevertFund
        /// </summary>
        [EnumMember(Value = "CouldNotRevertFund")]
        CouldNotRevertFund = 73,
        
        /// <summary>
        /// Enum InvalidPlanStrategy for value: InvalidPlanStrategy
        /// </summary>
        [EnumMember(Value = "InvalidPlanStrategy")]
        InvalidPlanStrategy = 74,
        
        /// <summary>
        /// Enum FullCaptureNotSupported for value: FullCaptureNotSupported
        /// </summary>
        [EnumMember(Value = "FullCaptureNotSupported")]
        FullCaptureNotSupported = 75,
        
        /// <summary>
        /// Enum InvalidCcPrepaidCardNotSupported for value: InvalidCcPrepaidCardNotSupported
        /// </summary>
        [EnumMember(Value = "InvalidCcPrepaidCardNotSupported")]
        InvalidCcPrepaidCardNotSupported = 76,
        
        /// <summary>
        /// Enum CardExpireBeforePlanEnds for value: CardExpireBeforePlanEnds
        /// </summary>
        [EnumMember(Value = "CardExpireBeforePlanEnds")]
        CardExpireBeforePlanEnds = 77,
        
        /// <summary>
        /// Enum PartialPlanAmountAuthorized for value: PartialPlanAmountAuthorized
        /// </summary>
        [EnumMember(Value = "PartialPlanAmountAuthorized")]
        PartialPlanAmountAuthorized = 78,
        
        /// <summary>
        /// Enum SecuredAuthorizationRequiredForPartialPayment for value: SecuredAuthorizationRequiredForPartialPayment
        /// </summary>
        [EnumMember(Value = "SecuredAuthorizationRequiredForPartialPayment")]
        SecuredAuthorizationRequiredForPartialPayment = 79,
        
        /// <summary>
        /// Enum ThreeDSecureDataNotFound for value: ThreeDSecureDataNotFound
        /// </summary>
        [EnumMember(Value = "ThreeDSecureDataNotFound")]
        ThreeDSecureDataNotFound = 80,
        
        /// <summary>
        /// Enum ThreeDSecureNotSupportedByPlanStrategy for value: ThreeDSecureNotSupportedByPlanStrategy
        /// </summary>
        [EnumMember(Value = "ThreeDSecureNotSupportedByPlanStrategy")]
        ThreeDSecureNotSupportedByPlanStrategy = 81,
        
        /// <summary>
        /// Enum ThreeDSecureRequiredDataMissing for value: ThreeDSecureRequiredDataMissing
        /// </summary>
        [EnumMember(Value = "ThreeDSecureRequiredDataMissing")]
        ThreeDSecureRequiredDataMissing = 82,
        
        /// <summary>
        /// Enum StrategyNotAllowed for value: StrategyNotAllowed
        /// </summary>
        [EnumMember(Value = "StrategyNotAllowed")]
        StrategyNotAllowed = 83,
        
        /// <summary>
        /// Enum PaymentTokenNotValid for value: PaymentTokenNotValid
        /// </summary>
        [EnumMember(Value = "PaymentTokenNotValid")]
        PaymentTokenNotValid = 84,
        
        /// <summary>
        /// Enum ActivityNotSupportedForPlanStrategy for value: ActivityNotSupportedForPlanStrategy
        /// </summary>
        [EnumMember(Value = "ActivityNotSupportedForPlanStrategy")]
        ActivityNotSupportedForPlanStrategy = 85,
        
        /// <summary>
        /// Enum PaymentWizardViewNotExist for value: PaymentWizardViewNotExist
        /// </summary>
        [EnumMember(Value = "PaymentWizardViewNotExist")]
        PaymentWizardViewNotExist = 86,
        
        /// <summary>
        /// Enum InvalidUrl for value: InvalidUrl
        /// </summary>
        [EnumMember(Value = "InvalidUrl")]
        InvalidUrl = 87,
        
        /// <summary>
        /// Enum IssuerBinNotSupportingInstallmentException for value: IssuerBinNotSupportingInstallmentException
        /// </summary>
        [EnumMember(Value = "IssuerBinNotSupportingInstallmentException")]
        IssuerBinNotSupportingInstallmentException = 88,
        
        /// <summary>
        /// Enum CouldNotChangeLender for value: CouldNotChangeLender
        /// </summary>
        [EnumMember(Value = "CouldNotChangeLender")]
        CouldNotChangeLender = 89,
        
        /// <summary>
        /// Enum FraudDeteced for value: FraudDeteced
        /// </summary>
        [EnumMember(Value = "FraudDeteced")]
        FraudDeteced = 90,
        
        /// <summary>
        /// Enum PhoneIsMissing for value: PhoneIsMissing
        /// </summary>
        [EnumMember(Value = "PhoneIsMissing")]
        PhoneIsMissing = 91,
        
        /// <summary>
        /// Enum InvalidPhoneFormat for value: InvalidPhoneFormat
        /// </summary>
        [EnumMember(Value = "InvalidPhoneFormat")]
        InvalidPhoneFormat = 92,
        
        /// <summary>
        /// Enum InstallmentMissingOpenAuthorization for value: InstallmentMissingOpenAuthorization
        /// </summary>
        [EnumMember(Value = "InstallmentMissingOpenAuthorization")]
        InstallmentMissingOpenAuthorization = 93,
        
        /// <summary>
        /// Enum GeneralError for value: GeneralError
        /// </summary>
        [EnumMember(Value = "GeneralError")]
        GeneralError = 94,
        
        /// <summary>
        /// Enum GtwyResultGeneralError for value: GtwyResultGeneralError
        /// </summary>
        [EnumMember(Value = "GtwyResultGeneralError")]
        GtwyResultGeneralError = 95,
        
        /// <summary>
        /// Enum GtwyResultCCDataAVSZip for value: GtwyResultCCDataAVSZip
        /// </summary>
        [EnumMember(Value = "GtwyResultCCDataAVSZip")]
        GtwyResultCCDataAVSZip = 96,
        
        /// <summary>
        /// Enum GtwyResultCCDataAVSAddress for value: GtwyResultCCDataAVSAddress
        /// </summary>
        [EnumMember(Value = "GtwyResultCCDataAVSAddress")]
        GtwyResultCCDataAVSAddress = 97,
        
        /// <summary>
        /// Enum GtwyResultCCDataCVV for value: GtwyResultCCDataCVV
        /// </summary>
        [EnumMember(Value = "GtwyResultCCDataCVV")]
        GtwyResultCCDataCVV = 98,
        
        /// <summary>
        /// Enum GtwyResultCCDataCCExpiration for value: GtwyResultCCDataCCExpiration
        /// </summary>
        [EnumMember(Value = "GtwyResultCCDataCCExpiration")]
        GtwyResultCCDataCCExpiration = 99,
        
        /// <summary>
        /// Enum GtwyResultCCDataAVS for value: GtwyResultCCDataAVS
        /// </summary>
        [EnumMember(Value = "GtwyResultCCDataAVS")]
        GtwyResultCCDataAVS = 100,
        
        /// <summary>
        /// Enum GtwyResultCCDataNumber for value: GtwyResultCCDataNumber
        /// </summary>
        [EnumMember(Value = "GtwyResultCCDataNumber")]
        GtwyResultCCDataNumber = 101,
        
        /// <summary>
        /// Enum GtwyResultCCDataGeneralProblem for value: GtwyResultCCDataGeneralProblem
        /// </summary>
        [EnumMember(Value = "GtwyResultCCDataGeneralProblem")]
        GtwyResultCCDataGeneralProblem = 102,
        
        /// <summary>
        /// Enum GtwyResultCCDataInsufficientFunds for value: GtwyResultCCDataInsufficientFunds
        /// </summary>
        [EnumMember(Value = "GtwyResultCCDataInsufficientFunds")]
        GtwyResultCCDataInsufficientFunds = 103,
        
        /// <summary>
        /// Enum GtwyResultCCWasDeclined for value: GtwyResultCCWasDeclined
        /// </summary>
        [EnumMember(Value = "GtwyResultCCWasDeclined")]
        GtwyResultCCWasDeclined = 104,
        
        /// <summary>
        /// Enum GtwyConnectivityProblem for value: GtwyConnectivityProblem
        /// </summary>
        [EnumMember(Value = "GtwyConnectivityProblem")]
        GtwyConnectivityProblem = 105,
        
        /// <summary>
        /// Enum GtwyMerchantDataProblem for value: GtwyMerchantDataProblem
        /// </summary>
        [EnumMember(Value = "GtwyMerchantDataProblem")]
        GtwyMerchantDataProblem = 106,
        
        /// <summary>
        /// Enum GtwyRequire3DAuthentication for value: GtwyRequire3DAuthentication
        /// </summary>
        [EnumMember(Value = "GtwyRequire3DAuthentication")]
        GtwyRequire3DAuthentication = 107,
        
        /// <summary>
        /// Enum InvalidCredentials for value: InvalidCredentials
        /// </summary>
        [EnumMember(Value = "InvalidCredentials")]
        InvalidCredentials = 108,
        
        /// <summary>
        /// Enum UserIsLocked for value: UserIsLocked
        /// </summary>
        [EnumMember(Value = "UserIsLocked")]
        UserIsLocked = 109,
        
        /// <summary>
        /// Enum UserIsLockedDueInactivity for value: UserIsLockedDueInactivity
        /// </summary>
        [EnumMember(Value = "UserIsLockedDueInactivity")]
        UserIsLockedDueInactivity = 110,
        
        /// <summary>
        /// Enum SessionNotValid for value: SessionNotValid
        /// </summary>
        [EnumMember(Value = "SessionNotValid")]
        SessionNotValid = 111,
        
        /// <summary>
        /// Enum SessionExpired for value: SessionExpired
        /// </summary>
        [EnumMember(Value = "SessionExpired")]
        SessionExpired = 112,
        
        /// <summary>
        /// Enum ActivityNotAllowedForUser for value: ActivityNotAllowedForUser
        /// </summary>
        [EnumMember(Value = "ActivityNotAllowedForUser")]
        ActivityNotAllowedForUser = 113,
        
        /// <summary>
        /// Enum ActivityOnMerchantNotAllowedForUser for value: ActivityOnMerchantNotAllowedForUser
        /// </summary>
        [EnumMember(Value = "ActivityOnMerchantNotAllowedForUser")]
        ActivityOnMerchantNotAllowedForUser = 114,
        
        /// <summary>
        /// Enum ActivityOnTerminalNotAllowedForUser for value: ActivityOnTerminalNotAllowedForUser
        /// </summary>
        [EnumMember(Value = "ActivityOnTerminalNotAllowedForUser")]
        ActivityOnTerminalNotAllowedForUser = 115,
        
        /// <summary>
        /// Enum ActivityOnInstallmentPlanNotAllowedForUser for value: ActivityOnInstallmentPlanNotAllowedForUser
        /// </summary>
        [EnumMember(Value = "ActivityOnInstallmentPlanNotAllowedForUser")]
        ActivityOnInstallmentPlanNotAllowedForUser = 116,
        
        /// <summary>
        /// Enum TokenNotFoundOrExpired for value: TokenNotFoundOrExpired
        /// </summary>
        [EnumMember(Value = "TokenNotFoundOrExpired")]
        TokenNotFoundOrExpired = 117,
        
        /// <summary>
        /// Enum TokenAlreadyUsed for value: TokenAlreadyUsed
        /// </summary>
        [EnumMember(Value = "TokenAlreadyUsed")]
        TokenAlreadyUsed = 118,
        
        /// <summary>
        /// Enum UserOldPassrodIsIncorrect for value: UserOldPassrodIsIncorrect
        /// </summary>
        [EnumMember(Value = "UserOldPassrodIsIncorrect")]
        UserOldPassrodIsIncorrect = 119,
        
        /// <summary>
        /// Enum UserNewPasswordAlreadyUsed for value: UserNewPasswordAlreadyUsed
        /// </summary>
        [EnumMember(Value = "UserNewPasswordAlreadyUsed")]
        UserNewPasswordAlreadyUsed = 120,
        
        /// <summary>
        /// Enum UserEmailNotFound for value: UserEmailNotFound
        /// </summary>
        [EnumMember(Value = "UserEmailNotFound")]
        UserEmailNotFound = 121,
        
        /// <summary>
        /// Enum PasswordExpired for value: PasswordExpired
        /// </summary>
        [EnumMember(Value = "PasswordExpired")]
        PasswordExpired = 122,
        
        /// <summary>
        /// Enum TouchPointNotFound for value: TouchPointNotFound
        /// </summary>
        [EnumMember(Value = "TouchPointNotFound")]
        TouchPointNotFound = 123,
        
        /// <summary>
        /// Enum ActivityNotAllowedForPublicSession for value: ActivityNotAllowedForPublicSession
        /// </summary>
        [EnumMember(Value = "ActivityNotAllowedForPublicSession")]
        ActivityNotAllowedForPublicSession = 124,
        
        /// <summary>
        /// Enum UserRelatesToMoreThanSingleBusinessUnit for value: UserRelatesToMoreThanSingleBusinessUnit
        /// </summary>
        [EnumMember(Value = "UserRelatesToMoreThanSingleBusinessUnit")]
        UserRelatesToMoreThanSingleBusinessUnit = 125,
        
        /// <summary>
        /// Enum InvalidPasswordStrength for value: InvalidPasswordStrength
        /// </summary>
        [EnumMember(Value = "InvalidPasswordStrength")]
        InvalidPasswordStrength = 126,
        
        /// <summary>
        /// Enum InvalidRequestedStrategy for value: InvalidRequestedStrategy
        /// </summary>
        [EnumMember(Value = "InvalidRequestedStrategy")]
        InvalidRequestedStrategy = 127,
        
        /// <summary>
        /// Enum RoleNotAllowedForUser for value: RoleNotAllowedForUser
        /// </summary>
        [EnumMember(Value = "RoleNotAllowedForUser")]
        RoleNotAllowedForUser = 128,
        
        /// <summary>
        /// Enum UserNameAlreadyExists for value: UserNameAlreadyExists
        /// </summary>
        [EnumMember(Value = "UserNameAlreadyExists")]
        UserNameAlreadyExists = 129,
        
        /// <summary>
        /// Enum ActivityNotAllowedForAuthenticationType for value: ActivityNotAllowedForAuthenticationType
        /// </summary>
        [EnumMember(Value = "ActivityNotAllowedForAuthenticationType")]
        ActivityNotAllowedForAuthenticationType = 130,
        
        /// <summary>
        /// Enum ActivityNotAllowedDueToPrivacyProtection for value: ActivityNotAllowedDueToPrivacyProtection
        /// </summary>
        [EnumMember(Value = "ActivityNotAllowedDueToPrivacyProtection")]
        ActivityNotAllowedDueToPrivacyProtection = 131,
        
        /// <summary>
        /// Enum BusinessUnitNotAllowedForUser for value: BusinessUnitNotAllowedForUser
        /// </summary>
        [EnumMember(Value = "BusinessUnitNotAllowedForUser")]
        BusinessUnitNotAllowedForUser = 132,
        
        /// <summary>
        /// Enum UpdateToDifferentBusinessPartyRoleNotAllowed for value: UpdateToDifferentBusinessPartyRoleNotAllowed
        /// </summary>
        [EnumMember(Value = "UpdateToDifferentBusinessPartyRoleNotAllowed")]
        UpdateToDifferentBusinessPartyRoleNotAllowed = 133,
        
        /// <summary>
        /// Enum ExternalAuthAmountNotValid for value: ExternalAuthAmountNotValid
        /// </summary>
        [EnumMember(Value = "ExternalAuthAmountNotValid")]
        ExternalAuthAmountNotValid = 134,
        
        /// <summary>
        /// Enum CaptchaNotSuccessful for value: CaptchaNotSuccessful
        /// </summary>
        [EnumMember(Value = "CaptchaNotSuccessful")]
        CaptchaNotSuccessful = 135,
        
        /// <summary>
        /// Enum ReportNotAllowedForUser for value: ReportNotAllowedForUser
        /// </summary>
        [EnumMember(Value = "ReportNotAllowedForUser")]
        ReportNotAllowedForUser = 136,
        
        /// <summary>
        /// Enum InvalidPeriodRangeValues for value: InvalidPeriodRangeValues
        /// </summary>
        [EnumMember(Value = "InvalidPeriodRangeValues")]
        InvalidPeriodRangeValues = 137,
        
        /// <summary>
        /// Enum RemovedTransactionCurrencyIsInUseByTerminal for value: RemovedTransactionCurrencyIsInUseByTerminal
        /// </summary>
        [EnumMember(Value = "RemovedTransactionCurrencyIsInUseByTerminal")]
        RemovedTransactionCurrencyIsInUseByTerminal = 138,
        
        /// <summary>
        /// Enum RemovedTransactionCurrencyIsInUseByAccountingCurrency for value: RemovedTransactionCurrencyIsInUseByAccountingCurrency
        /// </summary>
        [EnumMember(Value = "RemovedTransactionCurrencyIsInUseByAccountingCurrency")]
        RemovedTransactionCurrencyIsInUseByAccountingCurrency = 139,
        
        /// <summary>
        /// Enum InvalidAmountRangeValues for value: InvalidAmountRangeValues
        /// </summary>
        [EnumMember(Value = "InvalidAmountRangeValues")]
        InvalidAmountRangeValues = 140,
        
        /// <summary>
        /// Enum EmailCannotBeEmpty for value: EmailCannotBeEmpty
        /// </summary>
        [EnumMember(Value = "EmailCannotBeEmpty")]
        EmailCannotBeEmpty = 141,
        
        /// <summary>
        /// Enum CountryNotSupported for value: CountryNotSupported
        /// </summary>
        [EnumMember(Value = "CountryNotSupported")]
        CountryNotSupported = 142,
        
        /// <summary>
        /// Enum TerminalApiKeyMissing for value: TerminalApiKeyMissing
        /// </summary>
        [EnumMember(Value = "TerminalApiKeyMissing")]
        TerminalApiKeyMissing = 143,
        
        /// <summary>
        /// Enum TotalWeightedValuesNotEqual100 for value: TotalWeightedValuesNotEqual100
        /// </summary>
        [EnumMember(Value = "TotalWeightedValuesNotEqual100")]
        TotalWeightedValuesNotEqual100 = 144,
        
        /// <summary>
        /// Enum AmountExceededMaxAllowedForFundingOperation for value: AmountExceededMaxAllowedForFundingOperation
        /// </summary>
        [EnumMember(Value = "AmountExceededMaxAllowedForFundingOperation")]
        AmountExceededMaxAllowedForFundingOperation = 145,
        
        /// <summary>
        /// Enum FundedPlansCannotBeCanceledWithoutRefund for value: FundedPlansCannotBeCanceledWithoutRefund
        /// </summary>
        [EnumMember(Value = "FundedPlansCannotBeCanceledWithoutRefund")]
        FundedPlansCannotBeCanceledWithoutRefund = 146,
        
        /// <summary>
        /// Enum InstallmentsCannotBeUpdatedOnFundedPlanWithLowerPlanAmount for value: InstallmentsCannotBeUpdatedOnFundedPlanWithLowerPlanAmount
        /// </summary>
        [EnumMember(Value = "InstallmentsCannotBeUpdatedOnFundedPlanWithLowerPlanAmount")]
        InstallmentsCannotBeUpdatedOnFundedPlanWithLowerPlanAmount = 147,
        
        /// <summary>
        /// Enum NoFundingPlanInfoForInstallmentPlan for value: NoFundingPlanInfoForInstallmentPlan
        /// </summary>
        [EnumMember(Value = "NoFundingPlanInfoForInstallmentPlan")]
        NoFundingPlanInfoForInstallmentPlan = 148,
        
        /// <summary>
        /// Enum NoFundingSetupForBusinessUnit for value: NoFundingSetupForBusinessUnit
        /// </summary>
        [EnumMember(Value = "NoFundingSetupForBusinessUnit")]
        NoFundingSetupForBusinessUnit = 149,
        
        /// <summary>
        /// Enum MerchantIsNotFinancedYet for value: MerchantIsNotFinancedYet
        /// </summary>
        [EnumMember(Value = "MerchantIsNotFinancedYet")]
        MerchantIsNotFinancedYet = 150,
        
        /// <summary>
        /// Enum SalesforceOperationError for value: SalesforceOperationError
        /// </summary>
        [EnumMember(Value = "SalesforceOperationError")]
        SalesforceOperationError = 151,
        
        /// <summary>
        /// Enum MultipleMessagingMeansProvided for value: MultipleMessagingMeansProvided
        /// </summary>
        [EnumMember(Value = "MultipleMessagingMeansProvided")]
        MultipleMessagingMeansProvided = 152,
        
        /// <summary>
        /// Enum NoMessagingMeansWasProvided for value: NoMessagingMeansWasProvided
        /// </summary>
        [EnumMember(Value = "NoMessagingMeansWasProvided")]
        NoMessagingMeansWasProvided = 153,
        
        /// <summary>
        /// Enum LogoCannotBeRemoved for value: LogoCannotBeRemoved
        /// </summary>
        [EnumMember(Value = "LogoCannotBeRemoved")]
        LogoCannotBeRemoved = 154,
        
        /// <summary>
        /// Enum PlanIsLockedForChanges for value: PlanIsLockedForChanges
        /// </summary>
        [EnumMember(Value = "PlanIsLockedForChanges")]
        PlanIsLockedForChanges = 155,
        
        /// <summary>
        /// Enum CannotPerfromActionDueToActiveDelaydCharge for value: CannotPerfromActionDueToActiveDelaydCharge
        /// </summary>
        [EnumMember(Value = "CannotPerfromActionDueToActiveDelaydCharge")]
        CannotPerfromActionDueToActiveDelaydCharge = 156,
        
        /// <summary>
        /// Enum ExternalInstallmentProviderError for value: ExternalInstallmentProviderError
        /// </summary>
        [EnumMember(Value = "ExternalInstallmentProviderError")]
        ExternalInstallmentProviderError = 157,
        
        /// <summary>
        /// Enum CannotChangeAmountWhenStatusIsntInitialize for value: CannotChangeAmountWhenStatusIsntInitialize
        /// </summary>
        [EnumMember(Value = "CannotChangeAmountWhenStatusIsntInitialize")]
        CannotChangeAmountWhenStatusIsntInitialize = 158,
        
        /// <summary>
        /// Enum InvalidCCCardTypeNotSupportedMoreThanXInstallments for value: InvalidCCCardTypeNotSupportedMoreThanXInstallments
        /// </summary>
        [EnumMember(Value = "InvalidCCCardTypeNotSupportedMoreThanXInstallments")]
        InvalidCCCardTypeNotSupportedMoreThanXInstallments = 159,
        
        /// <summary>
        /// Enum InvalidCCCardTypeNotSupportedMoreThanXAmount for value: InvalidCCCardTypeNotSupportedMoreThanXAmount
        /// </summary>
        [EnumMember(Value = "InvalidCCCardTypeNotSupportedMoreThanXAmount")]
        InvalidCCCardTypeNotSupportedMoreThanXAmount = 160,
        
        /// <summary>
        /// Enum PlanAmountExceedsAllowedDecimalPlaces for value: PlanAmountExceedsAllowedDecimalPlaces
        /// </summary>
        [EnumMember(Value = "PlanAmountExceedsAllowedDecimalPlaces")]
        PlanAmountExceedsAllowedDecimalPlaces = 161,
        
        /// <summary>
        /// Enum InvalidCCCardBrandNotSupportedMoreThanXInstallments for value: InvalidCCCardBrandNotSupportedMoreThanXInstallments
        /// </summary>
        [EnumMember(Value = "InvalidCCCardBrandNotSupportedMoreThanXInstallments")]
        InvalidCCCardBrandNotSupportedMoreThanXInstallments = 162,
        
        /// <summary>
        /// Enum InvalidCCCardBrandNotSupportedMoreThanXAmount for value: InvalidCCCardBrandNotSupportedMoreThanXAmount
        /// </summary>
        [EnumMember(Value = "InvalidCCCardBrandNotSupportedMoreThanXAmount")]
        InvalidCCCardBrandNotSupportedMoreThanXAmount = 163,
        
        /// <summary>
        /// Enum EmailNotVerified for value: EmailNotVerified
        /// </summary>
        [EnumMember(Value = "EmailNotVerified")]
        EmailNotVerified = 164,
        
        /// <summary>
        /// Enum InvalidCcPrepaidCardNotSupportedMoreThanXInstallments for value: InvalidCcPrepaidCardNotSupportedMoreThanXInstallments
        /// </summary>
        [EnumMember(Value = "InvalidCcPrepaidCardNotSupportedMoreThanXInstallments")]
        InvalidCcPrepaidCardNotSupportedMoreThanXInstallments = 165,
        
        /// <summary>
        /// Enum InvalidCcPrepaidCardNotSupportedMoreThanXAmount for value: InvalidCcPrepaidCardNotSupportedMoreThanXAmount
        /// </summary>
        [EnumMember(Value = "InvalidCcPrepaidCardNotSupportedMoreThanXAmount")]
        InvalidCcPrepaidCardNotSupportedMoreThanXAmount = 166,
        
        /// <summary>
        /// Enum PlanContextNotValidForNumberOfInstallments for value: PlanContextNotValidForNumberOfInstallments
        /// </summary>
        [EnumMember(Value = "PlanContextNotValidForNumberOfInstallments")]
        PlanContextNotValidForNumberOfInstallments = 167,
        
        /// <summary>
        /// Enum PlanContextNotValidForAmount for value: PlanContextNotValidForAmount
        /// </summary>
        [EnumMember(Value = "PlanContextNotValidForAmount")]
        PlanContextNotValidForAmount = 168,
        
        /// <summary>
        /// Enum UserEmailAlreadyExists for value: UserEmailAlreadyExists
        /// </summary>
        [EnumMember(Value = "UserEmailAlreadyExists")]
        UserEmailAlreadyExists = 169,
        
        /// <summary>
        /// Enum UserNotFound for value: UserNotFound
        /// </summary>
        [EnumMember(Value = "UserNotFound")]
        UserNotFound = 170,
        
        /// <summary>
        /// Enum None for value: None
        /// </summary>
        [EnumMember(Value = "None")]
        None = 171
    }

}
