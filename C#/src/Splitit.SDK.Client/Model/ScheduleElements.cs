/* 
 * splitit-web-api-public-sdk
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Splitit.SDK.Client.Client.SwaggerDateConverter;

namespace Splitit.SDK.Client.Model
{
    /// <summary>
    /// ScheduleElements
    /// </summary>
    [DataContract]
    public partial class ScheduleElements :  IEquatable<ScheduleElements>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ScheduleElements" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ScheduleElements() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ScheduleElements" /> class.
        /// </summary>
        /// <param name="installmentNumber">installmentNumber (required).</param>
        /// <param name="chargeDate">chargeDate.</param>
        /// <param name="chargeAmount">chargeAmount (required).</param>
        /// <param name="requiredCredit">requiredCredit (required).</param>
        public ScheduleElements(int? installmentNumber = default(int?), string chargeDate = default(string), decimal? chargeAmount = default(decimal?), decimal? requiredCredit = default(decimal?))
        {
            this.InstallmentNumber = installmentNumber;
            this.ChargeAmount = chargeAmount;
            this.RequiredCredit = requiredCredit;
            this.ChargeDate = chargeDate;
        }

        
        /// <summary>
        /// Gets or Sets InstallmentNumber
        /// </summary>
        [DataMember(Name="InstallmentNumber", EmitDefaultValue=false)]
        public int? InstallmentNumber { get; set; }

        /// <summary>
        /// Gets or Sets ChargeDate
        /// </summary>
        [DataMember(Name="ChargeDate", EmitDefaultValue=false)]
        public string ChargeDate { get; set; }

        /// <summary>
        /// Gets or Sets ChargeAmount
        /// </summary>
        [DataMember(Name="ChargeAmount", EmitDefaultValue=false)]
        public decimal? ChargeAmount { get; set; }

        /// <summary>
        /// Gets or Sets RequiredCredit
        /// </summary>
        [DataMember(Name="RequiredCredit", EmitDefaultValue=false)]
        public decimal? RequiredCredit { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ScheduleElements {\n");
            sb.Append("  InstallmentNumber: ").Append(InstallmentNumber).Append("\n");
            sb.Append("  ChargeDate: ").Append(ChargeDate).Append("\n");
            sb.Append("  ChargeAmount: ").Append(ChargeAmount).Append("\n");
            sb.Append("  RequiredCredit: ").Append(RequiredCredit).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ScheduleElements);
        }

        /// <summary>
        /// Returns true if ScheduleElements instances are equal
        /// </summary>
        /// <param name="input">Instance of ScheduleElements to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ScheduleElements input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.InstallmentNumber == input.InstallmentNumber ||
                    (this.InstallmentNumber != null &&
                    this.InstallmentNumber.Equals(input.InstallmentNumber))
                ) && 
                (
                    this.ChargeDate == input.ChargeDate ||
                    (this.ChargeDate != null &&
                    this.ChargeDate.Equals(input.ChargeDate))
                ) && 
                (
                    this.ChargeAmount == input.ChargeAmount ||
                    (this.ChargeAmount != null &&
                    this.ChargeAmount.Equals(input.ChargeAmount))
                ) && 
                (
                    this.RequiredCredit == input.RequiredCredit ||
                    (this.RequiredCredit != null &&
                    this.RequiredCredit.Equals(input.RequiredCredit))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.InstallmentNumber != null)
                    hashCode = hashCode * 59 + this.InstallmentNumber.GetHashCode();
                if (this.ChargeDate != null)
                    hashCode = hashCode * 59 + this.ChargeDate.GetHashCode();
                if (this.ChargeAmount != null)
                    hashCode = hashCode * 59 + this.ChargeAmount.GetHashCode();
                if (this.RequiredCredit != null)
                    hashCode = hashCode * 59 + this.RequiredCredit.GetHashCode();
                return hashCode;
            }
        }
    }

}
