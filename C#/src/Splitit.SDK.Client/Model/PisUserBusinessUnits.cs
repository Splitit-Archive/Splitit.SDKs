/* 
 * splitit-web-api-public-sdk
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Splitit.SDK.Client.Client.SwaggerDateConverter;

namespace Splitit.SDK.Client.Model
{
    /// <summary>
    /// PisUserBusinessUnits
    /// </summary>
    [DataContract]
    public partial class PisUserBusinessUnits :  IEquatable<PisUserBusinessUnits>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PisUserBusinessUnits" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PisUserBusinessUnits() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PisUserBusinessUnits" /> class.
        /// </summary>
        /// <param name="pisUserUniqueId">pisUserUniqueId.</param>
        /// <param name="pisUserId">pisUserId (required).</param>
        /// <param name="businessUnitId">businessUnitId (required).</param>
        /// <param name="businessUnit">businessUnit.</param>
        /// <param name="pisUser">pisUser.</param>
        public PisUserBusinessUnits(string pisUserUniqueId = default(string), long? pisUserId = default(long?), long? businessUnitId = default(long?), BusinessUnits businessUnit = default(BusinessUnits), Object pisUser = default(Object))
        {
            this.PisUserId = pisUserId;
            this.BusinessUnitId = businessUnitId;
            this.PisUserUniqueId = pisUserUniqueId;
            this.BusinessUnit = businessUnit;
            this.PisUser = pisUser;
        }

        
        /// <summary>
        /// Gets or Sets PisUserUniqueId
        /// </summary>
        [DataMember(Name="PisUserUniqueId", EmitDefaultValue=false)]
        public string PisUserUniqueId { get; set; }

        /// <summary>
        /// Gets or Sets PisUserId
        /// </summary>
        [DataMember(Name="PisUserId", EmitDefaultValue=false)]
        public long? PisUserId { get; set; }

        /// <summary>
        /// Gets or Sets BusinessUnitId
        /// </summary>
        [DataMember(Name="BusinessUnitId", EmitDefaultValue=false)]
        public long? BusinessUnitId { get; set; }

        /// <summary>
        /// Gets or Sets BusinessUnit
        /// </summary>
        [DataMember(Name="BusinessUnit", EmitDefaultValue=false)]
        public BusinessUnits BusinessUnit { get; set; }

        /// <summary>
        /// Gets or Sets PisUser
        /// </summary>
        [DataMember(Name="PisUser", EmitDefaultValue=false)]
        public Object PisUser { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PisUserBusinessUnits {\n");
            sb.Append("  PisUserUniqueId: ").Append(PisUserUniqueId).Append("\n");
            sb.Append("  PisUserId: ").Append(PisUserId).Append("\n");
            sb.Append("  BusinessUnitId: ").Append(BusinessUnitId).Append("\n");
            sb.Append("  BusinessUnit: ").Append(BusinessUnit).Append("\n");
            sb.Append("  PisUser: ").Append(PisUser).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PisUserBusinessUnits);
        }

        /// <summary>
        /// Returns true if PisUserBusinessUnits instances are equal
        /// </summary>
        /// <param name="input">Instance of PisUserBusinessUnits to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PisUserBusinessUnits input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PisUserUniqueId == input.PisUserUniqueId ||
                    (this.PisUserUniqueId != null &&
                    this.PisUserUniqueId.Equals(input.PisUserUniqueId))
                ) && 
                (
                    this.PisUserId == input.PisUserId ||
                    (this.PisUserId != null &&
                    this.PisUserId.Equals(input.PisUserId))
                ) && 
                (
                    this.BusinessUnitId == input.BusinessUnitId ||
                    (this.BusinessUnitId != null &&
                    this.BusinessUnitId.Equals(input.BusinessUnitId))
                ) && 
                (
                    this.BusinessUnit == input.BusinessUnit ||
                    (this.BusinessUnit != null &&
                    this.BusinessUnit.Equals(input.BusinessUnit))
                ) && 
                (
                    this.PisUser == input.PisUser ||
                    (this.PisUser != null &&
                    this.PisUser.Equals(input.PisUser))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PisUserUniqueId != null)
                    hashCode = hashCode * 59 + this.PisUserUniqueId.GetHashCode();
                if (this.PisUserId != null)
                    hashCode = hashCode * 59 + this.PisUserId.GetHashCode();
                if (this.BusinessUnitId != null)
                    hashCode = hashCode * 59 + this.BusinessUnitId.GetHashCode();
                if (this.BusinessUnit != null)
                    hashCode = hashCode * 59 + this.BusinessUnit.GetHashCode();
                if (this.PisUser != null)
                    hashCode = hashCode * 59 + this.PisUser.GetHashCode();
                return hashCode;
            }
        }
    }

}
