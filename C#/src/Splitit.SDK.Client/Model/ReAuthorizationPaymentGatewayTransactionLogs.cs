/* 
 * splitit-web-api-public-sdk
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Splitit.SDK.Client.Client.SwaggerDateConverter;

namespace Splitit.SDK.Client.Model
{
    /// <summary>
    /// ReAuthorizationPaymentGatewayTransactionLogs
    /// </summary>
    [DataContract]
    public partial class ReAuthorizationPaymentGatewayTransactionLogs :  IEquatable<ReAuthorizationPaymentGatewayTransactionLogs>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ReAuthorizationPaymentGatewayTransactionLogs" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ReAuthorizationPaymentGatewayTransactionLogs() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ReAuthorizationPaymentGatewayTransactionLogs" /> class.
        /// </summary>
        /// <param name="reAuthorizationId">reAuthorizationId (required).</param>
        /// <param name="paymentGatewayTransactionLogId">paymentGatewayTransactionLogId (required).</param>
        /// <param name="paymentGatewayTransactionLog">paymentGatewayTransactionLog.</param>
        /// <param name="reAuthorization">reAuthorization.</param>
        public ReAuthorizationPaymentGatewayTransactionLogs(long? reAuthorizationId = default(long?), long? paymentGatewayTransactionLogId = default(long?), PaymentGatewayTransactionLogs paymentGatewayTransactionLog = default(PaymentGatewayTransactionLogs), ReAuthorizations reAuthorization = default(ReAuthorizations))
        {
            this.ReAuthorizationId = reAuthorizationId;
            this.PaymentGatewayTransactionLogId = paymentGatewayTransactionLogId;
            this.PaymentGatewayTransactionLog = paymentGatewayTransactionLog;
            this.ReAuthorization = reAuthorization;
        }

        
        /// <summary>
        /// Gets or Sets ReAuthorizationId
        /// </summary>
        [DataMember(Name="ReAuthorizationId", EmitDefaultValue=false)]
        public long? ReAuthorizationId { get; set; }

        /// <summary>
        /// Gets or Sets PaymentGatewayTransactionLogId
        /// </summary>
        [DataMember(Name="PaymentGatewayTransactionLogId", EmitDefaultValue=false)]
        public long? PaymentGatewayTransactionLogId { get; set; }

        /// <summary>
        /// Gets or Sets PaymentGatewayTransactionLog
        /// </summary>
        [DataMember(Name="PaymentGatewayTransactionLog", EmitDefaultValue=false)]
        public PaymentGatewayTransactionLogs PaymentGatewayTransactionLog { get; set; }

        /// <summary>
        /// Gets or Sets ReAuthorization
        /// </summary>
        [DataMember(Name="ReAuthorization", EmitDefaultValue=false)]
        public ReAuthorizations ReAuthorization { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ReAuthorizationPaymentGatewayTransactionLogs {\n");
            sb.Append("  ReAuthorizationId: ").Append(ReAuthorizationId).Append("\n");
            sb.Append("  PaymentGatewayTransactionLogId: ").Append(PaymentGatewayTransactionLogId).Append("\n");
            sb.Append("  PaymentGatewayTransactionLog: ").Append(PaymentGatewayTransactionLog).Append("\n");
            sb.Append("  ReAuthorization: ").Append(ReAuthorization).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ReAuthorizationPaymentGatewayTransactionLogs);
        }

        /// <summary>
        /// Returns true if ReAuthorizationPaymentGatewayTransactionLogs instances are equal
        /// </summary>
        /// <param name="input">Instance of ReAuthorizationPaymentGatewayTransactionLogs to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ReAuthorizationPaymentGatewayTransactionLogs input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ReAuthorizationId == input.ReAuthorizationId ||
                    (this.ReAuthorizationId != null &&
                    this.ReAuthorizationId.Equals(input.ReAuthorizationId))
                ) && 
                (
                    this.PaymentGatewayTransactionLogId == input.PaymentGatewayTransactionLogId ||
                    (this.PaymentGatewayTransactionLogId != null &&
                    this.PaymentGatewayTransactionLogId.Equals(input.PaymentGatewayTransactionLogId))
                ) && 
                (
                    this.PaymentGatewayTransactionLog == input.PaymentGatewayTransactionLog ||
                    (this.PaymentGatewayTransactionLog != null &&
                    this.PaymentGatewayTransactionLog.Equals(input.PaymentGatewayTransactionLog))
                ) && 
                (
                    this.ReAuthorization == input.ReAuthorization ||
                    (this.ReAuthorization != null &&
                    this.ReAuthorization.Equals(input.ReAuthorization))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ReAuthorizationId != null)
                    hashCode = hashCode * 59 + this.ReAuthorizationId.GetHashCode();
                if (this.PaymentGatewayTransactionLogId != null)
                    hashCode = hashCode * 59 + this.PaymentGatewayTransactionLogId.GetHashCode();
                if (this.PaymentGatewayTransactionLog != null)
                    hashCode = hashCode * 59 + this.PaymentGatewayTransactionLog.GetHashCode();
                if (this.ReAuthorization != null)
                    hashCode = hashCode * 59 + this.ReAuthorization.GetHashCode();
                return hashCode;
            }
        }
    }

}
