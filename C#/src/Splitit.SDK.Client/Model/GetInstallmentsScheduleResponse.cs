/* 
 * splitit-web-api-public-sdk
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Splitit.SDK.Client.Client.SwaggerDateConverter;

namespace Splitit.SDK.Client.Model
{
    /// <summary>
    /// GetInstallmentsScheduleResponse
    /// </summary>
    [DataContract]
    public partial class GetInstallmentsScheduleResponse :  IEquatable<GetInstallmentsScheduleResponse>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetInstallmentsScheduleResponse" /> class.
        /// </summary>
        /// <param name="responseHeader">responseHeader.</param>
        /// <param name="schedules">schedules.</param>
        /// <param name="installmentsPicker">installmentsPicker.</param>
        /// <param name="headline">headline.</param>
        public GetInstallmentsScheduleResponse(ResponseHeader responseHeader = default(ResponseHeader), List<Schedule> schedules = default(List<Schedule>), string installmentsPicker = default(string), string headline = default(string))
        {
            this.ResponseHeader = responseHeader;
            this.Schedules = schedules;
            this.InstallmentsPicker = installmentsPicker;
            this.Headline = headline;
        }

        
        /// <summary>
        /// Gets or Sets ResponseHeader
        /// </summary>
        [DataMember(Name="ResponseHeader", EmitDefaultValue=false)]
        public ResponseHeader ResponseHeader { get; set; }

        /// <summary>
        /// Gets or Sets Schedules
        /// </summary>
        [DataMember(Name="Schedules", EmitDefaultValue=false)]
        public List<Schedule> Schedules { get; set; }

        /// <summary>
        /// Gets or Sets InstallmentsPicker
        /// </summary>
        [DataMember(Name="InstallmentsPicker", EmitDefaultValue=false)]
        public string InstallmentsPicker { get; set; }

        /// <summary>
        /// Gets or Sets Headline
        /// </summary>
        [DataMember(Name="Headline", EmitDefaultValue=false)]
        public string Headline { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetInstallmentsScheduleResponse {\n");
            sb.Append("  ResponseHeader: ").Append(ResponseHeader).Append("\n");
            sb.Append("  Schedules: ").Append(Schedules).Append("\n");
            sb.Append("  InstallmentsPicker: ").Append(InstallmentsPicker).Append("\n");
            sb.Append("  Headline: ").Append(Headline).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetInstallmentsScheduleResponse);
        }

        /// <summary>
        /// Returns true if GetInstallmentsScheduleResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of GetInstallmentsScheduleResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetInstallmentsScheduleResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ResponseHeader == input.ResponseHeader ||
                    (this.ResponseHeader != null &&
                    this.ResponseHeader.Equals(input.ResponseHeader))
                ) && 
                (
                    this.Schedules == input.Schedules ||
                    this.Schedules != null &&
                    this.Schedules.SequenceEqual(input.Schedules)
                ) && 
                (
                    this.InstallmentsPicker == input.InstallmentsPicker ||
                    (this.InstallmentsPicker != null &&
                    this.InstallmentsPicker.Equals(input.InstallmentsPicker))
                ) && 
                (
                    this.Headline == input.Headline ||
                    (this.Headline != null &&
                    this.Headline.Equals(input.Headline))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ResponseHeader != null)
                    hashCode = hashCode * 59 + this.ResponseHeader.GetHashCode();
                if (this.Schedules != null)
                    hashCode = hashCode * 59 + this.Schedules.GetHashCode();
                if (this.InstallmentsPicker != null)
                    hashCode = hashCode * 59 + this.InstallmentsPicker.GetHashCode();
                if (this.Headline != null)
                    hashCode = hashCode * 59 + this.Headline.GetHashCode();
                return hashCode;
            }
        }
    }

}
