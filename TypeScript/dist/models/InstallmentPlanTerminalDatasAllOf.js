"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var runtime_1 = require("../runtime");
var _1 = require("./");
function InstallmentPlanTerminalDatasAllOfFromJSON(json) {
    return InstallmentPlanTerminalDatasAllOfFromJSONTyped(json, false);
}
exports.InstallmentPlanTerminalDatasAllOfFromJSON = InstallmentPlanTerminalDatasAllOfFromJSON;
function InstallmentPlanTerminalDatasAllOfFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'scpVariableCostAnnualPercent': json['ScpVariableCostAnnualPercent'],
        'scpFundingPercent': json['ScpFundingPercent'],
        'scpReservePoolPercent': json['ScpReservePoolPercent'],
        'scpReturnMerchantMaxDays': json['ScpReturnMerchantMaxDays'],
        'scpRevenueSharePercent': json['ScpRevenueSharePercent'],
        'scpFixedCost': json['ScpFixedCost'],
        'accountingCurrencyId': !runtime_1.exists(json, 'AccountingCurrencyId') ? undefined : json['AccountingCurrencyId'],
        'fundingRuleScpSettingId': !runtime_1.exists(json, 'FundingRuleScpSettingId') ? undefined : json['FundingRuleScpSettingId'],
        'feesRuleDataId': !runtime_1.exists(json, 'FeesRuleDataId') ? undefined : json['FeesRuleDataId'],
        'accountingCurrency': !runtime_1.exists(json, 'AccountingCurrency') ? undefined : _1.CurrenciesFromJSON(json['AccountingCurrency']),
        'feesRuleData': !runtime_1.exists(json, 'FeesRuleData') ? undefined : _1.FeesRuleDatasFromJSON(json['FeesRuleData']),
        'fundingRuleScpSetting': !runtime_1.exists(json, 'FundingRuleScpSetting') ? undefined : _1.FundingRuleDataScpProviderSettingFromJSON(json['FundingRuleScpSetting']),
        'installmentPlans': !runtime_1.exists(json, 'InstallmentPlans') ? undefined : (json['InstallmentPlans'].map(_1.InstallmentPlansFromJSON)),
    };
}
exports.InstallmentPlanTerminalDatasAllOfFromJSONTyped = InstallmentPlanTerminalDatasAllOfFromJSONTyped;
function InstallmentPlanTerminalDatasAllOfToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'ScpVariableCostAnnualPercent': value.scpVariableCostAnnualPercent,
        'ScpFundingPercent': value.scpFundingPercent,
        'ScpReservePoolPercent': value.scpReservePoolPercent,
        'ScpReturnMerchantMaxDays': value.scpReturnMerchantMaxDays,
        'ScpRevenueSharePercent': value.scpRevenueSharePercent,
        'ScpFixedCost': value.scpFixedCost,
        'AccountingCurrencyId': value.accountingCurrencyId,
        'FundingRuleScpSettingId': value.fundingRuleScpSettingId,
        'FeesRuleDataId': value.feesRuleDataId,
        'AccountingCurrency': _1.CurrenciesToJSON(value.accountingCurrency),
        'FeesRuleData': _1.FeesRuleDatasToJSON(value.feesRuleData),
        'FundingRuleScpSetting': _1.FundingRuleDataScpProviderSettingToJSON(value.fundingRuleScpSetting),
        'InstallmentPlans': value.installmentPlans === undefined ? undefined : (value.installmentPlans.map(_1.InstallmentPlansToJSON)),
    };
}
exports.InstallmentPlanTerminalDatasAllOfToJSON = InstallmentPlanTerminalDatasAllOfToJSON;
