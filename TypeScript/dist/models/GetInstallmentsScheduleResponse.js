"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var runtime_1 = require("../runtime");
var _1 = require("./");
function GetInstallmentsScheduleResponseFromJSON(json) {
    return GetInstallmentsScheduleResponseFromJSONTyped(json, false);
}
exports.GetInstallmentsScheduleResponseFromJSON = GetInstallmentsScheduleResponseFromJSON;
function GetInstallmentsScheduleResponseFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'responseHeader': !runtime_1.exists(json, 'ResponseHeader') ? undefined : _1.ResponseHeaderFromJSON(json['ResponseHeader']),
        'schedules': !runtime_1.exists(json, 'Schedules') ? undefined : (json['Schedules'].map(_1.ScheduleFromJSON)),
        'installmentsPicker': !runtime_1.exists(json, 'InstallmentsPicker') ? undefined : json['InstallmentsPicker'],
        'headline': !runtime_1.exists(json, 'Headline') ? undefined : json['Headline'],
    };
}
exports.GetInstallmentsScheduleResponseFromJSONTyped = GetInstallmentsScheduleResponseFromJSONTyped;
function GetInstallmentsScheduleResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'ResponseHeader': _1.ResponseHeaderToJSON(value.responseHeader),
        'Schedules': value.schedules === undefined ? undefined : (value.schedules.map(_1.ScheduleToJSON)),
        'InstallmentsPicker': value.installmentsPicker,
        'Headline': value.headline,
    };
}
exports.GetInstallmentsScheduleResponseToJSON = GetInstallmentsScheduleResponseToJSON;
