/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AccountingParty, BusinessUnits, Currencies, FeesDocuments, FeesRuleDatas, FeesTypes, InstallmentPlans, Installments, Money2, RangeType } from './';
/**
 *
 * @export
 * @interface FeesDocumentsAllOf
 */
export interface FeesDocumentsAllOf {
    /**
     *
     * @type {number}
     * @memberof FeesDocumentsAllOf
     */
    feeAmountInEffectiveCurrencyAmount: number;
    /**
     *
     * @type {number}
     * @memberof FeesDocumentsAllOf
     */
    feeAmountInTransactionCurrencyAmount: number;
    /**
     *
     * @type {number}
     * @memberof FeesDocumentsAllOf
     */
    feeAmountInUniformCurrencyAmount: number;
    /**
     *
     * @type {number}
     * @memberof FeesDocumentsAllOf
     */
    effectiveCurrencyId: number;
    /**
     *
     * @type {number}
     * @memberof FeesDocumentsAllOf
     */
    transactionCurrencyId?: number;
    /**
     *
     * @type {number}
     * @memberof FeesDocumentsAllOf
     */
    uniformCurrencyId: number;
    /**
     *
     * @type {number}
     * @memberof FeesDocumentsAllOf
     */
    referenceFeesDocumentId?: number;
    /**
     *
     * @type {number}
     * @memberof FeesDocumentsAllOf
     */
    installmentId?: number;
    /**
     *
     * @type {number}
     * @memberof FeesDocumentsAllOf
     */
    planId?: number;
    /**
     *
     * @type {number}
     * @memberof FeesDocumentsAllOf
     */
    businessUnitId?: number;
    /**
     *
     * @type {Date}
     * @memberof FeesDocumentsAllOf
     */
    effectiveDateUtc: Date;
    /**
     *
     * @type {number}
     * @memberof FeesDocumentsAllOf
     */
    feeRuleDataId?: number;
    /**
     *
     * @type {FeesRuleDatas}
     * @memberof FeesDocumentsAllOf
     */
    feeRuleData?: FeesRuleDatas;
    /**
     *
     * @type {BusinessUnits}
     * @memberof FeesDocumentsAllOf
     */
    businessUnit?: BusinessUnits;
    /**
     *
     * @type {Currencies}
     * @memberof FeesDocumentsAllOf
     */
    effectiveCurrency?: Currencies;
    /**
     *
     * @type {Installments}
     * @memberof FeesDocumentsAllOf
     */
    installment?: Installments;
    /**
     *
     * @type {InstallmentPlans}
     * @memberof FeesDocumentsAllOf
     */
    plan?: InstallmentPlans;
    /**
     *
     * @type {FeesDocuments}
     * @memberof FeesDocumentsAllOf
     */
    referenceFeesDocument?: FeesDocuments;
    /**
     *
     * @type {Currencies}
     * @memberof FeesDocumentsAllOf
     */
    transactionCurrency?: Currencies;
    /**
     *
     * @type {Currencies}
     * @memberof FeesDocumentsAllOf
     */
    uniformCurrency?: Currencies;
    /**
     *
     * @type {Array<FeesDocuments>}
     * @memberof FeesDocumentsAllOf
     */
    inverseReferenceFeesDocument?: Array<FeesDocuments>;
    /**
     *
     * @type {AccountingParty}
     * @memberof FeesDocumentsAllOf
     */
    feeEntity: AccountingParty;
    /**
     *
     * @type {FeesTypes}
     * @memberof FeesDocumentsAllOf
     */
    feeType: FeesTypes;
    /**
     *
     * @type {RangeType}
     * @memberof FeesDocumentsAllOf
     */
    rangeType?: RangeType;
    /**
     *
     * @type {Money2}
     * @memberof FeesDocumentsAllOf
     */
    feeAmountInEffectiveCurrency?: Money2;
    /**
     *
     * @type {Money2}
     * @memberof FeesDocumentsAllOf
     */
    feeAmountInTransactionCurrency?: Money2;
    /**
     *
     * @type {Money2}
     * @memberof FeesDocumentsAllOf
     */
    feeAmountInUniformCurrency?: Money2;
}
export declare function FeesDocumentsAllOfFromJSON(json: any): FeesDocumentsAllOf;
export declare function FeesDocumentsAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeesDocumentsAllOf;
export declare function FeesDocumentsAllOfToJSON(value?: FeesDocumentsAllOf | null): any;
