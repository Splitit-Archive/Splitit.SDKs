"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var runtime_1 = require("../runtime");
var _1 = require("./");
function ScpProvidersAllOfFromJSON(json) {
    return ScpProvidersAllOfFromJSONTyped(json, false);
}
exports.ScpProvidersAllOfFromJSON = ScpProvidersAllOfFromJSON;
function ScpProvidersAllOfFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': json['Id'],
        'name': !runtime_1.exists(json, 'Name') ? undefined : json['Name'],
        'implementationCode': !runtime_1.exists(json, 'ImplementationCode') ? undefined : json['ImplementationCode'],
        'totalFunds': json['TotalFunds'],
        'maxNonSecurePlansPercent': json['MaxNonSecurePlansPercent'],
        'scpVariableCostAnnualPercent': json['ScpVariableCostAnnualPercent'],
        'scpFixedCost': json['ScpFixedCost'],
        'scpRevenueSharePercent': json['ScpRevenueSharePercent'],
        'totalFundsCurrencyId': !runtime_1.exists(json, 'TotalFundsCurrencyId') ? undefined : json['TotalFundsCurrencyId'],
        'emailsList': !runtime_1.exists(json, 'EmailsList') ? undefined : json['EmailsList'],
        'isOperatedBySplitit': !runtime_1.exists(json, 'IsOperatedBySplitit') ? undefined : json['IsOperatedBySplitit'],
        'isFundingBySplitit': json['IsFundingBySplitit'],
        'deductRevenueShareAutomaticallyFromLastInstallment': json['DeductRevenueShareAutomaticallyFromLastInstallment'],
        'fundFirstInstallment': json['FundFirstInstallment'],
        'totalFundsCurrency': !runtime_1.exists(json, 'TotalFundsCurrency') ? undefined : _1.CurrenciesFromJSON(json['TotalFundsCurrency']),
        'parameterGroup': !runtime_1.exists(json, 'ParameterGroup') ? undefined : _1.ParameterGroupsFromJSON(json['ParameterGroup']),
        'scpProvidersCurrencies': !runtime_1.exists(json, 'ScpProvidersCurrencies') ? undefined : (json['ScpProvidersCurrencies'].map(_1.ScpProvidersCurrenciesFromJSON)),
    };
}
exports.ScpProvidersAllOfFromJSONTyped = ScpProvidersAllOfFromJSONTyped;
function ScpProvidersAllOfToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'Id': value.id,
        'Name': value.name,
        'ImplementationCode': value.implementationCode,
        'TotalFunds': value.totalFunds,
        'MaxNonSecurePlansPercent': value.maxNonSecurePlansPercent,
        'ScpVariableCostAnnualPercent': value.scpVariableCostAnnualPercent,
        'ScpFixedCost': value.scpFixedCost,
        'ScpRevenueSharePercent': value.scpRevenueSharePercent,
        'TotalFundsCurrencyId': value.totalFundsCurrencyId,
        'EmailsList': value.emailsList,
        'IsOperatedBySplitit': value.isOperatedBySplitit,
        'IsFundingBySplitit': value.isFundingBySplitit,
        'DeductRevenueShareAutomaticallyFromLastInstallment': value.deductRevenueShareAutomaticallyFromLastInstallment,
        'FundFirstInstallment': value.fundFirstInstallment,
        'TotalFundsCurrency': _1.CurrenciesToJSON(value.totalFundsCurrency),
        'ParameterGroup': _1.ParameterGroupsToJSON(value.parameterGroup),
        'ScpProvidersCurrencies': value.scpProvidersCurrencies === undefined ? undefined : (value.scpProvidersCurrencies.map(_1.ScpProvidersCurrenciesToJSON)),
    };
}
exports.ScpProvidersAllOfToJSON = ScpProvidersAllOfToJSON;
