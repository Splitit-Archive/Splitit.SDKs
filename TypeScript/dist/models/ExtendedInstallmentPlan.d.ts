/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { BuRef, CardData, ConsumerData, FraudCheck, Installment2, MerchantRef, Money, ReAuthorization, ReferenceEntityBase, TestModes } from './';
/**
 *
 * @export
 * @interface ExtendedInstallmentPlan
 */
export interface ExtendedInstallmentPlan {
    /**
     *
     * @type {string}
     * @memberof ExtendedInstallmentPlan
     */
    installmentPlanNumber?: string;
    /**
     *
     * @type {ReferenceEntityBase}
     * @memberof ExtendedInstallmentPlan
     */
    installmentPlanStatus?: ReferenceEntityBase;
    /**
     *
     * @type {Money}
     * @memberof ExtendedInstallmentPlan
     */
    amount?: Money;
    /**
     *
     * @type {Money}
     * @memberof ExtendedInstallmentPlan
     */
    outstandingAmount?: Money;
    /**
     *
     * @type {number}
     * @memberof ExtendedInstallmentPlan
     */
    numberOfInstallments: number;
    /**
     *
     * @type {number}
     * @memberof ExtendedInstallmentPlan
     */
    numberOfProcessedInstallments: number;
    /**
     *
     * @type {Money}
     * @memberof ExtendedInstallmentPlan
     */
    originalAmount?: Money;
    /**
     *
     * @type {Money}
     * @memberof ExtendedInstallmentPlan
     */
    refundAmount?: Money;
    /**
     *
     * @type {ConsumerData}
     * @memberof ExtendedInstallmentPlan
     */
    consumer?: ConsumerData;
    /**
     *
     * @type {CardData}
     * @memberof ExtendedInstallmentPlan
     */
    activeCard?: CardData;
    /**
     *
     * @type {FraudCheck}
     * @memberof ExtendedInstallmentPlan
     */
    fraudCheck?: FraudCheck;
    /**
     *
     * @type {MerchantRef}
     * @memberof ExtendedInstallmentPlan
     */
    merchant?: MerchantRef;
    /**
     *
     * @type {string}
     * @memberof ExtendedInstallmentPlan
     */
    refOrderNumber?: string;
    /**
     *
     * @type {ReferenceEntityBase}
     * @memberof ExtendedInstallmentPlan
     */
    purchaseMethod?: ReferenceEntityBase;
    /**
     *
     * @type {ReferenceEntityBase}
     * @memberof ExtendedInstallmentPlan
     */
    strategy?: ReferenceEntityBase;
    /**
     *
     * @type {ReferenceEntityBase}
     * @memberof ExtendedInstallmentPlan
     */
    delayResolution?: ReferenceEntityBase;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof ExtendedInstallmentPlan
     */
    extendedParams?: {
        [key: string]: string;
    };
    /**
     *
     * @type {boolean}
     * @memberof ExtendedInstallmentPlan
     */
    isFullCaptured: boolean;
    /**
     *
     * @type {boolean}
     * @memberof ExtendedInstallmentPlan
     */
    isChargedBack: boolean;
    /**
     *
     * @type {boolean}
     * @memberof ExtendedInstallmentPlan
     */
    arePaymentsOnHold: boolean;
    /**
     *
     * @type {number}
     * @memberof ExtendedInstallmentPlan
     */
    scpFundingPercent: number;
    /**
     *
     * @type {TestModes}
     * @memberof ExtendedInstallmentPlan
     */
    testMode: TestModes;
    /**
     *
     * @type {Date}
     * @memberof ExtendedInstallmentPlan
     */
    creationDateTime: Date;
    /**
     *
     * @type {Array<Installment2>}
     * @memberof ExtendedInstallmentPlan
     */
    installments?: Array<Installment2>;
    /**
     *
     * @type {Array<ReAuthorization>}
     * @memberof ExtendedInstallmentPlan
     */
    secureAuthorizations?: Array<ReAuthorization>;
    /**
     *
     * @type {BuRef}
     * @memberof ExtendedInstallmentPlan
     */
    businessUnit?: BuRef;
    /**
     *
     * @type {Date}
     * @memberof ExtendedInstallmentPlan
     */
    shopperPaymentRequestTime?: Date;
}
export declare function ExtendedInstallmentPlanFromJSON(json: any): ExtendedInstallmentPlan;
export declare function ExtendedInstallmentPlanFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExtendedInstallmentPlan;
export declare function ExtendedInstallmentPlanToJSON(value?: ExtendedInstallmentPlan | null): any;
