"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var runtime_1 = require("../runtime");
var _1 = require("./");
function InstallmentFromJSON(json) {
    return InstallmentFromJSONTyped(json, false);
}
exports.InstallmentFromJSON = InstallmentFromJSON;
function InstallmentFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'installmentNumber': json['InstallmentNumber'],
        'amount': !runtime_1.exists(json, 'Amount') ? undefined : _1.MoneyFromJSON(json['Amount']),
        'originalAmount': !runtime_1.exists(json, 'OriginalAmount') ? undefined : _1.MoneyFromJSON(json['OriginalAmount']),
        'refundAmount': !runtime_1.exists(json, 'RefundAmount') ? undefined : _1.MoneyFromJSON(json['RefundAmount']),
        'processDateTime': !runtime_1.exists(json, 'ProcessDateTime') ? undefined : (new Date(json['ProcessDateTime'])),
        'isRefund': json['IsRefund'],
        'requiredCredit': !runtime_1.exists(json, 'RequiredCredit') ? undefined : _1.MoneyFromJSON(json['RequiredCredit']),
        'createdDateTime': (new Date(json['CreatedDateTime'])),
        'status': !runtime_1.exists(json, 'Status') ? undefined : _1.ReferenceEntityBaseFromJSON(json['Status']),
        'transactionResults': !runtime_1.exists(json, 'TransactionResults') ? undefined : (json['TransactionResults'].map(_1.TransactionResultFromJSON)),
        'cardDetails': !runtime_1.exists(json, 'CardDetails') ? undefined : _1.CardDataFromJSON(json['CardDetails']),
        'result': !runtime_1.exists(json, 'Result') ? undefined : json['Result'],
    };
}
exports.InstallmentFromJSONTyped = InstallmentFromJSONTyped;
function InstallmentToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'InstallmentNumber': value.installmentNumber,
        'Amount': _1.MoneyToJSON(value.amount),
        'OriginalAmount': _1.MoneyToJSON(value.originalAmount),
        'RefundAmount': _1.MoneyToJSON(value.refundAmount),
        'ProcessDateTime': value.processDateTime === undefined ? undefined : (value.processDateTime.toISOString()),
        'IsRefund': value.isRefund,
        'RequiredCredit': _1.MoneyToJSON(value.requiredCredit),
        'CreatedDateTime': (value.createdDateTime.toISOString()),
        'Status': _1.ReferenceEntityBaseToJSON(value.status),
        'TransactionResults': value.transactionResults === undefined ? undefined : (value.transactionResults.map(_1.TransactionResultToJSON)),
        'CardDetails': _1.CardDataToJSON(value.cardDetails),
        'Result': value.result,
    };
}
exports.InstallmentToJSON = InstallmentToJSON;
