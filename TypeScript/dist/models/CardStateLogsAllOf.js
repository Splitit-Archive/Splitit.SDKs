"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var runtime_1 = require("../runtime");
var _1 = require("./");
function CardStateLogsAllOfFromJSON(json) {
    return CardStateLogsAllOfFromJSONTyped(json, false);
}
exports.CardStateLogsAllOfFromJSON = CardStateLogsAllOfFromJSON;
function CardStateLogsAllOfFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'cardId': json['CardId'],
        'expirationMonth': json['ExpirationMonth'],
        'expirationYear': json['ExpirationYear'],
        'cardHolderName': !runtime_1.exists(json, 'CardHolderName') ? undefined : json['CardHolderName'],
        'addressDataAddressLine': !runtime_1.exists(json, 'AddressDataAddressLine') ? undefined : json['AddressDataAddressLine'],
        'addressDataZip': !runtime_1.exists(json, 'AddressDataZip') ? undefined : json['AddressDataZip'],
        'version': json['Version'],
        'isVerified': json['IsVerified'],
        'changeSource': !runtime_1.exists(json, 'ChangeSource') ? undefined : json['ChangeSource'],
        'addressDataAddressLine2': !runtime_1.exists(json, 'AddressDataAddressLine2') ? undefined : json['AddressDataAddressLine2'],
        'addressDataCity': !runtime_1.exists(json, 'AddressDataCity') ? undefined : json['AddressDataCity'],
        'addressDataCountryId': !runtime_1.exists(json, 'AddressDataCountryId') ? undefined : json['AddressDataCountryId'],
        'addressDataStateId': !runtime_1.exists(json, 'AddressDataStateId') ? undefined : json['AddressDataStateId'],
        'addressDataLegacyFullAddressLine': !runtime_1.exists(json, 'AddressDataLegacyFullAddressLine') ? undefined : json['AddressDataLegacyFullAddressLine'],
        'card': !runtime_1.exists(json, 'Card') ? undefined : _1.CardsFromJSON(json['Card']),
        'country': !runtime_1.exists(json, 'Country') ? undefined : _1.CountriesFromJSON(json['Country']),
        'state': !runtime_1.exists(json, 'State') ? undefined : _1.CountrySubdivisionsFromJSON(json['State']),
        'installments': !runtime_1.exists(json, 'Installments') ? undefined : (json['Installments'].map(_1.InstallmentsFromJSON)),
        'reAuthorizations': !runtime_1.exists(json, 'ReAuthorizations') ? undefined : (json['ReAuthorizations'].map(_1.ReAuthorizationsFromJSON)),
        'addressData': !runtime_1.exists(json, 'AddressData') ? undefined : _1.AddressData2FromJSON(json['AddressData']),
    };
}
exports.CardStateLogsAllOfFromJSONTyped = CardStateLogsAllOfFromJSONTyped;
function CardStateLogsAllOfToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'CardId': value.cardId,
        'ExpirationMonth': value.expirationMonth,
        'ExpirationYear': value.expirationYear,
        'CardHolderName': value.cardHolderName,
        'AddressDataAddressLine': value.addressDataAddressLine,
        'AddressDataZip': value.addressDataZip,
        'Version': value.version,
        'IsVerified': value.isVerified,
        'ChangeSource': value.changeSource,
        'AddressDataAddressLine2': value.addressDataAddressLine2,
        'AddressDataCity': value.addressDataCity,
        'AddressDataCountryId': value.addressDataCountryId,
        'AddressDataStateId': value.addressDataStateId,
        'AddressDataLegacyFullAddressLine': value.addressDataLegacyFullAddressLine,
        'Card': _1.CardsToJSON(value.card),
        'Country': _1.CountriesToJSON(value.country),
        'State': _1.CountrySubdivisionsToJSON(value.state),
        'Installments': value.installments === undefined ? undefined : (value.installments.map(_1.InstallmentsToJSON)),
        'ReAuthorizations': value.reAuthorizations === undefined ? undefined : (value.reAuthorizations.map(_1.ReAuthorizationsToJSON)),
        'AddressData': _1.AddressData2ToJSON(value.addressData),
    };
}
exports.CardStateLogsAllOfToJSON = CardStateLogsAllOfToJSON;
