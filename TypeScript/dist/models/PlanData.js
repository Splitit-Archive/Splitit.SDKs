"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var runtime_1 = require("../runtime");
var _1 = require("./");
function PlanDataFromJSON(json) {
    return PlanDataFromJSONTyped(json, false);
}
exports.PlanDataFromJSON = PlanDataFromJSON;
function PlanDataFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'numberOfInstallments': !runtime_1.exists(json, 'NumberOfInstallments') ? undefined : json['NumberOfInstallments'],
        'amount': !runtime_1.exists(json, 'Amount') ? undefined : _1.MoneyWithCurrencyCodeFromJSON(json['Amount']),
        'firstInstallmentAmount': !runtime_1.exists(json, 'FirstInstallmentAmount') ? undefined : _1.MoneyWithCurrencyCodeFromJSON(json['FirstInstallmentAmount']),
        'refOrderNumber': !runtime_1.exists(json, 'RefOrderNumber') ? undefined : json['RefOrderNumber'],
        'testMode': !runtime_1.exists(json, 'TestMode') ? undefined : _1.TestModesFromJSON(json['TestMode']),
        'purchaseMethod': !runtime_1.exists(json, 'PurchaseMethod') ? undefined : _1.PurchaseMethodFromJSON(json['PurchaseMethod']),
        'strategy': !runtime_1.exists(json, 'Strategy') ? undefined : _1.PlanStrategyFromJSON(json['Strategy']),
        'extendedParams': !runtime_1.exists(json, 'ExtendedParams') ? undefined : json['ExtendedParams'],
        'firstChargeDate': !runtime_1.exists(json, 'FirstChargeDate') ? undefined : (new Date(json['FirstChargeDate'])),
        'autoCapture': !runtime_1.exists(json, 'AutoCapture') ? undefined : json['AutoCapture'],
        'isFunded': !runtime_1.exists(json, 'IsFunded') ? undefined : json['IsFunded'],
        'attempt3DSecure': !runtime_1.exists(json, 'Attempt3DSecure') ? undefined : json['Attempt3DSecure'],
        'externalProviderSupported': json['ExternalProviderSupported'],
    };
}
exports.PlanDataFromJSONTyped = PlanDataFromJSONTyped;
function PlanDataToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'NumberOfInstallments': value.numberOfInstallments,
        'Amount': _1.MoneyWithCurrencyCodeToJSON(value.amount),
        'FirstInstallmentAmount': _1.MoneyWithCurrencyCodeToJSON(value.firstInstallmentAmount),
        'RefOrderNumber': value.refOrderNumber,
        'TestMode': _1.TestModesToJSON(value.testMode),
        'PurchaseMethod': _1.PurchaseMethodToJSON(value.purchaseMethod),
        'Strategy': _1.PlanStrategyToJSON(value.strategy),
        'ExtendedParams': value.extendedParams,
        'FirstChargeDate': value.firstChargeDate === undefined ? undefined : (value.firstChargeDate.toISOString()),
        'AutoCapture': value.autoCapture,
        'IsFunded': value.isFunded,
        'Attempt3DSecure': value.attempt3DSecure,
        'ExternalProviderSupported': value.externalProviderSupported,
    };
}
exports.PlanDataToJSON = PlanDataToJSON;
