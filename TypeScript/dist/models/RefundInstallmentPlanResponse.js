"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var runtime_1 = require("../runtime");
var _1 = require("./");
function RefundInstallmentPlanResponseFromJSON(json) {
    return RefundInstallmentPlanResponseFromJSONTyped(json, false);
}
exports.RefundInstallmentPlanResponseFromJSON = RefundInstallmentPlanResponseFromJSON;
function RefundInstallmentPlanResponseFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'responseHeader': !runtime_1.exists(json, 'ResponseHeader') ? undefined : _1.ResponseHeaderFromJSON(json['ResponseHeader']),
        'installmentPlan': !runtime_1.exists(json, 'InstallmentPlan') ? undefined : _1.InstallmentPlanFromJSON(json['InstallmentPlan']),
        'gatewayTransactionResults': !runtime_1.exists(json, 'GatewayTransactionResults') ? undefined : (json['GatewayTransactionResults'].map(_1.TransactionResultFromJSON)),
        'currentRefundAmount': !runtime_1.exists(json, 'CurrentRefundAmount') ? undefined : _1.MoneyFromJSON(json['CurrentRefundAmount']),
    };
}
exports.RefundInstallmentPlanResponseFromJSONTyped = RefundInstallmentPlanResponseFromJSONTyped;
function RefundInstallmentPlanResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'ResponseHeader': _1.ResponseHeaderToJSON(value.responseHeader),
        'InstallmentPlan': _1.InstallmentPlanToJSON(value.installmentPlan),
        'GatewayTransactionResults': value.gatewayTransactionResults === undefined ? undefined : (value.gatewayTransactionResults.map(_1.TransactionResultToJSON)),
        'CurrentRefundAmount': _1.MoneyToJSON(value.currentRefundAmount),
    };
}
exports.RefundInstallmentPlanResponseToJSON = RefundInstallmentPlanResponseToJSON;
