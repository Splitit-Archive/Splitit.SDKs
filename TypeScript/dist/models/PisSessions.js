"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var runtime_1 = require("../runtime");
var _1 = require("./");
function PisSessionsFromJSON(json) {
    return PisSessionsFromJSONTyped(json, false);
}
exports.PisSessionsFromJSON = PisSessionsFromJSON;
function PisSessionsFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': json['Id'],
        'sessionId': !runtime_1.exists(json, 'SessionId') ? undefined : json['SessionId'],
        'lastAccessTime': (new Date(json['LastAccessTime'])),
        'userId': !runtime_1.exists(json, 'UserId') ? undefined : json['UserId'],
        'userUniqueId': !runtime_1.exists(json, 'UserUniqueId') ? undefined : json['UserUniqueId'],
        'installmentPlanNumber': !runtime_1.exists(json, 'InstallmentPlanNumber') ? undefined : json['InstallmentPlanNumber'],
        'versionedTouchPointId': !runtime_1.exists(json, 'VersionedTouchPointId') ? undefined : json['VersionedTouchPointId'],
        'sessionValidPeriodInMinutes': json['SessionValidPeriodInMinutes'],
        'versionedTouchPoint': !runtime_1.exists(json, 'VersionedTouchPoint') ? undefined : _1.VersionedTouchPointsFromJSON(json['VersionedTouchPoint']),
        'userType': !runtime_1.exists(json, 'UserType') ? undefined : _1.UserTypeFromJSON(json['UserType']),
        'sessionAvailibility': _1.SessionAvailibilityFromJSON(json['SessionAvailibility']),
    };
}
exports.PisSessionsFromJSONTyped = PisSessionsFromJSONTyped;
function PisSessionsToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'Id': value.id,
        'SessionId': value.sessionId,
        'LastAccessTime': (value.lastAccessTime.toISOString()),
        'UserId': value.userId,
        'UserUniqueId': value.userUniqueId,
        'InstallmentPlanNumber': value.installmentPlanNumber,
        'VersionedTouchPointId': value.versionedTouchPointId,
        'SessionValidPeriodInMinutes': value.sessionValidPeriodInMinutes,
        'VersionedTouchPoint': _1.VersionedTouchPointsToJSON(value.versionedTouchPoint),
        'UserType': _1.UserTypeToJSON(value.userType),
        'SessionAvailibility': _1.SessionAvailibilityToJSON(value.sessionAvailibility),
    };
}
exports.PisSessionsToJSON = PisSessionsToJSON;
