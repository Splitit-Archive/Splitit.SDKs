"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var runtime_1 = require("../runtime");
var _1 = require("./");
function MerchantsAllOfFromJSON(json) {
    return MerchantsAllOfFromJSONTyped(json, false);
}
exports.MerchantsAllOfFromJSON = MerchantsAllOfFromJSON;
function MerchantsAllOfFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'name': !runtime_1.exists(json, 'Name') ? undefined : json['Name'],
        'address': !runtime_1.exists(json, 'Address') ? undefined : json['Address'],
        'email': !runtime_1.exists(json, 'Email') ? undefined : json['Email'],
        'merchantAdminWebsite': json['MerchantAdminWebsite'],
        'webApi': json['WebApi'],
        'embeddedClients': json['EmbeddedClients'],
        'crmId': !runtime_1.exists(json, 'CrmId') ? undefined : json['CrmId'],
        'sFParentAccountExternalId': !runtime_1.exists(json, 'SFParentAccountExternalId') ? undefined : json['SFParentAccountExternalId'],
        'sFLeadId': !runtime_1.exists(json, 'SFLeadId') ? undefined : json['SFLeadId'],
        'sFParentAccountName': !runtime_1.exists(json, 'SFParentAccountName') ? undefined : json['SFParentAccountName'],
        'merchantVertical': !runtime_1.exists(json, 'MerchantVertical') ? undefined : json['MerchantVertical'],
        'sFAccountId': !runtime_1.exists(json, 'SFAccountId') ? undefined : json['SFAccountId'],
        'declaredAnnualVolumeUSD': !runtime_1.exists(json, 'DeclaredAnnualVolumeUSD') ? undefined : json['DeclaredAnnualVolumeUSD'],
        'declaredAOVUSD': !runtime_1.exists(json, 'DeclaredAOVUSD') ? undefined : json['DeclaredAOVUSD'],
        'logoImage': !runtime_1.exists(json, 'LogoImage') ? undefined : json['LogoImage'],
        'logoFileExtension': !runtime_1.exists(json, 'LogoFileExtension') ? undefined : json['LogoFileExtension'],
        'code': !runtime_1.exists(json, 'Code') ? undefined : json['Code'],
        'supportEmail': !runtime_1.exists(json, 'SupportEmail') ? undefined : json['SupportEmail'],
        'supportPhone': !runtime_1.exists(json, 'SupportPhone') ? undefined : json['SupportPhone'],
        'parameterGroupId': !runtime_1.exists(json, 'ParameterGroupId') ? undefined : json['ParameterGroupId'],
        'businessUnitId': json['BusinessUnitId'],
        'logoUrl': !runtime_1.exists(json, 'LogoUrl') ? undefined : json['LogoUrl'],
        'merchantLegalName': !runtime_1.exists(json, 'MerchantLegalName') ? undefined : json['MerchantLegalName'],
        'splititMerchantId': !runtime_1.exists(json, 'SplititMerchantId') ? undefined : json['SplititMerchantId'],
        'websiteUrl': !runtime_1.exists(json, 'WebsiteUrl') ? undefined : json['WebsiteUrl'],
        'billingAddressAddressLine': !runtime_1.exists(json, 'BillingAddressAddressLine') ? undefined : json['BillingAddressAddressLine'],
        'billingAddressAddressLine2': !runtime_1.exists(json, 'BillingAddressAddressLine2') ? undefined : json['BillingAddressAddressLine2'],
        'billingAddressCity': !runtime_1.exists(json, 'BillingAddressCity') ? undefined : json['BillingAddressCity'],
        'orgGroup': !runtime_1.exists(json, 'OrgGroup') ? undefined : json['OrgGroup'],
        'billingAddressCountryId': !runtime_1.exists(json, 'BillingAddressCountryId') ? undefined : json['BillingAddressCountryId'],
        'billingAddressStateId': !runtime_1.exists(json, 'BillingAddressStateId') ? undefined : json['BillingAddressStateId'],
        'billingAddressZip': !runtime_1.exists(json, 'BillingAddressZip') ? undefined : json['BillingAddressZip'],
        'billingAddressLegacyFullAddressLine': !runtime_1.exists(json, 'BillingAddressLegacyFullAddressLine') ? undefined : json['BillingAddressLegacyFullAddressLine'],
        'vatTaxId': !runtime_1.exists(json, 'VatTaxId') ? undefined : json['VatTaxId'],
        'salesAccossiateId': !runtime_1.exists(json, 'SalesAccossiateId') ? undefined : json['SalesAccossiateId'],
        'registeredCountryOfBusinessCountryId': !runtime_1.exists(json, 'RegisteredCountryOfBusinessCountryId') ? undefined : json['RegisteredCountryOfBusinessCountryId'],
        'registeredCountryOfBusinessStateId': !runtime_1.exists(json, 'RegisteredCountryOfBusinessStateId') ? undefined : json['RegisteredCountryOfBusinessStateId'],
        'merchantCountryCountryId': !runtime_1.exists(json, 'MerchantCountryCountryId') ? undefined : json['MerchantCountryCountryId'],
        'merchantCountryStateId': !runtime_1.exists(json, 'MerchantCountryStateId') ? undefined : json['MerchantCountryStateId'],
        'bankDetailsBankAccountName': !runtime_1.exists(json, 'BankDetailsBankAccountName') ? undefined : json['BankDetailsBankAccountName'],
        'bankDetailsBankRoutingNumber': !runtime_1.exists(json, 'BankDetailsBankRoutingNumber') ? undefined : json['BankDetailsBankRoutingNumber'],
        'bankDetailsBankAccountNumber': !runtime_1.exists(json, 'BankDetailsBankAccountNumber') ? undefined : json['BankDetailsBankAccountNumber'],
        'reportsFolderName': !runtime_1.exists(json, 'ReportsFolderName') ? undefined : json['ReportsFolderName'],
        'onBoardingMethod': _1.OnBoardingMethodFromJSON(json['OnBoardingMethod']),
        'businessUnit': !runtime_1.exists(json, 'BusinessUnit') ? undefined : _1.BusinessUnitsFromJSON(json['BusinessUnit']),
        'parameterGroup': !runtime_1.exists(json, 'ParameterGroup') ? undefined : _1.ParameterGroupsFromJSON(json['ParameterGroup']),
        'salesAccossiate': !runtime_1.exists(json, 'SalesAccossiate') ? undefined : _1.SalesAssociatesFromJSON(json['SalesAccossiate']),
        'apiUsers': !runtime_1.exists(json, 'ApiUsers') ? undefined : _1.ApiUsersFromJSON(json['ApiUsers']),
        'agents': !runtime_1.exists(json, 'Agents') ? undefined : (json['Agents'].map(_1.AgentsFromJSON)),
        'installmentPlanEventsSubscriptionDatas': !runtime_1.exists(json, 'InstallmentPlanEventsSubscriptionDatas') ? undefined : (json['InstallmentPlanEventsSubscriptionDatas'].map(_1.InstallmentPlanEventsSubscriptionDatasFromJSON)),
        'terminals': !runtime_1.exists(json, 'Terminals') ? undefined : (json['Terminals'].map(_1.TerminalsFromJSON)),
        'touchPointColorValues': !runtime_1.exists(json, 'TouchPointColorValues') ? undefined : (json['TouchPointColorValues'].map(_1.TouchPointColorValuesFromJSON)),
        'isTest': json['IsTest'],
        'markedForDeletion': json['MarkedForDeletion'],
        'registeredCountryOfBusiness': !runtime_1.exists(json, 'RegisteredCountryOfBusiness') ? undefined : _1.CountryStateFromJSON(json['RegisteredCountryOfBusiness']),
        'merchantCountry': !runtime_1.exists(json, 'MerchantCountry') ? undefined : _1.CountryStateFromJSON(json['MerchantCountry']),
        'status': _1.MerchantStatusFromJSON(json['Status']),
        'vertical': _1.MerchantVerticalFromJSON(json['Vertical']),
        'bankDetails': !runtime_1.exists(json, 'BankDetails') ? undefined : _1.BankDetailsFromJSON(json['BankDetails']),
        'billingAddress': !runtime_1.exists(json, 'BillingAddress') ? undefined : _1.AddressData2FromJSON(json['BillingAddress']),
        'country': !runtime_1.exists(json, 'Country') ? undefined : _1.CountriesFromJSON(json['Country']),
        'state': !runtime_1.exists(json, 'State') ? undefined : _1.CountrySubdivisionsFromJSON(json['State']),
        'splititSigningEntity': _1.SplititEntityFromJSON(json['SplititSigningEntity']),
        'splititCurrentEntity': _1.SplititEntityFromJSON(json['SplititCurrentEntity']),
    };
}
exports.MerchantsAllOfFromJSONTyped = MerchantsAllOfFromJSONTyped;
function MerchantsAllOfToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'Name': value.name,
        'Address': value.address,
        'Email': value.email,
        'MerchantAdminWebsite': value.merchantAdminWebsite,
        'WebApi': value.webApi,
        'EmbeddedClients': value.embeddedClients,
        'CrmId': value.crmId,
        'SFParentAccountExternalId': value.sFParentAccountExternalId,
        'SFLeadId': value.sFLeadId,
        'SFParentAccountName': value.sFParentAccountName,
        'MerchantVertical': value.merchantVertical,
        'SFAccountId': value.sFAccountId,
        'DeclaredAnnualVolumeUSD': value.declaredAnnualVolumeUSD,
        'DeclaredAOVUSD': value.declaredAOVUSD,
        'LogoImage': value.logoImage,
        'LogoFileExtension': value.logoFileExtension,
        'Code': value.code,
        'SupportEmail': value.supportEmail,
        'SupportPhone': value.supportPhone,
        'ParameterGroupId': value.parameterGroupId,
        'BusinessUnitId': value.businessUnitId,
        'LogoUrl': value.logoUrl,
        'MerchantLegalName': value.merchantLegalName,
        'SplititMerchantId': value.splititMerchantId,
        'WebsiteUrl': value.websiteUrl,
        'BillingAddressAddressLine': value.billingAddressAddressLine,
        'BillingAddressAddressLine2': value.billingAddressAddressLine2,
        'BillingAddressCity': value.billingAddressCity,
        'OrgGroup': value.orgGroup,
        'BillingAddressCountryId': value.billingAddressCountryId,
        'BillingAddressStateId': value.billingAddressStateId,
        'BillingAddressZip': value.billingAddressZip,
        'BillingAddressLegacyFullAddressLine': value.billingAddressLegacyFullAddressLine,
        'VatTaxId': value.vatTaxId,
        'SalesAccossiateId': value.salesAccossiateId,
        'RegisteredCountryOfBusinessCountryId': value.registeredCountryOfBusinessCountryId,
        'RegisteredCountryOfBusinessStateId': value.registeredCountryOfBusinessStateId,
        'MerchantCountryCountryId': value.merchantCountryCountryId,
        'MerchantCountryStateId': value.merchantCountryStateId,
        'BankDetailsBankAccountName': value.bankDetailsBankAccountName,
        'BankDetailsBankRoutingNumber': value.bankDetailsBankRoutingNumber,
        'BankDetailsBankAccountNumber': value.bankDetailsBankAccountNumber,
        'ReportsFolderName': value.reportsFolderName,
        'OnBoardingMethod': _1.OnBoardingMethodToJSON(value.onBoardingMethod),
        'BusinessUnit': _1.BusinessUnitsToJSON(value.businessUnit),
        'ParameterGroup': _1.ParameterGroupsToJSON(value.parameterGroup),
        'SalesAccossiate': _1.SalesAssociatesToJSON(value.salesAccossiate),
        'ApiUsers': _1.ApiUsersToJSON(value.apiUsers),
        'Agents': value.agents === undefined ? undefined : (value.agents.map(_1.AgentsToJSON)),
        'InstallmentPlanEventsSubscriptionDatas': value.installmentPlanEventsSubscriptionDatas === undefined ? undefined : (value.installmentPlanEventsSubscriptionDatas.map(_1.InstallmentPlanEventsSubscriptionDatasToJSON)),
        'Terminals': value.terminals === undefined ? undefined : (value.terminals.map(_1.TerminalsToJSON)),
        'TouchPointColorValues': value.touchPointColorValues === undefined ? undefined : (value.touchPointColorValues.map(_1.TouchPointColorValuesToJSON)),
        'IsTest': value.isTest,
        'MarkedForDeletion': value.markedForDeletion,
        'RegisteredCountryOfBusiness': _1.CountryStateToJSON(value.registeredCountryOfBusiness),
        'MerchantCountry': _1.CountryStateToJSON(value.merchantCountry),
        'Status': _1.MerchantStatusToJSON(value.status),
        'Vertical': _1.MerchantVerticalToJSON(value.vertical),
        'BankDetails': _1.BankDetailsToJSON(value.bankDetails),
        'BillingAddress': _1.AddressData2ToJSON(value.billingAddress),
        'Country': _1.CountriesToJSON(value.country),
        'State': _1.CountrySubdivisionsToJSON(value.state),
        'SplititSigningEntity': _1.SplititEntityToJSON(value.splititSigningEntity),
        'SplititCurrentEntity': _1.SplititEntityToJSON(value.splititCurrentEntity),
    };
}
exports.MerchantsAllOfToJSON = MerchantsAllOfToJSON;
