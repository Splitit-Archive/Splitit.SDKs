"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var runtime_1 = require("../runtime");
var _1 = require("./");
function FeesDocumentsAllOfFromJSON(json) {
    return FeesDocumentsAllOfFromJSONTyped(json, false);
}
exports.FeesDocumentsAllOfFromJSON = FeesDocumentsAllOfFromJSON;
function FeesDocumentsAllOfFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'feeAmountInEffectiveCurrencyAmount': json['FeeAmountInEffectiveCurrencyAmount'],
        'feeAmountInTransactionCurrencyAmount': json['FeeAmountInTransactionCurrencyAmount'],
        'feeAmountInUniformCurrencyAmount': json['FeeAmountInUniformCurrencyAmount'],
        'effectiveCurrencyId': json['EffectiveCurrencyId'],
        'transactionCurrencyId': !runtime_1.exists(json, 'TransactionCurrencyId') ? undefined : json['TransactionCurrencyId'],
        'uniformCurrencyId': json['UniformCurrencyId'],
        'referenceFeesDocumentId': !runtime_1.exists(json, 'ReferenceFeesDocumentId') ? undefined : json['ReferenceFeesDocumentId'],
        'installmentId': !runtime_1.exists(json, 'InstallmentId') ? undefined : json['InstallmentId'],
        'planId': !runtime_1.exists(json, 'PlanId') ? undefined : json['PlanId'],
        'businessUnitId': !runtime_1.exists(json, 'BusinessUnitId') ? undefined : json['BusinessUnitId'],
        'effectiveDateUtc': (new Date(json['EffectiveDateUtc'])),
        'feeRuleDataId': !runtime_1.exists(json, 'FeeRuleDataId') ? undefined : json['FeeRuleDataId'],
        'feeRuleData': !runtime_1.exists(json, 'FeeRuleData') ? undefined : _1.FeesRuleDatasFromJSON(json['FeeRuleData']),
        'businessUnit': !runtime_1.exists(json, 'BusinessUnit') ? undefined : _1.BusinessUnitsFromJSON(json['BusinessUnit']),
        'effectiveCurrency': !runtime_1.exists(json, 'EffectiveCurrency') ? undefined : _1.CurrenciesFromJSON(json['EffectiveCurrency']),
        'installment': !runtime_1.exists(json, 'Installment') ? undefined : _1.InstallmentsFromJSON(json['Installment']),
        'plan': !runtime_1.exists(json, 'Plan') ? undefined : _1.InstallmentPlansFromJSON(json['Plan']),
        'referenceFeesDocument': !runtime_1.exists(json, 'ReferenceFeesDocument') ? undefined : _1.FeesDocumentsFromJSON(json['ReferenceFeesDocument']),
        'transactionCurrency': !runtime_1.exists(json, 'TransactionCurrency') ? undefined : _1.CurrenciesFromJSON(json['TransactionCurrency']),
        'uniformCurrency': !runtime_1.exists(json, 'UniformCurrency') ? undefined : _1.CurrenciesFromJSON(json['UniformCurrency']),
        'inverseReferenceFeesDocument': !runtime_1.exists(json, 'InverseReferenceFeesDocument') ? undefined : (json['InverseReferenceFeesDocument'].map(_1.FeesDocumentsFromJSON)),
        'feeEntity': _1.AccountingPartyFromJSON(json['FeeEntity']),
        'feeType': _1.FeesTypesFromJSON(json['FeeType']),
        'rangeType': !runtime_1.exists(json, 'RangeType') ? undefined : _1.RangeTypeFromJSON(json['RangeType']),
        'feeAmountInEffectiveCurrency': !runtime_1.exists(json, 'FeeAmountInEffectiveCurrency') ? undefined : _1.Money2FromJSON(json['FeeAmountInEffectiveCurrency']),
        'feeAmountInTransactionCurrency': !runtime_1.exists(json, 'FeeAmountInTransactionCurrency') ? undefined : _1.Money2FromJSON(json['FeeAmountInTransactionCurrency']),
        'feeAmountInUniformCurrency': !runtime_1.exists(json, 'FeeAmountInUniformCurrency') ? undefined : _1.Money2FromJSON(json['FeeAmountInUniformCurrency']),
    };
}
exports.FeesDocumentsAllOfFromJSONTyped = FeesDocumentsAllOfFromJSONTyped;
function FeesDocumentsAllOfToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'FeeAmountInEffectiveCurrencyAmount': value.feeAmountInEffectiveCurrencyAmount,
        'FeeAmountInTransactionCurrencyAmount': value.feeAmountInTransactionCurrencyAmount,
        'FeeAmountInUniformCurrencyAmount': value.feeAmountInUniformCurrencyAmount,
        'EffectiveCurrencyId': value.effectiveCurrencyId,
        'TransactionCurrencyId': value.transactionCurrencyId,
        'UniformCurrencyId': value.uniformCurrencyId,
        'ReferenceFeesDocumentId': value.referenceFeesDocumentId,
        'InstallmentId': value.installmentId,
        'PlanId': value.planId,
        'BusinessUnitId': value.businessUnitId,
        'EffectiveDateUtc': (value.effectiveDateUtc.toISOString()),
        'FeeRuleDataId': value.feeRuleDataId,
        'FeeRuleData': _1.FeesRuleDatasToJSON(value.feeRuleData),
        'BusinessUnit': _1.BusinessUnitsToJSON(value.businessUnit),
        'EffectiveCurrency': _1.CurrenciesToJSON(value.effectiveCurrency),
        'Installment': _1.InstallmentsToJSON(value.installment),
        'Plan': _1.InstallmentPlansToJSON(value.plan),
        'ReferenceFeesDocument': _1.FeesDocumentsToJSON(value.referenceFeesDocument),
        'TransactionCurrency': _1.CurrenciesToJSON(value.transactionCurrency),
        'UniformCurrency': _1.CurrenciesToJSON(value.uniformCurrency),
        'InverseReferenceFeesDocument': value.inverseReferenceFeesDocument === undefined ? undefined : (value.inverseReferenceFeesDocument.map(_1.FeesDocumentsToJSON)),
        'FeeEntity': _1.AccountingPartyToJSON(value.feeEntity),
        'FeeType': _1.FeesTypesToJSON(value.feeType),
        'RangeType': _1.RangeTypeToJSON(value.rangeType),
        'FeeAmountInEffectiveCurrency': _1.Money2ToJSON(value.feeAmountInEffectiveCurrency),
        'FeeAmountInTransactionCurrency': _1.Money2ToJSON(value.feeAmountInTransactionCurrency),
        'FeeAmountInUniformCurrency': _1.Money2ToJSON(value.feeAmountInUniformCurrency),
    };
}
exports.FeesDocumentsAllOfToJSON = FeesDocumentsAllOfToJSON;
