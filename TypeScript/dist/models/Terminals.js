"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var runtime_1 = require("../runtime");
var _1 = require("./");
function TerminalsFromJSON(json) {
    return TerminalsFromJSONTyped(json, false);
}
exports.TerminalsFromJSON = TerminalsFromJSON;
function TerminalsFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': json['Id'],
        'name': !runtime_1.exists(json, 'Name') ? undefined : json['Name'],
        'email': !runtime_1.exists(json, 'Email') ? undefined : json['Email'],
        'apiKey': !runtime_1.exists(json, 'ApiKey') ? undefined : json['ApiKey'],
        'wizardTimeout': json['WizardTimeout'],
        'merchantId': json['MerchantId'],
        'utcOffset': json['UtcOffset'],
        'isDisabled': json['IsDisabled'],
        'chargeBeforeShipping': json['ChargeBeforeShipping'],
        'terminalId': !runtime_1.exists(json, 'TerminalId') ? undefined : json['TerminalId'],
        'agentId': json['AgentId'],
        'canCancelInstallmentsPlan': json['CanCancelInstallmentsPlan'],
        'crmId': !runtime_1.exists(json, 'CrmId') ? undefined : json['CrmId'],
        'currencyId': !runtime_1.exists(json, 'CurrencyId') ? undefined : json['CurrencyId'],
        'pendingShipmentReminderDays': json['PendingShipmentReminderDays'],
        'businessUnitId': json['BusinessUnitId'],
        'keepNonApprovedPlanLive': json['KeepNonApprovedPlanLive'],
        'useTestGateway': json['UseTestGateway'],
        'agent': !runtime_1.exists(json, 'Agent') ? undefined : _1.AgentsFromJSON(json['Agent']),
        'businessUnit': !runtime_1.exists(json, 'BusinessUnit') ? undefined : _1.BusinessUnitsFromJSON(json['BusinessUnit']),
        'currency': !runtime_1.exists(json, 'Currency') ? undefined : _1.CurrenciesFromJSON(json['Currency']),
        'merchant': !runtime_1.exists(json, 'Merchant') ? undefined : _1.MerchantsFromJSON(json['Merchant']),
        'accountUpdaterSubscribersScopes': !runtime_1.exists(json, 'AccountUpdaterSubscribersScopes') ? undefined : (json['AccountUpdaterSubscribersScopes'].map(_1.AccountUpdaterSubscribersScopesFromJSON)),
        'installmentPlans': !runtime_1.exists(json, 'InstallmentPlans') ? undefined : (json['InstallmentPlans'].map(_1.InstallmentPlansFromJSON)),
        'reconciliationReports': !runtime_1.exists(json, 'ReconciliationReports') ? undefined : (json['ReconciliationReports'].map(_1.ReconciliationReportsFromJSON)),
        'stateLimitRuleDatas': !runtime_1.exists(json, 'StateLimitRuleDatas') ? undefined : (json['StateLimitRuleDatas'].map(_1.StateLimitRuleDatasFromJSON)),
        'terminalCountries': !runtime_1.exists(json, 'TerminalCountries') ? undefined : (json['TerminalCountries'].map(_1.TerminalCountriesFromJSON)),
        'terminalGatewayDatas': !runtime_1.exists(json, 'TerminalGatewayDatas') ? undefined : (json['TerminalGatewayDatas'].map(_1.TerminalGatewayDatasFromJSON)),
        'terminalKvps': !runtime_1.exists(json, 'TerminalKvps') ? undefined : (json['TerminalKvps'].map(_1.TerminalKvpsFromJSON)),
        'continueExistingPlanWithOriginalGateway': json['ContinueExistingPlanWithOriginalGateway'],
        'activeTerminalData': !runtime_1.exists(json, 'ActiveTerminalData') ? undefined : _1.TerminalGatewayDatasFromJSON(json['ActiveTerminalData']),
        'chbDefaultAction': _1.ChbDefaultActionFromJSON(json['ChbDefaultAction']),
        'failureUnderFrozenInstallmentsPlan': _1.FailureUnderFrozenInstallmentsPlanFromJSON(json['FailureUnderFrozenInstallmentsPlan']),
        'refundUnderCancelation': _1.RefundUnderCancelationFromJSON(json['RefundUnderCancelation']),
        'integrationType': _1.IntegrationTypeFromJSON(json['IntegrationType']),
        'testMode': _1.TestModesFromJSON(json['TestMode']),
    };
}
exports.TerminalsFromJSONTyped = TerminalsFromJSONTyped;
function TerminalsToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'Id': value.id,
        'Name': value.name,
        'Email': value.email,
        'ApiKey': value.apiKey,
        'WizardTimeout': value.wizardTimeout,
        'MerchantId': value.merchantId,
        'UtcOffset': value.utcOffset,
        'IsDisabled': value.isDisabled,
        'ChargeBeforeShipping': value.chargeBeforeShipping,
        'TerminalId': value.terminalId,
        'AgentId': value.agentId,
        'CanCancelInstallmentsPlan': value.canCancelInstallmentsPlan,
        'CrmId': value.crmId,
        'CurrencyId': value.currencyId,
        'PendingShipmentReminderDays': value.pendingShipmentReminderDays,
        'BusinessUnitId': value.businessUnitId,
        'KeepNonApprovedPlanLive': value.keepNonApprovedPlanLive,
        'UseTestGateway': value.useTestGateway,
        'Agent': _1.AgentsToJSON(value.agent),
        'BusinessUnit': _1.BusinessUnitsToJSON(value.businessUnit),
        'Currency': _1.CurrenciesToJSON(value.currency),
        'Merchant': _1.MerchantsToJSON(value.merchant),
        'AccountUpdaterSubscribersScopes': value.accountUpdaterSubscribersScopes === undefined ? undefined : (value.accountUpdaterSubscribersScopes.map(_1.AccountUpdaterSubscribersScopesToJSON)),
        'InstallmentPlans': value.installmentPlans === undefined ? undefined : (value.installmentPlans.map(_1.InstallmentPlansToJSON)),
        'ReconciliationReports': value.reconciliationReports === undefined ? undefined : (value.reconciliationReports.map(_1.ReconciliationReportsToJSON)),
        'StateLimitRuleDatas': value.stateLimitRuleDatas === undefined ? undefined : (value.stateLimitRuleDatas.map(_1.StateLimitRuleDatasToJSON)),
        'TerminalCountries': value.terminalCountries === undefined ? undefined : (value.terminalCountries.map(_1.TerminalCountriesToJSON)),
        'TerminalGatewayDatas': value.terminalGatewayDatas === undefined ? undefined : (value.terminalGatewayDatas.map(_1.TerminalGatewayDatasToJSON)),
        'TerminalKvps': value.terminalKvps === undefined ? undefined : (value.terminalKvps.map(_1.TerminalKvpsToJSON)),
        'ContinueExistingPlanWithOriginalGateway': value.continueExistingPlanWithOriginalGateway,
        'ActiveTerminalData': _1.TerminalGatewayDatasToJSON(value.activeTerminalData),
        'ChbDefaultAction': _1.ChbDefaultActionToJSON(value.chbDefaultAction),
        'FailureUnderFrozenInstallmentsPlan': _1.FailureUnderFrozenInstallmentsPlanToJSON(value.failureUnderFrozenInstallmentsPlan),
        'RefundUnderCancelation': _1.RefundUnderCancelationToJSON(value.refundUnderCancelation),
        'IntegrationType': _1.IntegrationTypeToJSON(value.integrationType),
        'TestMode': _1.TestModesToJSON(value.testMode),
    };
}
exports.TerminalsToJSON = TerminalsToJSON;
