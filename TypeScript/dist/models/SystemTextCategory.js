"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
 *
 * @export
 * @enum {string}
 */
var SystemTextCategory;
(function (SystemTextCategory) {
    SystemTextCategory["TermsAndConditions"] = "TermsAndConditions";
    SystemTextCategory["EmailContent"] = "EmailContent";
    SystemTextCategory["Error"] = "Error";
    SystemTextCategory["EmailTemplate"] = "EmailTemplate";
    SystemTextCategory["AdministrationPotral"] = "AdministrationPotral";
    SystemTextCategory["Receipt"] = "Receipt";
    SystemTextCategory["InstallmentPlanStatus"] = "InstallmentPlanStatus";
    SystemTextCategory["InstallmentStatus"] = "InstallmentStatus";
    SystemTextCategory["PurchaseMethod"] = "PurchaseMethod";
    SystemTextCategory["OperationType"] = "OperationType";
    SystemTextCategory["CardBrand"] = "CardBrand";
    SystemTextCategory["PaymentDetails"] = "PaymentDetails";
    SystemTextCategory["Common"] = "Common";
    SystemTextCategory["VPos"] = "VPos";
    SystemTextCategory["PaymentTransactionShopperMessage"] = "PaymentTransactionShopperMessage";
    SystemTextCategory["TermsAndConditionsLegal"] = "TermsAndConditionsLegal";
    SystemTextCategory["Ecomm"] = "Ecomm";
    SystemTextCategory["ShopperSplititAccount"] = "ShopperSplititAccount";
    SystemTextCategory["SMSContent"] = "SMSContent";
    SystemTextCategory["POS"] = "POS";
    SystemTextCategory["FlexFields"] = "FlexFields";
})(SystemTextCategory = exports.SystemTextCategory || (exports.SystemTextCategory = {}));
function SystemTextCategoryFromJSON(json) {
    return SystemTextCategoryFromJSONTyped(json, false);
}
exports.SystemTextCategoryFromJSON = SystemTextCategoryFromJSON;
function SystemTextCategoryFromJSONTyped(json, ignoreDiscriminator) {
    return json;
}
exports.SystemTextCategoryFromJSONTyped = SystemTextCategoryFromJSONTyped;
function SystemTextCategoryToJSON(value) {
    return value;
}
exports.SystemTextCategoryToJSON = SystemTextCategoryToJSON;
