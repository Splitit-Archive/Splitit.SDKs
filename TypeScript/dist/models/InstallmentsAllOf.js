"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var runtime_1 = require("../runtime");
var _1 = require("./");
function InstallmentsAllOfFromJSON(json) {
    return InstallmentsAllOfFromJSONTyped(json, false);
}
exports.InstallmentsAllOfFromJSON = InstallmentsAllOfFromJSON;
function InstallmentsAllOfFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'installmentPlanId': json['InstallmentPlanId'],
        'installmentNumber': json['InstallmentNumber'],
        'processorId': json['ProcessorId'],
        'originUtcOffset': json['OriginUtcOffset'],
        'createdDateUtc': (new Date(json['CreatedDateUtc'])),
        'amount': json['Amount'],
        'processDateTime': !runtime_1.exists(json, 'ProcessDateTime') ? undefined : (new Date(json['ProcessDateTime'])),
        'processDateTimeUtc': !runtime_1.exists(json, 'ProcessDateTimeUtc') ? undefined : (new Date(json['ProcessDateTimeUtc'])),
        'isRefund': json['IsRefund'],
        'cardStateId': !runtime_1.exists(json, 'CardStateId') ? undefined : json['CardStateId'],
        'originalAmount': json['OriginalAmount'],
        'refundAmount': json['RefundAmount'],
        'isFullCapture': json['IsFullCapture'],
        'authorizedAmount': json['AuthorizedAmount'],
        'isPreAuthorized': json['IsPreAuthorized'],
        'amountForFunding': json['AmountForFunding'],
        'cardState': !runtime_1.exists(json, 'CardState') ? undefined : _1.CardStateLogsFromJSON(json['CardState']),
        'installmentPlan': !runtime_1.exists(json, 'InstallmentPlan') ? undefined : _1.InstallmentPlansFromJSON(json['InstallmentPlan']),
        'processor': !runtime_1.exists(json, 'Processor') ? undefined : _1.ProcessorsFromJSON(json['Processor']),
        'feesDocuments': !runtime_1.exists(json, 'FeesDocuments') ? undefined : (json['FeesDocuments'].map(_1.FeesDocumentsFromJSON)),
        'fundingCollectDocumentDetails': !runtime_1.exists(json, 'FundingCollectDocumentDetails') ? undefined : (json['FundingCollectDocumentDetails'].map(_1.FundingCollectDocumentDetailsFromJSON)),
        'installmentPaymentGatewayTransactionLogs': !runtime_1.exists(json, 'InstallmentPaymentGatewayTransactionLogs') ? undefined : (json['InstallmentPaymentGatewayTransactionLogs'].map(_1.InstallmentPaymentGatewayTransactionLogsFromJSON)),
        'transferDocumentDetails': !runtime_1.exists(json, 'TransferDocumentDetails') ? undefined : (json['TransferDocumentDetails'].map(_1.TransferDocumentDetailsFromJSON)),
        'merchantAccountType': _1.MerchantAccountTypeFromJSON(json['MerchantAccountType']),
        'status': _1.InstallmentStatusFromJSON(json['Status']),
    };
}
exports.InstallmentsAllOfFromJSONTyped = InstallmentsAllOfFromJSONTyped;
function InstallmentsAllOfToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'InstallmentPlanId': value.installmentPlanId,
        'InstallmentNumber': value.installmentNumber,
        'ProcessorId': value.processorId,
        'OriginUtcOffset': value.originUtcOffset,
        'CreatedDateUtc': (value.createdDateUtc.toISOString()),
        'Amount': value.amount,
        'ProcessDateTime': value.processDateTime === undefined ? undefined : (value.processDateTime.toISOString()),
        'ProcessDateTimeUtc': value.processDateTimeUtc === undefined ? undefined : (value.processDateTimeUtc.toISOString()),
        'IsRefund': value.isRefund,
        'CardStateId': value.cardStateId,
        'OriginalAmount': value.originalAmount,
        'RefundAmount': value.refundAmount,
        'IsFullCapture': value.isFullCapture,
        'AuthorizedAmount': value.authorizedAmount,
        'IsPreAuthorized': value.isPreAuthorized,
        'AmountForFunding': value.amountForFunding,
        'CardState': _1.CardStateLogsToJSON(value.cardState),
        'InstallmentPlan': _1.InstallmentPlansToJSON(value.installmentPlan),
        'Processor': _1.ProcessorsToJSON(value.processor),
        'FeesDocuments': value.feesDocuments === undefined ? undefined : (value.feesDocuments.map(_1.FeesDocumentsToJSON)),
        'FundingCollectDocumentDetails': value.fundingCollectDocumentDetails === undefined ? undefined : (value.fundingCollectDocumentDetails.map(_1.FundingCollectDocumentDetailsToJSON)),
        'InstallmentPaymentGatewayTransactionLogs': value.installmentPaymentGatewayTransactionLogs === undefined ? undefined : (value.installmentPaymentGatewayTransactionLogs.map(_1.InstallmentPaymentGatewayTransactionLogsToJSON)),
        'TransferDocumentDetails': value.transferDocumentDetails === undefined ? undefined : (value.transferDocumentDetails.map(_1.TransferDocumentDetailsToJSON)),
        'MerchantAccountType': _1.MerchantAccountTypeToJSON(value.merchantAccountType),
        'Status': _1.InstallmentStatusToJSON(value.status),
    };
}
exports.InstallmentsAllOfToJSON = InstallmentsAllOfToJSON;
