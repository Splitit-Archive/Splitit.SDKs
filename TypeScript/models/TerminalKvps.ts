/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntityBase,
    EntityBaseFromJSON,
    EntityBaseFromJSONTyped,
    EntityBaseToJSON,
    TerminalKvpsAllOf,
    TerminalKvpsAllOfFromJSON,
    TerminalKvpsAllOfFromJSONTyped,
    TerminalKvpsAllOfToJSON,
    Terminals,
    TerminalsFromJSON,
    TerminalsFromJSONTyped,
    TerminalsToJSON,
} from './';

/**
 * 
 * @export
 * @interface TerminalKvps
 */
export interface TerminalKvps {
    /**
     * 
     * @type {number}
     * @memberof TerminalKvps
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof TerminalKvps
     */
    key?: string;
    /**
     * 
     * @type {string}
     * @memberof TerminalKvps
     */
    value?: string;
    /**
     * 
     * @type {number}
     * @memberof TerminalKvps
     */
    terminalId: number;
    /**
     * 
     * @type {Terminals}
     * @memberof TerminalKvps
     */
    terminal?: Terminals;
}

export function TerminalKvpsFromJSON(json: any): TerminalKvps {
    return TerminalKvpsFromJSONTyped(json, false);
}

export function TerminalKvpsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TerminalKvps {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['Id'],
        'key': !exists(json, 'Key') ? undefined : json['Key'],
        'value': !exists(json, 'Value') ? undefined : json['Value'],
        'terminalId': json['TerminalId'],
        'terminal': !exists(json, 'Terminal') ? undefined : TerminalsFromJSON(json['Terminal']),
    };
}

export function TerminalKvpsToJSON(value?: TerminalKvps | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Id': value.id,
        'Key': value.key,
        'Value': value.value,
        'TerminalId': value.terminalId,
        'Terminal': TerminalsToJSON(value.terminal),
    };
}


