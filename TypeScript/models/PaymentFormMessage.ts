/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PaymentFormMessageType,
    PaymentFormMessageTypeFromJSON,
    PaymentFormMessageTypeFromJSONTyped,
    PaymentFormMessageTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface PaymentFormMessage
 */
export interface PaymentFormMessage {
    /**
     * 
     * @type {PaymentFormMessageType}
     * @memberof PaymentFormMessage
     */
    type: PaymentFormMessageType;
    /**
     * 
     * @type {number}
     * @memberof PaymentFormMessage
     */
    code: number;
    /**
     * 
     * @type {string}
     * @memberof PaymentFormMessage
     */
    message?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PaymentFormMessage
     */
    isEmpty: boolean;
}

export function PaymentFormMessageFromJSON(json: any): PaymentFormMessage {
    return PaymentFormMessageFromJSONTyped(json, false);
}

export function PaymentFormMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaymentFormMessage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': PaymentFormMessageTypeFromJSON(json['Type']),
        'code': json['Code'],
        'message': !exists(json, 'Message') ? undefined : json['Message'],
        'isEmpty': json['IsEmpty'],
    };
}

export function PaymentFormMessageToJSON(value?: PaymentFormMessage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Type': PaymentFormMessageTypeToJSON(value.type),
        'Code': value.code,
        'Message': value.message,
        'IsEmpty': value.isEmpty,
    };
}


