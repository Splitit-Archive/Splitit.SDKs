/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    BusinessActivity,
    BusinessActivityFromJSON,
    BusinessActivityFromJSONTyped,
    BusinessActivityToJSON,
    BusinessParty,
    BusinessPartyFromJSON,
    BusinessPartyFromJSONTyped,
    BusinessPartyToJSON,
    EntityBase,
    EntityBaseFromJSON,
    EntityBaseFromJSONTyped,
    EntityBaseToJSON,
    RolesAllOf,
    RolesAllOfFromJSON,
    RolesAllOfFromJSONTyped,
    RolesAllOfToJSON,
} from './';

/**
 * 
 * @export
 * @interface Roles
 */
export interface Roles {
    /**
     * 
     * @type {number}
     * @memberof Roles
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Roles
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof Roles
     */
    roleStrength: number;
    /**
     * 
     * @type {BusinessParty}
     * @memberof Roles
     */
    businessParty: BusinessParty;
    /**
     * 
     * @type {Array<BusinessActivity>}
     * @memberof Roles
     */
    businessActivities?: Array<BusinessActivity>;
    /**
     * 
     * @type {string}
     * @memberof Roles
     */
    businessActivitiesSerialized?: string;
}

export function RolesFromJSON(json: any): Roles {
    return RolesFromJSONTyped(json, false);
}

export function RolesFromJSONTyped(json: any, ignoreDiscriminator: boolean): Roles {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['Id'],
        'name': !exists(json, 'Name') ? undefined : json['Name'],
        'roleStrength': json['RoleStrength'],
        'businessParty': BusinessPartyFromJSON(json['BusinessParty']),
        'businessActivities': !exists(json, 'BusinessActivities') ? undefined : ((json['BusinessActivities'] as Array<any>).map(BusinessActivityFromJSON)),
        'businessActivitiesSerialized': !exists(json, 'BusinessActivitiesSerialized') ? undefined : json['BusinessActivitiesSerialized'],
    };
}

export function RolesToJSON(value?: Roles | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Id': value.id,
        'Name': value.name,
        'RoleStrength': value.roleStrength,
        'BusinessParty': BusinessPartyToJSON(value.businessParty),
        'BusinessActivities': value.businessActivities === undefined ? undefined : ((value.businessActivities as Array<any>).map(BusinessActivityToJSON)),
        'BusinessActivitiesSerialized': value.businessActivitiesSerialized,
    };
}


