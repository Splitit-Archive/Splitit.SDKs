/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Currencies,
    CurrenciesFromJSON,
    CurrenciesFromJSONTyped,
    CurrenciesToJSON,
    EntityBase,
    EntityBaseFromJSON,
    EntityBaseFromJSONTyped,
    EntityBaseToJSON,
    TransferDocumentDetails,
    TransferDocumentDetailsFromJSON,
    TransferDocumentDetailsFromJSONTyped,
    TransferDocumentDetailsToJSON,
    TransferDocumentsAllOf,
    TransferDocumentsAllOfFromJSON,
    TransferDocumentsAllOfFromJSONTyped,
    TransferDocumentsAllOfToJSON,
} from './';

/**
 * 
 * @export
 * @interface TransferDocuments
 */
export interface TransferDocuments {
    /**
     * 
     * @type {number}
     * @memberof TransferDocuments
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof TransferDocuments
     */
    amount: number;
    /**
     * 
     * @type {number}
     * @memberof TransferDocuments
     */
    currencyId: number;
    /**
     * 
     * @type {number}
     * @memberof TransferDocuments
     */
    businessUnitId: number;
    /**
     * 
     * @type {number}
     * @memberof TransferDocuments
     */
    achStatus: number;
    /**
     * 
     * @type {Currencies}
     * @memberof TransferDocuments
     */
    currency?: Currencies;
    /**
     * 
     * @type {Array<TransferDocumentDetails>}
     * @memberof TransferDocuments
     */
    transferDocumentDetails?: Array<TransferDocumentDetails>;
}

export function TransferDocumentsFromJSON(json: any): TransferDocuments {
    return TransferDocumentsFromJSONTyped(json, false);
}

export function TransferDocumentsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransferDocuments {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['Id'],
        'amount': json['Amount'],
        'currencyId': json['CurrencyId'],
        'businessUnitId': json['BusinessUnitId'],
        'achStatus': json['AchStatus'],
        'currency': !exists(json, 'Currency') ? undefined : CurrenciesFromJSON(json['Currency']),
        'transferDocumentDetails': !exists(json, 'TransferDocumentDetails') ? undefined : ((json['TransferDocumentDetails'] as Array<any>).map(TransferDocumentDetailsFromJSON)),
    };
}

export function TransferDocumentsToJSON(value?: TransferDocuments | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Id': value.id,
        'Amount': value.amount,
        'CurrencyId': value.currencyId,
        'BusinessUnitId': value.businessUnitId,
        'AchStatus': value.achStatus,
        'Currency': CurrenciesToJSON(value.currency),
        'TransferDocumentDetails': value.transferDocumentDetails === undefined ? undefined : ((value.transferDocumentDetails as Array<any>).map(TransferDocumentDetailsToJSON)),
    };
}


