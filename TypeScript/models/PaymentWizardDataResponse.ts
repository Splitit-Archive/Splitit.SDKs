/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CardBrand,
    CardBrandFromJSON,
    CardBrandFromJSONTyped,
    CardBrandToJSON,
    CardType,
    CardTypeFromJSON,
    CardTypeFromJSONTyped,
    CardTypeToJSON,
    ExtendedCurrency,
    ExtendedCurrencyFromJSON,
    ExtendedCurrencyFromJSONTyped,
    ExtendedCurrencyToJSON,
    PaymentFormMessage,
    PaymentFormMessageFromJSON,
    PaymentFormMessageFromJSONTyped,
    PaymentFormMessageToJSON,
    PaymentWizardData,
    PaymentWizardDataFromJSON,
    PaymentWizardDataFromJSONTyped,
    PaymentWizardDataToJSON,
    PaymentWizardDataResponseAllOf,
    PaymentWizardDataResponseAllOfFromJSON,
    PaymentWizardDataResponseAllOfFromJSONTyped,
    PaymentWizardDataResponseAllOfToJSON,
    TermsAndConditions,
    TermsAndConditionsFromJSON,
    TermsAndConditionsFromJSONTyped,
    TermsAndConditionsToJSON,
} from './';

/**
 * 
 * @export
 * @interface PaymentWizardDataResponse
 */
export interface PaymentWizardDataResponse {
    /**
     * 
     * @type {string}
     * @memberof PaymentWizardDataResponse
     */
    requestedNumberOfInstallments?: string;
    /**
     * 
     * @type {string}
     * @memberof PaymentWizardDataResponse
     */
    successExitURL?: string;
    /**
     * 
     * @type {string}
     * @memberof PaymentWizardDataResponse
     */
    errorExitURL?: string;
    /**
     * 
     * @type {string}
     * @memberof PaymentWizardDataResponse
     */
    cancelExitURL?: string;
    /**
     * 
     * @type {string}
     * @memberof PaymentWizardDataResponse
     */
    successAsyncUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof PaymentWizardDataResponse
     */
    viewName?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PaymentWizardDataResponse
     */
    isOpenedInIframe: boolean;
    /**
     * 
     * @type {string}
     * @memberof PaymentWizardDataResponse
     */
    paymentFormMessage?: string;
    /**
     * 
     * @type {string}
     * @memberof PaymentWizardDataResponse
     */
    showAddressElements?: string;
    /**
     * 
     * @type {ExtendedCurrency}
     * @memberof PaymentWizardDataResponse
     */
    currencyDisplay?: ExtendedCurrency;
    /**
     * 
     * @type {boolean}
     * @memberof PaymentWizardDataResponse
     */
    forceDisplayImportantNotes: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PaymentWizardDataResponse
     */
    showShopperDetailsExpendedOnStart: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PaymentWizardDataResponse
     */
    showPaymentScheduleRequiredCredit: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PaymentWizardDataResponse
     */
    isShopperEmailMandatory: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PaymentWizardDataResponse
     */
    isShopperPhoneMandatory: boolean;
    /**
     * 
     * @type {string}
     * @memberof PaymentWizardDataResponse
     */
    numberOfInstallmentsSelectionsOption?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PaymentWizardDataResponse
     */
    addressIsReadonly: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PaymentWizardDataResponse
     */
    phoneIsReadOnly: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PaymentWizardDataResponse
     */
    emailIsReadOnly: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PaymentWizardDataResponse
     */
    showLearnMore: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PaymentWizardDataResponse
     */
    showMobilePhone: boolean;
    /**
     * 
     * @type {string}
     * @memberof PaymentWizardDataResponse
     */
    logoURL?: string;
    /**
     * 
     * @type {string}
     * @memberof PaymentWizardDataResponse
     */
    privacyPolicyUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof PaymentWizardDataResponse
     */
    termsAndConditionsUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof PaymentWizardDataResponse
     */
    learnMoreUrl?: string;
    /**
     * 
     * @type {Array<CardType>}
     * @memberof PaymentWizardDataResponse
     */
    potentialCardTypes?: Array<CardType>;
    /**
     * 
     * @type {Array<CardBrand>}
     * @memberof PaymentWizardDataResponse
     */
    potentialCardBrands?: Array<CardBrand>;
    /**
     * 
     * @type {Array<PaymentFormMessage>}
     * @memberof PaymentWizardDataResponse
     */
    paymentFormMessages?: Array<PaymentFormMessage>;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof PaymentWizardDataResponse
     */
    displayProperties?: { [key: string]: string; };
    /**
     * 
     * @type {TermsAndConditions}
     * @memberof PaymentWizardDataResponse
     */
    termsAndConditions?: TermsAndConditions;
}

export function PaymentWizardDataResponseFromJSON(json: any): PaymentWizardDataResponse {
    return PaymentWizardDataResponseFromJSONTyped(json, false);
}

export function PaymentWizardDataResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaymentWizardDataResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'requestedNumberOfInstallments': !exists(json, 'RequestedNumberOfInstallments') ? undefined : json['RequestedNumberOfInstallments'],
        'successExitURL': !exists(json, 'SuccessExitURL') ? undefined : json['SuccessExitURL'],
        'errorExitURL': !exists(json, 'ErrorExitURL') ? undefined : json['ErrorExitURL'],
        'cancelExitURL': !exists(json, 'CancelExitURL') ? undefined : json['CancelExitURL'],
        'successAsyncUrl': !exists(json, 'SuccessAsyncUrl') ? undefined : json['SuccessAsyncUrl'],
        'viewName': !exists(json, 'ViewName') ? undefined : json['ViewName'],
        'isOpenedInIframe': json['IsOpenedInIframe'],
        'paymentFormMessage': !exists(json, 'PaymentFormMessage') ? undefined : json['PaymentFormMessage'],
        'showAddressElements': !exists(json, 'ShowAddressElements') ? undefined : json['ShowAddressElements'],
        'currencyDisplay': !exists(json, 'CurrencyDisplay') ? undefined : ExtendedCurrencyFromJSON(json['CurrencyDisplay']),
        'forceDisplayImportantNotes': json['ForceDisplayImportantNotes'],
        'showShopperDetailsExpendedOnStart': json['ShowShopperDetailsExpendedOnStart'],
        'showPaymentScheduleRequiredCredit': json['ShowPaymentScheduleRequiredCredit'],
        'isShopperEmailMandatory': json['IsShopperEmailMandatory'],
        'isShopperPhoneMandatory': json['IsShopperPhoneMandatory'],
        'numberOfInstallmentsSelectionsOption': !exists(json, 'NumberOfInstallmentsSelectionsOption') ? undefined : json['NumberOfInstallmentsSelectionsOption'],
        'addressIsReadonly': json['AddressIsReadonly'],
        'phoneIsReadOnly': json['PhoneIsReadOnly'],
        'emailIsReadOnly': json['EmailIsReadOnly'],
        'showLearnMore': json['ShowLearnMore'],
        'showMobilePhone': json['ShowMobilePhone'],
        'logoURL': !exists(json, 'LogoURL') ? undefined : json['LogoURL'],
        'privacyPolicyUrl': !exists(json, 'PrivacyPolicyUrl') ? undefined : json['PrivacyPolicyUrl'],
        'termsAndConditionsUrl': !exists(json, 'TermsAndConditionsUrl') ? undefined : json['TermsAndConditionsUrl'],
        'learnMoreUrl': !exists(json, 'LearnMoreUrl') ? undefined : json['LearnMoreUrl'],
        'potentialCardTypes': !exists(json, 'PotentialCardTypes') ? undefined : ((json['PotentialCardTypes'] as Array<any>).map(CardTypeFromJSON)),
        'potentialCardBrands': !exists(json, 'PotentialCardBrands') ? undefined : ((json['PotentialCardBrands'] as Array<any>).map(CardBrandFromJSON)),
        'paymentFormMessages': !exists(json, 'PaymentFormMessages') ? undefined : ((json['PaymentFormMessages'] as Array<any>).map(PaymentFormMessageFromJSON)),
        'displayProperties': !exists(json, 'DisplayProperties') ? undefined : json['DisplayProperties'],
        'termsAndConditions': !exists(json, 'TermsAndConditions') ? undefined : TermsAndConditionsFromJSON(json['TermsAndConditions']),
    };
}

export function PaymentWizardDataResponseToJSON(value?: PaymentWizardDataResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'RequestedNumberOfInstallments': value.requestedNumberOfInstallments,
        'SuccessExitURL': value.successExitURL,
        'ErrorExitURL': value.errorExitURL,
        'CancelExitURL': value.cancelExitURL,
        'SuccessAsyncUrl': value.successAsyncUrl,
        'ViewName': value.viewName,
        'IsOpenedInIframe': value.isOpenedInIframe,
        'PaymentFormMessage': value.paymentFormMessage,
        'ShowAddressElements': value.showAddressElements,
        'CurrencyDisplay': ExtendedCurrencyToJSON(value.currencyDisplay),
        'ForceDisplayImportantNotes': value.forceDisplayImportantNotes,
        'ShowShopperDetailsExpendedOnStart': value.showShopperDetailsExpendedOnStart,
        'ShowPaymentScheduleRequiredCredit': value.showPaymentScheduleRequiredCredit,
        'IsShopperEmailMandatory': value.isShopperEmailMandatory,
        'IsShopperPhoneMandatory': value.isShopperPhoneMandatory,
        'NumberOfInstallmentsSelectionsOption': value.numberOfInstallmentsSelectionsOption,
        'AddressIsReadonly': value.addressIsReadonly,
        'PhoneIsReadOnly': value.phoneIsReadOnly,
        'EmailIsReadOnly': value.emailIsReadOnly,
        'ShowLearnMore': value.showLearnMore,
        'ShowMobilePhone': value.showMobilePhone,
        'LogoURL': value.logoURL,
        'PrivacyPolicyUrl': value.privacyPolicyUrl,
        'TermsAndConditionsUrl': value.termsAndConditionsUrl,
        'LearnMoreUrl': value.learnMoreUrl,
        'PotentialCardTypes': value.potentialCardTypes === undefined ? undefined : ((value.potentialCardTypes as Array<any>).map(CardTypeToJSON)),
        'PotentialCardBrands': value.potentialCardBrands === undefined ? undefined : ((value.potentialCardBrands as Array<any>).map(CardBrandToJSON)),
        'PaymentFormMessages': value.paymentFormMessages === undefined ? undefined : ((value.paymentFormMessages as Array<any>).map(PaymentFormMessageToJSON)),
        'DisplayProperties': value.displayProperties,
        'TermsAndConditions': TermsAndConditionsToJSON(value.termsAndConditions),
    };
}


