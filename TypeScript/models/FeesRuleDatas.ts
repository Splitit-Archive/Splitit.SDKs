/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    BusinessUnits,
    BusinessUnitsFromJSON,
    BusinessUnitsFromJSONTyped,
    BusinessUnitsToJSON,
    Currencies,
    CurrenciesFromJSON,
    CurrenciesFromJSONTyped,
    CurrenciesToJSON,
    EntityBase,
    EntityBaseFromJSON,
    EntityBaseFromJSONTyped,
    EntityBaseToJSON,
    FeeRateCollections,
    FeeRateCollectionsFromJSON,
    FeeRateCollectionsFromJSONTyped,
    FeeRateCollectionsToJSON,
    FeesRuleDatasAllOf,
    FeesRuleDatasAllOfFromJSON,
    FeesRuleDatasAllOfFromJSONTyped,
    FeesRuleDatasAllOfToJSON,
    InstallmentPlanTerminalDatas,
    InstallmentPlanTerminalDatasFromJSON,
    InstallmentPlanTerminalDatasFromJSONTyped,
    InstallmentPlanTerminalDatasToJSON,
} from './';

/**
 * 
 * @export
 * @interface FeesRuleDatas
 */
export interface FeesRuleDatas {
    /**
     * 
     * @type {number}
     * @memberof FeesRuleDatas
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof FeesRuleDatas
     */
    accountingCurrencyId: number;
    /**
     * 
     * @type {Currencies}
     * @memberof FeesRuleDatas
     */
    accountingCurrency?: Currencies;
    /**
     * 
     * @type {number}
     * @memberof FeesRuleDatas
     */
    businessUnitId: number;
    /**
     * 
     * @type {BusinessUnits}
     * @memberof FeesRuleDatas
     */
    businessUnit?: BusinessUnits;
    /**
     * 
     * @type {number}
     * @memberof FeesRuleDatas
     */
    posSetupPercentage: number;
    /**
     * 
     * @type {number}
     * @memberof FeesRuleDatas
     */
    refundFee: number;
    /**
     * 
     * @type {number}
     * @memberof FeesRuleDatas
     */
    cancellationFee: number;
    /**
     * 
     * @type {number}
     * @memberof FeesRuleDatas
     */
    chbFee: number;
    /**
     * 
     * @type {number}
     * @memberof FeesRuleDatas
     */
    monthlySubscriptionAmount: number;
    /**
     * 
     * @type {number}
     * @memberof FeesRuleDatas
     */
    fraudCheck: number;
    /**
     * 
     * @type {FeeRateCollections}
     * @memberof FeesRuleDatas
     */
    fixedNonFundedSecure?: FeeRateCollections;
    /**
     * 
     * @type {FeeRateCollections}
     * @memberof FeesRuleDatas
     */
    variableNonFundedSecure?: FeeRateCollections;
    /**
     * 
     * @type {FeeRateCollections}
     * @memberof FeesRuleDatas
     */
    fixedNonFundedNonSecure?: FeeRateCollections;
    /**
     * 
     * @type {FeeRateCollections}
     * @memberof FeesRuleDatas
     */
    variableNonFundedNonSecure?: FeeRateCollections;
    /**
     * 
     * @type {FeeRateCollections}
     * @memberof FeesRuleDatas
     */
    fixedFundedSecure?: FeeRateCollections;
    /**
     * 
     * @type {FeeRateCollections}
     * @memberof FeesRuleDatas
     */
    fixedFundedNonSecure?: FeeRateCollections;
    /**
     * 
     * @type {FeeRateCollections}
     * @memberof FeesRuleDatas
     */
    variableFundedSecure?: FeeRateCollections;
    /**
     * 
     * @type {FeeRateCollections}
     * @memberof FeesRuleDatas
     */
    variableFundedNonSecure?: FeeRateCollections;
    /**
     * 
     * @type {number}
     * @memberof FeesRuleDatas
     */
    variableFundedNonSecureId?: number;
    /**
     * 
     * @type {number}
     * @memberof FeesRuleDatas
     */
    variableFundedSecureId?: number;
    /**
     * 
     * @type {number}
     * @memberof FeesRuleDatas
     */
    variableNonFundedNonSecureId?: number;
    /**
     * 
     * @type {number}
     * @memberof FeesRuleDatas
     */
    variableNonFundedSecureId?: number;
    /**
     * 
     * @type {number}
     * @memberof FeesRuleDatas
     */
    fixedFundedNonSecureId?: number;
    /**
     * 
     * @type {number}
     * @memberof FeesRuleDatas
     */
    fixedFundedSecureId?: number;
    /**
     * 
     * @type {number}
     * @memberof FeesRuleDatas
     */
    fixedNonFundedNonSecureId?: number;
    /**
     * 
     * @type {number}
     * @memberof FeesRuleDatas
     */
    fixedNonFundedSecureId?: number;
    /**
     * 
     * @type {Array<InstallmentPlanTerminalDatas>}
     * @memberof FeesRuleDatas
     */
    installmentPlanTerminalDatas?: Array<InstallmentPlanTerminalDatas>;
}

export function FeesRuleDatasFromJSON(json: any): FeesRuleDatas {
    return FeesRuleDatasFromJSONTyped(json, false);
}

export function FeesRuleDatasFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeesRuleDatas {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['Id'],
        'accountingCurrencyId': json['AccountingCurrencyId'],
        'accountingCurrency': !exists(json, 'AccountingCurrency') ? undefined : CurrenciesFromJSON(json['AccountingCurrency']),
        'businessUnitId': json['BusinessUnitId'],
        'businessUnit': !exists(json, 'BusinessUnit') ? undefined : BusinessUnitsFromJSON(json['BusinessUnit']),
        'posSetupPercentage': json['PosSetupPercentage'],
        'refundFee': json['RefundFee'],
        'cancellationFee': json['CancellationFee'],
        'chbFee': json['ChbFee'],
        'monthlySubscriptionAmount': json['MonthlySubscriptionAmount'],
        'fraudCheck': json['FraudCheck'],
        'fixedNonFundedSecure': !exists(json, 'FixedNonFundedSecure') ? undefined : FeeRateCollectionsFromJSON(json['FixedNonFundedSecure']),
        'variableNonFundedSecure': !exists(json, 'VariableNonFundedSecure') ? undefined : FeeRateCollectionsFromJSON(json['VariableNonFundedSecure']),
        'fixedNonFundedNonSecure': !exists(json, 'FixedNonFundedNonSecure') ? undefined : FeeRateCollectionsFromJSON(json['FixedNonFundedNonSecure']),
        'variableNonFundedNonSecure': !exists(json, 'VariableNonFundedNonSecure') ? undefined : FeeRateCollectionsFromJSON(json['VariableNonFundedNonSecure']),
        'fixedFundedSecure': !exists(json, 'FixedFundedSecure') ? undefined : FeeRateCollectionsFromJSON(json['FixedFundedSecure']),
        'fixedFundedNonSecure': !exists(json, 'FixedFundedNonSecure') ? undefined : FeeRateCollectionsFromJSON(json['FixedFundedNonSecure']),
        'variableFundedSecure': !exists(json, 'VariableFundedSecure') ? undefined : FeeRateCollectionsFromJSON(json['VariableFundedSecure']),
        'variableFundedNonSecure': !exists(json, 'VariableFundedNonSecure') ? undefined : FeeRateCollectionsFromJSON(json['VariableFundedNonSecure']),
        'variableFundedNonSecureId': !exists(json, 'VariableFundedNonSecureId') ? undefined : json['VariableFundedNonSecureId'],
        'variableFundedSecureId': !exists(json, 'VariableFundedSecureId') ? undefined : json['VariableFundedSecureId'],
        'variableNonFundedNonSecureId': !exists(json, 'VariableNonFundedNonSecureId') ? undefined : json['VariableNonFundedNonSecureId'],
        'variableNonFundedSecureId': !exists(json, 'VariableNonFundedSecureId') ? undefined : json['VariableNonFundedSecureId'],
        'fixedFundedNonSecureId': !exists(json, 'FixedFundedNonSecureId') ? undefined : json['FixedFundedNonSecureId'],
        'fixedFundedSecureId': !exists(json, 'FixedFundedSecureId') ? undefined : json['FixedFundedSecureId'],
        'fixedNonFundedNonSecureId': !exists(json, 'FixedNonFundedNonSecureId') ? undefined : json['FixedNonFundedNonSecureId'],
        'fixedNonFundedSecureId': !exists(json, 'FixedNonFundedSecureId') ? undefined : json['FixedNonFundedSecureId'],
        'installmentPlanTerminalDatas': !exists(json, 'InstallmentPlanTerminalDatas') ? undefined : ((json['InstallmentPlanTerminalDatas'] as Array<any>).map(InstallmentPlanTerminalDatasFromJSON)),
    };
}

export function FeesRuleDatasToJSON(value?: FeesRuleDatas | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Id': value.id,
        'AccountingCurrencyId': value.accountingCurrencyId,
        'AccountingCurrency': CurrenciesToJSON(value.accountingCurrency),
        'BusinessUnitId': value.businessUnitId,
        'BusinessUnit': BusinessUnitsToJSON(value.businessUnit),
        'PosSetupPercentage': value.posSetupPercentage,
        'RefundFee': value.refundFee,
        'CancellationFee': value.cancellationFee,
        'ChbFee': value.chbFee,
        'MonthlySubscriptionAmount': value.monthlySubscriptionAmount,
        'FraudCheck': value.fraudCheck,
        'FixedNonFundedSecure': FeeRateCollectionsToJSON(value.fixedNonFundedSecure),
        'VariableNonFundedSecure': FeeRateCollectionsToJSON(value.variableNonFundedSecure),
        'FixedNonFundedNonSecure': FeeRateCollectionsToJSON(value.fixedNonFundedNonSecure),
        'VariableNonFundedNonSecure': FeeRateCollectionsToJSON(value.variableNonFundedNonSecure),
        'FixedFundedSecure': FeeRateCollectionsToJSON(value.fixedFundedSecure),
        'FixedFundedNonSecure': FeeRateCollectionsToJSON(value.fixedFundedNonSecure),
        'VariableFundedSecure': FeeRateCollectionsToJSON(value.variableFundedSecure),
        'VariableFundedNonSecure': FeeRateCollectionsToJSON(value.variableFundedNonSecure),
        'VariableFundedNonSecureId': value.variableFundedNonSecureId,
        'VariableFundedSecureId': value.variableFundedSecureId,
        'VariableNonFundedNonSecureId': value.variableNonFundedNonSecureId,
        'VariableNonFundedSecureId': value.variableNonFundedSecureId,
        'FixedFundedNonSecureId': value.fixedFundedNonSecureId,
        'FixedFundedSecureId': value.fixedFundedSecureId,
        'FixedNonFundedNonSecureId': value.fixedNonFundedNonSecureId,
        'FixedNonFundedSecureId': value.fixedNonFundedSecureId,
        'InstallmentPlanTerminalDatas': value.installmentPlanTerminalDatas === undefined ? undefined : ((value.installmentPlanTerminalDatas as Array<any>).map(InstallmentPlanTerminalDatasToJSON)),
    };
}


