/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntityBase,
    EntityBaseFromJSON,
    EntityBaseFromJSONTyped,
    EntityBaseToJSON,
    InstallmentPlans,
    InstallmentPlansFromJSON,
    InstallmentPlansFromJSONTyped,
    InstallmentPlansToJSON,
    RefundLogEntriesAllOf,
    RefundLogEntriesAllOfFromJSON,
    RefundLogEntriesAllOfFromJSONTyped,
    RefundLogEntriesAllOfToJSON,
} from './';

/**
 * 
 * @export
 * @interface RefundLogEntries
 */
export interface RefundLogEntries {
    /**
     * 
     * @type {number}
     * @memberof RefundLogEntries
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof RefundLogEntries
     */
    amount: number;
    /**
     * 
     * @type {number}
     * @memberof RefundLogEntries
     */
    installmentPlanId: number;
    /**
     * 
     * @type {InstallmentPlans}
     * @memberof RefundLogEntries
     */
    installmentPlan?: InstallmentPlans;
}

export function RefundLogEntriesFromJSON(json: any): RefundLogEntries {
    return RefundLogEntriesFromJSONTyped(json, false);
}

export function RefundLogEntriesFromJSONTyped(json: any, ignoreDiscriminator: boolean): RefundLogEntries {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['Id'],
        'amount': json['Amount'],
        'installmentPlanId': json['InstallmentPlanId'],
        'installmentPlan': !exists(json, 'InstallmentPlan') ? undefined : InstallmentPlansFromJSON(json['InstallmentPlan']),
    };
}

export function RefundLogEntriesToJSON(value?: RefundLogEntries | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Id': value.id,
        'Amount': value.amount,
        'InstallmentPlanId': value.installmentPlanId,
        'InstallmentPlan': InstallmentPlansToJSON(value.installmentPlan),
    };
}


