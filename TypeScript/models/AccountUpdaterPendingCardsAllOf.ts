/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AccountUpdaterProvider,
    AccountUpdaterProviderFromJSON,
    AccountUpdaterProviderFromJSONTyped,
    AccountUpdaterProviderToJSON,
    Cards,
    CardsFromJSON,
    CardsFromJSONTyped,
    CardsToJSON,
} from './';

/**
 * 
 * @export
 * @interface AccountUpdaterPendingCardsAllOf
 */
export interface AccountUpdaterPendingCardsAllOf {
    /**
     * 
     * @type {number}
     * @memberof AccountUpdaterPendingCardsAllOf
     */
    cardId: number;
    /**
     * 
     * @type {Date}
     * @memberof AccountUpdaterPendingCardsAllOf
     */
    exportTime?: Date;
    /**
     * 
     * @type {string}
     * @memberof AccountUpdaterPendingCardsAllOf
     */
    exportBatchId?: string;
    /**
     * 
     * @type {string}
     * @memberof AccountUpdaterPendingCardsAllOf
     */
    exportRecordId?: string;
    /**
     * 
     * @type {Date}
     * @memberof AccountUpdaterPendingCardsAllOf
     */
    importTime?: Date;
    /**
     * 
     * @type {Cards}
     * @memberof AccountUpdaterPendingCardsAllOf
     */
    card?: Cards;
    /**
     * 
     * @type {AccountUpdaterProvider}
     * @memberof AccountUpdaterPendingCardsAllOf
     */
    accountUpdater: AccountUpdaterProvider;
}

export function AccountUpdaterPendingCardsAllOfFromJSON(json: any): AccountUpdaterPendingCardsAllOf {
    return AccountUpdaterPendingCardsAllOfFromJSONTyped(json, false);
}

export function AccountUpdaterPendingCardsAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountUpdaterPendingCardsAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cardId': json['CardId'],
        'exportTime': !exists(json, 'ExportTime') ? undefined : (new Date(json['ExportTime'])),
        'exportBatchId': !exists(json, 'ExportBatchId') ? undefined : json['ExportBatchId'],
        'exportRecordId': !exists(json, 'ExportRecordId') ? undefined : json['ExportRecordId'],
        'importTime': !exists(json, 'ImportTime') ? undefined : (new Date(json['ImportTime'])),
        'card': !exists(json, 'Card') ? undefined : CardsFromJSON(json['Card']),
        'accountUpdater': AccountUpdaterProviderFromJSON(json['AccountUpdater']),
    };
}

export function AccountUpdaterPendingCardsAllOfToJSON(value?: AccountUpdaterPendingCardsAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'CardId': value.cardId,
        'ExportTime': value.exportTime === undefined ? undefined : (value.exportTime.toISOString()),
        'ExportBatchId': value.exportBatchId,
        'ExportRecordId': value.exportRecordId,
        'ImportTime': value.importTime === undefined ? undefined : (value.importTime.toISOString()),
        'Card': CardsToJSON(value.card),
        'AccountUpdater': AccountUpdaterProviderToJSON(value.accountUpdater),
    };
}


