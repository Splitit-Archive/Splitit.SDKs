/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * 
 * @export
 * @enum {string}
 */
export enum SystemEmailsTypes {
    ConsumerReAuthorizationNotification = 'ConsumerReAuthorizationNotification',
    AdminNewUser = 'AdminNewUser',
    MerchantPaymentFailure = 'MerchantPaymentFailure',
    MerchantAuthorizationFailure = 'MerchantAuthorizationFailure',
    MerchantChb = 'MerchantChb',
    MerchantCreditCardChangeConfirmation = 'MerchantCreditCardChangeConfirmation',
    MerchantFullCaptureConfirmation = 'MerchantFullCaptureConfirmation',
    MerchantNewUser = 'MerchantNewUser',
    MerchantNewApiUser = 'MerchantNewApiUser',
    ConsumerInstallmentPlanConfirmation = 'ConsumerInstallmentPlanConfirmation',
    ConsumerPaymentConfirmation = 'ConsumerPaymentConfirmation',
    ConsumerPaymentFailure = 'ConsumerPaymentFailure',
    ConsumerAuthorizationFailure = 'ConsumerAuthorizationFailure',
    ConsumerPartialRefundPlanInProgress = 'ConsumerPartialRefundPlanInProgress',
    ConsumerCreditCardChangeConfirmation = 'ConsumerCreditCardChangeConfirmation',
    ConsumerFullCaptureConfirmation = 'ConsumerFullCaptureConfirmation',
    ConsumerPasswordResetUserUnlock = 'ConsumerPasswordResetUserUnlock',
    ConsumerWaitingForApproval = 'ConsumerWaitingForApproval',
    MerchantNotifyConsumerApprovalSet = 'MerchantNotifyConsumerApprovalSet',
    ConsumerNotifyMerchantUpdateInstallments = 'ConsumerNotifyMerchantUpdateInstallments',
    MerchantRemainderConsumerWaitingForApproval = 'MerchantRemainderConsumerWaitingForApproval',
    ConsumerFullCaptureConfirmationTriggeredByConsumer = 'ConsumerFullCaptureConfirmationTriggeredByConsumer',
    MerchantFullCaptureConfirmationTriggeredByConsumer = 'MerchantFullCaptureConfirmationTriggeredByConsumer',
    ConsumerPlanCancelled = 'ConsumerPlanCancelled',
    MerchantPlanCancelled = 'MerchantPlanCancelled',
    ConsumerPlanCancelledWithRefund = 'ConsumerPlanCancelledWithRefund',
    MerchantPlanCancelledWithRefund = 'MerchantPlanCancelledWithRefund',
    ConsumerCardExpirationNotification = 'ConsumerCardExpirationNotification',
    SupportConsumerPaymentFailure = 'SupportConsumerPaymentFailure',
    SupportConsumerAuthorizationFailure = 'SupportConsumerAuthorizationFailure',
    ConsumerCcRejectionSuccessfullyRecovered = 'ConsumerCcRejectionSuccessfullyRecovered',
    MerchantPendingShipmentReminderNotification = 'MerchantPendingShipmentReminderNotification',
    ConsumerPartialRefundPlanCompleted = 'ConsumerPartialRefundPlanCompleted',
    ConsumerFullRefundPlan = 'ConsumerFullRefundPlan',
    MerchantFundingIsOverNotification = 'MerchantFundingIsOverNotification',
    MerchantScpTerminalFundingHasExceedsThresholdNotification = 'MerchantScpTerminalFundingHasExceedsThresholdNotification',
    MerchantBoardingSignup = 'MerchantBoardingSignup',
    MerchantBoardingSubmit = 'MerchantBoardingSubmit',
    MerchantBoardingTest = 'MerchantBoardingTest',
    MerchantBoardingCertified = 'MerchantBoardingCertified',
    MerchantBoardingGoLive = 'MerchantBoardingGoLive',
    ConsumerNonSecuredPaymentFailure = 'ConsumerNonSecuredPaymentFailure',
    MerchantNonSecuredPaymentFailure = 'MerchantNonSecuredPaymentFailure',
    AgentNewUser = 'AgentNewUser',
    ConsumerCcRejectionSuccessfullyRecoveredSingleInstallment = 'ConsumerCcRejectionSuccessfullyRecoveredSingleInstallment',
    ConsumerAuthorizationFailureSingleInstallment = 'ConsumerAuthorizationFailureSingleInstallment',
    ConsumerCardExpirationNotificationSingleInstallment = 'ConsumerCardExpirationNotificationSingleInstallment',
    RequestPayment = 'RequestPayment',
    RequestUpdateCard = 'RequestUpdateCard'
}

export function SystemEmailsTypesFromJSON(json: any): SystemEmailsTypes {
    return SystemEmailsTypesFromJSONTyped(json, false);
}

export function SystemEmailsTypesFromJSONTyped(json: any, ignoreDiscriminator: boolean): SystemEmailsTypes {
    return json as SystemEmailsTypes;
}

export function SystemEmailsTypesToJSON(value?: SystemEmailsTypes | null): any {
    return value as any;
}

