/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    InstallmentPlans,
    InstallmentPlansFromJSON,
    InstallmentPlansFromJSONTyped,
    InstallmentPlansToJSON,
    SystemEmailsTypes,
    SystemEmailsTypesFromJSON,
    SystemEmailsTypesFromJSONTyped,
    SystemEmailsTypesToJSON,
    UserType,
    UserTypeFromJSON,
    UserTypeFromJSONTyped,
    UserTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface EmailAuditLogsAllOf
 */
export interface EmailAuditLogsAllOf {
    /**
     * 
     * @type {number}
     * @memberof EmailAuditLogsAllOf
     */
    installmentPlanId?: number;
    /**
     * 
     * @type {string}
     * @memberof EmailAuditLogsAllOf
     */
    userUniqueId?: string;
    /**
     * 
     * @type {number}
     * @memberof EmailAuditLogsAllOf
     */
    userId?: number;
    /**
     * 
     * @type {string}
     * @memberof EmailAuditLogsAllOf
     */
    emailAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof EmailAuditLogsAllOf
     */
    externalIdentifier?: string;
    /**
     * 
     * @type {InstallmentPlans}
     * @memberof EmailAuditLogsAllOf
     */
    installmentPlan?: InstallmentPlans;
    /**
     * 
     * @type {UserType}
     * @memberof EmailAuditLogsAllOf
     */
    userType?: UserType;
    /**
     * 
     * @type {SystemEmailsTypes}
     * @memberof EmailAuditLogsAllOf
     */
    emailType: SystemEmailsTypes;
    /**
     * 
     * @type {string}
     * @memberof EmailAuditLogsAllOf
     */
    emailHtmlBodyFilename?: string;
}

export function EmailAuditLogsAllOfFromJSON(json: any): EmailAuditLogsAllOf {
    return EmailAuditLogsAllOfFromJSONTyped(json, false);
}

export function EmailAuditLogsAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailAuditLogsAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'installmentPlanId': !exists(json, 'InstallmentPlanId') ? undefined : json['InstallmentPlanId'],
        'userUniqueId': !exists(json, 'UserUniqueId') ? undefined : json['UserUniqueId'],
        'userId': !exists(json, 'UserId') ? undefined : json['UserId'],
        'emailAddress': !exists(json, 'EmailAddress') ? undefined : json['EmailAddress'],
        'externalIdentifier': !exists(json, 'ExternalIdentifier') ? undefined : json['ExternalIdentifier'],
        'installmentPlan': !exists(json, 'InstallmentPlan') ? undefined : InstallmentPlansFromJSON(json['InstallmentPlan']),
        'userType': !exists(json, 'UserType') ? undefined : UserTypeFromJSON(json['UserType']),
        'emailType': SystemEmailsTypesFromJSON(json['EmailType']),
        'emailHtmlBodyFilename': !exists(json, 'EmailHtmlBodyFilename') ? undefined : json['EmailHtmlBodyFilename'],
    };
}

export function EmailAuditLogsAllOfToJSON(value?: EmailAuditLogsAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'InstallmentPlanId': value.installmentPlanId,
        'UserUniqueId': value.userUniqueId,
        'UserId': value.userId,
        'EmailAddress': value.emailAddress,
        'ExternalIdentifier': value.externalIdentifier,
        'InstallmentPlan': InstallmentPlansToJSON(value.installmentPlan),
        'UserType': UserTypeToJSON(value.userType),
        'EmailType': SystemEmailsTypesToJSON(value.emailType),
        'EmailHtmlBodyFilename': value.emailHtmlBodyFilename,
    };
}


