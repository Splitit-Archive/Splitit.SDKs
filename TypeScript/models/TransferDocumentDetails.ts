/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntityBase,
    EntityBaseFromJSON,
    EntityBaseFromJSONTyped,
    EntityBaseToJSON,
    InstallmentPlans,
    InstallmentPlansFromJSON,
    InstallmentPlansFromJSONTyped,
    InstallmentPlansToJSON,
    Installments,
    InstallmentsFromJSON,
    InstallmentsFromJSONTyped,
    InstallmentsToJSON,
    TransferDocumentDetailsAllOf,
    TransferDocumentDetailsAllOfFromJSON,
    TransferDocumentDetailsAllOfFromJSONTyped,
    TransferDocumentDetailsAllOfToJSON,
    TransferDocuments,
    TransferDocumentsFromJSON,
    TransferDocumentsFromJSONTyped,
    TransferDocumentsToJSON,
} from './';

/**
 * 
 * @export
 * @interface TransferDocumentDetails
 */
export interface TransferDocumentDetails {
    /**
     * 
     * @type {number}
     * @memberof TransferDocumentDetails
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof TransferDocumentDetails
     */
    amount: number;
    /**
     * 
     * @type {number}
     * @memberof TransferDocumentDetails
     */
    transferReason: number;
    /**
     * 
     * @type {number}
     * @memberof TransferDocumentDetails
     */
    transferDocumentId: number;
    /**
     * 
     * @type {number}
     * @memberof TransferDocumentDetails
     */
    installmentId?: number;
    /**
     * 
     * @type {number}
     * @memberof TransferDocumentDetails
     */
    planId?: number;
    /**
     * 
     * @type {Installments}
     * @memberof TransferDocumentDetails
     */
    installment?: Installments;
    /**
     * 
     * @type {InstallmentPlans}
     * @memberof TransferDocumentDetails
     */
    plan?: InstallmentPlans;
    /**
     * 
     * @type {TransferDocuments}
     * @memberof TransferDocumentDetails
     */
    transferDocument?: TransferDocuments;
}

export function TransferDocumentDetailsFromJSON(json: any): TransferDocumentDetails {
    return TransferDocumentDetailsFromJSONTyped(json, false);
}

export function TransferDocumentDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransferDocumentDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['Id'],
        'amount': json['Amount'],
        'transferReason': json['TransferReason'],
        'transferDocumentId': json['TransferDocumentId'],
        'installmentId': !exists(json, 'InstallmentId') ? undefined : json['InstallmentId'],
        'planId': !exists(json, 'PlanId') ? undefined : json['PlanId'],
        'installment': !exists(json, 'Installment') ? undefined : InstallmentsFromJSON(json['Installment']),
        'plan': !exists(json, 'Plan') ? undefined : InstallmentPlansFromJSON(json['Plan']),
        'transferDocument': !exists(json, 'TransferDocument') ? undefined : TransferDocumentsFromJSON(json['TransferDocument']),
    };
}

export function TransferDocumentDetailsToJSON(value?: TransferDocumentDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Id': value.id,
        'Amount': value.amount,
        'TransferReason': value.transferReason,
        'TransferDocumentId': value.transferDocumentId,
        'InstallmentId': value.installmentId,
        'PlanId': value.planId,
        'Installment': InstallmentsToJSON(value.installment),
        'Plan': InstallmentPlansToJSON(value.plan),
        'TransferDocument': TransferDocumentsToJSON(value.transferDocument),
    };
}


