/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntityBase,
    EntityBaseFromJSON,
    EntityBaseFromJSONTyped,
    EntityBaseToJSON,
    InstallmentPlanEventType,
    InstallmentPlanEventTypeFromJSON,
    InstallmentPlanEventTypeFromJSONTyped,
    InstallmentPlanEventTypeToJSON,
    InstallmentPlanEventsSubscriptionDatasAllOf,
    InstallmentPlanEventsSubscriptionDatasAllOfFromJSON,
    InstallmentPlanEventsSubscriptionDatasAllOfFromJSONTyped,
    InstallmentPlanEventsSubscriptionDatasAllOfToJSON,
    Merchants,
    MerchantsFromJSON,
    MerchantsFromJSONTyped,
    MerchantsToJSON,
} from './';

/**
 * 
 * @export
 * @interface InstallmentPlanEventsSubscriptionDatas
 */
export interface InstallmentPlanEventsSubscriptionDatas {
    /**
     * 
     * @type {number}
     * @memberof InstallmentPlanEventsSubscriptionDatas
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof InstallmentPlanEventsSubscriptionDatas
     */
    subscribedEventsString?: string;
    /**
     * 
     * @type {number}
     * @memberof InstallmentPlanEventsSubscriptionDatas
     */
    merchantId: number;
    /**
     * 
     * @type {string}
     * @memberof InstallmentPlanEventsSubscriptionDatas
     */
    eventSubscriptionEndPointUrl?: string;
    /**
     * 
     * @type {Merchants}
     * @memberof InstallmentPlanEventsSubscriptionDatas
     */
    merchant?: Merchants;
    /**
     * 
     * @type {InstallmentPlanEventType}
     * @memberof InstallmentPlanEventsSubscriptionDatas
     */
    subscribedEvent: InstallmentPlanEventType;
}

export function InstallmentPlanEventsSubscriptionDatasFromJSON(json: any): InstallmentPlanEventsSubscriptionDatas {
    return InstallmentPlanEventsSubscriptionDatasFromJSONTyped(json, false);
}

export function InstallmentPlanEventsSubscriptionDatasFromJSONTyped(json: any, ignoreDiscriminator: boolean): InstallmentPlanEventsSubscriptionDatas {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['Id'],
        'subscribedEventsString': !exists(json, 'SubscribedEventsString') ? undefined : json['SubscribedEventsString'],
        'merchantId': json['MerchantId'],
        'eventSubscriptionEndPointUrl': !exists(json, 'EventSubscriptionEndPointUrl') ? undefined : json['EventSubscriptionEndPointUrl'],
        'merchant': !exists(json, 'Merchant') ? undefined : MerchantsFromJSON(json['Merchant']),
        'subscribedEvent': InstallmentPlanEventTypeFromJSON(json['SubscribedEvent']),
    };
}

export function InstallmentPlanEventsSubscriptionDatasToJSON(value?: InstallmentPlanEventsSubscriptionDatas | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Id': value.id,
        'SubscribedEventsString': value.subscribedEventsString,
        'MerchantId': value.merchantId,
        'EventSubscriptionEndPointUrl': value.eventSubscriptionEndPointUrl,
        'Merchant': MerchantsToJSON(value.merchant),
        'SubscribedEvent': InstallmentPlanEventTypeToJSON(value.subscribedEvent),
    };
}


