/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Merchants,
    MerchantsFromJSON,
    MerchantsFromJSONTyped,
    MerchantsToJSON,
    Parameters,
    ParametersFromJSON,
    ParametersFromJSONTyped,
    ParametersToJSON,
    SplititJobDefinitions,
    SplititJobDefinitionsFromJSON,
    SplititJobDefinitionsFromJSONTyped,
    SplititJobDefinitionsToJSON,
    Tokens,
    TokensFromJSON,
    TokensFromJSONTyped,
    TokensToJSON,
} from './';

/**
 * 
 * @export
 * @interface ParameterGroupsAllOf
 */
export interface ParameterGroupsAllOf {
    /**
     * 
     * @type {Array<Tokens>}
     * @memberof ParameterGroupsAllOf
     */
    tokens?: Array<Tokens>;
    /**
     * 
     * @type {Array<Merchants>}
     * @memberof ParameterGroupsAllOf
     */
    merchants?: Array<Merchants>;
    /**
     * 
     * @type {Array<Parameters>}
     * @memberof ParameterGroupsAllOf
     */
    parameters?: Array<Parameters>;
    /**
     * 
     * @type {Array<SplititJobDefinitions>}
     * @memberof ParameterGroupsAllOf
     */
    splititJobDefinitions?: Array<SplititJobDefinitions>;
}

export function ParameterGroupsAllOfFromJSON(json: any): ParameterGroupsAllOf {
    return ParameterGroupsAllOfFromJSONTyped(json, false);
}

export function ParameterGroupsAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): ParameterGroupsAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'tokens': !exists(json, 'Tokens') ? undefined : ((json['Tokens'] as Array<any>).map(TokensFromJSON)),
        'merchants': !exists(json, 'Merchants') ? undefined : ((json['Merchants'] as Array<any>).map(MerchantsFromJSON)),
        'parameters': !exists(json, 'Parameters') ? undefined : ((json['Parameters'] as Array<any>).map(ParametersFromJSON)),
        'splititJobDefinitions': !exists(json, 'SplititJobDefinitions') ? undefined : ((json['SplititJobDefinitions'] as Array<any>).map(SplititJobDefinitionsFromJSON)),
    };
}

export function ParameterGroupsAllOfToJSON(value?: ParameterGroupsAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Tokens': value.tokens === undefined ? undefined : ((value.tokens as Array<any>).map(TokensToJSON)),
        'Merchants': value.merchants === undefined ? undefined : ((value.merchants as Array<any>).map(MerchantsToJSON)),
        'Parameters': value.parameters === undefined ? undefined : ((value.parameters as Array<any>).map(ParametersToJSON)),
        'SplititJobDefinitions': value.splititJobDefinitions === undefined ? undefined : ((value.splititJobDefinitions as Array<any>).map(SplititJobDefinitionsToJSON)),
    };
}


