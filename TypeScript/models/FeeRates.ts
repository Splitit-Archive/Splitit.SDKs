/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AgentFeeType,
    AgentFeeTypeFromJSON,
    AgentFeeTypeFromJSONTyped,
    AgentFeeTypeToJSON,
    EntityBase,
    EntityBaseFromJSON,
    EntityBaseFromJSONTyped,
    EntityBaseToJSON,
    FeeRatesAllOf,
    FeeRatesAllOfFromJSON,
    FeeRatesAllOfFromJSONTyped,
    FeeRatesAllOfToJSON,
} from './';

/**
 * 
 * @export
 * @interface FeeRates
 */
export interface FeeRates {
    /**
     * 
     * @type {number}
     * @memberof FeeRates
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof FeeRates
     */
    from: number;
    /**
     * 
     * @type {number}
     * @memberof FeeRates
     */
    to: number;
    /**
     * 
     * @type {number}
     * @memberof FeeRates
     */
    merchantValue: number;
    /**
     * 
     * @type {number}
     * @memberof FeeRates
     */
    agentValue: number;
    /**
     * 
     * @type {number}
     * @memberof FeeRates
     */
    feeRateCollectionId: number;
    /**
     * 
     * @type {AgentFeeType}
     * @memberof FeeRates
     */
    agentFeeType: AgentFeeType;
}

export function FeeRatesFromJSON(json: any): FeeRates {
    return FeeRatesFromJSONTyped(json, false);
}

export function FeeRatesFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeeRates {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['Id'],
        'from': json['From'],
        'to': json['To'],
        'merchantValue': json['MerchantValue'],
        'agentValue': json['AgentValue'],
        'feeRateCollectionId': json['FeeRateCollectionId'],
        'agentFeeType': AgentFeeTypeFromJSON(json['AgentFeeType']),
    };
}

export function FeeRatesToJSON(value?: FeeRates | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Id': value.id,
        'From': value.from,
        'To': value.to,
        'MerchantValue': value.merchantValue,
        'AgentValue': value.agentValue,
        'FeeRateCollectionId': value.feeRateCollectionId,
        'AgentFeeType': AgentFeeTypeToJSON(value.agentFeeType),
    };
}


