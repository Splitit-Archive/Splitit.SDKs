/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntityBase,
    EntityBaseFromJSON,
    EntityBaseFromJSONTyped,
    EntityBaseToJSON,
    InstallmentPlanStatus,
    InstallmentPlanStatusFromJSON,
    InstallmentPlanStatusFromJSONTyped,
    InstallmentPlanStatusToJSON,
    InstallmentPlanStatusLogEntriesAllOf,
    InstallmentPlanStatusLogEntriesAllOfFromJSON,
    InstallmentPlanStatusLogEntriesAllOfFromJSONTyped,
    InstallmentPlanStatusLogEntriesAllOfToJSON,
    InstallmentPlans,
    InstallmentPlansFromJSON,
    InstallmentPlansFromJSONTyped,
    InstallmentPlansToJSON,
} from './';

/**
 * 
 * @export
 * @interface InstallmentPlanStatusLogEntries
 */
export interface InstallmentPlanStatusLogEntries {
    /**
     * 
     * @type {number}
     * @memberof InstallmentPlanStatusLogEntries
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof InstallmentPlanStatusLogEntries
     */
    planId: number;
    /**
     * 
     * @type {InstallmentPlans}
     * @memberof InstallmentPlanStatusLogEntries
     */
    plan?: InstallmentPlans;
    /**
     * 
     * @type {InstallmentPlanStatus}
     * @memberof InstallmentPlanStatusLogEntries
     */
    status: InstallmentPlanStatus;
}

export function InstallmentPlanStatusLogEntriesFromJSON(json: any): InstallmentPlanStatusLogEntries {
    return InstallmentPlanStatusLogEntriesFromJSONTyped(json, false);
}

export function InstallmentPlanStatusLogEntriesFromJSONTyped(json: any, ignoreDiscriminator: boolean): InstallmentPlanStatusLogEntries {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['Id'],
        'planId': json['PlanId'],
        'plan': !exists(json, 'Plan') ? undefined : InstallmentPlansFromJSON(json['Plan']),
        'status': InstallmentPlanStatusFromJSON(json['Status']),
    };
}

export function InstallmentPlanStatusLogEntriesToJSON(value?: InstallmentPlanStatusLogEntries | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Id': value.id,
        'PlanId': value.planId,
        'Plan': InstallmentPlansToJSON(value.plan),
        'Status': InstallmentPlanStatusToJSON(value.status),
    };
}


