/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    BinDataItemsAllOf,
    BinDataItemsAllOfFromJSON,
    BinDataItemsAllOfFromJSONTyped,
    BinDataItemsAllOfToJSON,
    CardBrand,
    CardBrandFromJSON,
    CardBrandFromJSONTyped,
    CardBrandToJSON,
    CardType,
    CardTypeFromJSON,
    CardTypeFromJSONTyped,
    CardTypeToJSON,
    Countries,
    CountriesFromJSON,
    CountriesFromJSONTyped,
    CountriesToJSON,
    EntityBase,
    EntityBaseFromJSON,
    EntityBaseFromJSONTyped,
    EntityBaseToJSON,
} from './';

/**
 * 
 * @export
 * @interface BinDataItems
 */
export interface BinDataItems {
    /**
     * 
     * @type {number}
     * @memberof BinDataItems
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof BinDataItems
     */
    lowBin?: string;
    /**
     * 
     * @type {string}
     * @memberof BinDataItems
     */
    highBin?: string;
    /**
     * 
     * @type {number}
     * @memberof BinDataItems
     */
    binLength: number;
    /**
     * 
     * @type {number}
     * @memberof BinDataItems
     */
    binDetailPan: number;
    /**
     * 
     * @type {string}
     * @memberof BinDataItems
     */
    issuerBankName?: string;
    /**
     * 
     * @type {number}
     * @memberof BinDataItems
     */
    issueCountryId?: number;
    /**
     * 
     * @type {string}
     * @memberof BinDataItems
     */
    detailCardIndicator?: string;
    /**
     * 
     * @type {Date}
     * @memberof BinDataItems
     */
    issuerUpdateDate: Date;
    /**
     * 
     * @type {string}
     * @memberof BinDataItems
     */
    ebtState?: string;
    /**
     * 
     * @type {boolean}
     * @memberof BinDataItems
     */
    isDebitSignatureNetworkParticipant: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BinDataItems
     */
    isFsa: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BinDataItems
     */
    isPrepaid: boolean;
    /**
     * 
     * @type {string}
     * @memberof BinDataItems
     */
    productId?: string;
    /**
     * 
     * @type {string}
     * @memberof BinDataItems
     */
    regulatorIndicator?: string;
    /**
     * 
     * @type {string}
     * @memberof BinDataItems
     */
    visaProductSubType?: string;
    /**
     * 
     * @type {string}
     * @memberof BinDataItems
     */
    visaLargeTicketIndicator?: string;
    /**
     * 
     * @type {string}
     * @memberof BinDataItems
     */
    accountLevelProcessingIndicator?: string;
    /**
     * 
     * @type {string}
     * @memberof BinDataItems
     */
    cardClass?: string;
    /**
     * 
     * @type {number}
     * @memberof BinDataItems
     */
    panLengthMin: number;
    /**
     * 
     * @type {number}
     * @memberof BinDataItems
     */
    panLengthMax: number;
    /**
     * 
     * @type {string}
     * @memberof BinDataItems
     */
    tokenIndicator?: string;
    /**
     * 
     * @type {string}
     * @memberof BinDataItems
     */
    issuingNetwork?: string;
    /**
     * 
     * @type {string}
     * @memberof BinDataItems
     */
    cardHolderBillingCurrency?: string;
    /**
     * 
     * @type {string}
     * @memberof BinDataItems
     */
    moneySendIndicator?: string;
    /**
     * 
     * @type {string}
     * @memberof BinDataItems
     */
    originalCreditMoneyTransferIndicator?: string;
    /**
     * 
     * @type {string}
     * @memberof BinDataItems
     */
    originalCreditOnlineGamblingIndicator?: string;
    /**
     * 
     * @type {string}
     * @memberof BinDataItems
     */
    originalCreditTransactionIndicator?: string;
    /**
     * 
     * @type {string}
     * @memberof BinDataItems
     */
    fastFunds?: string;
    /**
     * 
     * @type {string}
     * @memberof BinDataItems
     */
    reservedField?: string;
    /**
     * 
     * @type {Countries}
     * @memberof BinDataItems
     */
    issueCountry?: Countries;
    /**
     * 
     * @type {CardBrand}
     * @memberof BinDataItems
     */
    cardBrand: CardBrand;
    /**
     * 
     * @type {CardType}
     * @memberof BinDataItems
     */
    cardType: CardType;
}

export function BinDataItemsFromJSON(json: any): BinDataItems {
    return BinDataItemsFromJSONTyped(json, false);
}

export function BinDataItemsFromJSONTyped(json: any, ignoreDiscriminator: boolean): BinDataItems {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['Id'],
        'lowBin': !exists(json, 'LowBin') ? undefined : json['LowBin'],
        'highBin': !exists(json, 'HighBin') ? undefined : json['HighBin'],
        'binLength': json['BinLength'],
        'binDetailPan': json['BinDetailPan'],
        'issuerBankName': !exists(json, 'IssuerBankName') ? undefined : json['IssuerBankName'],
        'issueCountryId': !exists(json, 'IssueCountryId') ? undefined : json['IssueCountryId'],
        'detailCardIndicator': !exists(json, 'DetailCardIndicator') ? undefined : json['DetailCardIndicator'],
        'issuerUpdateDate': (new Date(json['IssuerUpdateDate'])),
        'ebtState': !exists(json, 'EbtState') ? undefined : json['EbtState'],
        'isDebitSignatureNetworkParticipant': json['IsDebitSignatureNetworkParticipant'],
        'isFsa': json['IsFsa'],
        'isPrepaid': json['IsPrepaid'],
        'productId': !exists(json, 'ProductId') ? undefined : json['ProductId'],
        'regulatorIndicator': !exists(json, 'RegulatorIndicator') ? undefined : json['RegulatorIndicator'],
        'visaProductSubType': !exists(json, 'VisaProductSubType') ? undefined : json['VisaProductSubType'],
        'visaLargeTicketIndicator': !exists(json, 'VisaLargeTicketIndicator') ? undefined : json['VisaLargeTicketIndicator'],
        'accountLevelProcessingIndicator': !exists(json, 'AccountLevelProcessingIndicator') ? undefined : json['AccountLevelProcessingIndicator'],
        'cardClass': !exists(json, 'CardClass') ? undefined : json['CardClass'],
        'panLengthMin': json['PanLengthMin'],
        'panLengthMax': json['PanLengthMax'],
        'tokenIndicator': !exists(json, 'TokenIndicator') ? undefined : json['TokenIndicator'],
        'issuingNetwork': !exists(json, 'IssuingNetwork') ? undefined : json['IssuingNetwork'],
        'cardHolderBillingCurrency': !exists(json, 'CardHolderBillingCurrency') ? undefined : json['CardHolderBillingCurrency'],
        'moneySendIndicator': !exists(json, 'MoneySendIndicator') ? undefined : json['MoneySendIndicator'],
        'originalCreditMoneyTransferIndicator': !exists(json, 'OriginalCreditMoneyTransferIndicator') ? undefined : json['OriginalCreditMoneyTransferIndicator'],
        'originalCreditOnlineGamblingIndicator': !exists(json, 'OriginalCreditOnlineGamblingIndicator') ? undefined : json['OriginalCreditOnlineGamblingIndicator'],
        'originalCreditTransactionIndicator': !exists(json, 'OriginalCreditTransactionIndicator') ? undefined : json['OriginalCreditTransactionIndicator'],
        'fastFunds': !exists(json, 'FastFunds') ? undefined : json['FastFunds'],
        'reservedField': !exists(json, 'ReservedField') ? undefined : json['ReservedField'],
        'issueCountry': !exists(json, 'IssueCountry') ? undefined : CountriesFromJSON(json['IssueCountry']),
        'cardBrand': CardBrandFromJSON(json['CardBrand']),
        'cardType': CardTypeFromJSON(json['CardType']),
    };
}

export function BinDataItemsToJSON(value?: BinDataItems | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Id': value.id,
        'LowBin': value.lowBin,
        'HighBin': value.highBin,
        'BinLength': value.binLength,
        'BinDetailPan': value.binDetailPan,
        'IssuerBankName': value.issuerBankName,
        'IssueCountryId': value.issueCountryId,
        'DetailCardIndicator': value.detailCardIndicator,
        'IssuerUpdateDate': (value.issuerUpdateDate.toISOString()),
        'EbtState': value.ebtState,
        'IsDebitSignatureNetworkParticipant': value.isDebitSignatureNetworkParticipant,
        'IsFsa': value.isFsa,
        'IsPrepaid': value.isPrepaid,
        'ProductId': value.productId,
        'RegulatorIndicator': value.regulatorIndicator,
        'VisaProductSubType': value.visaProductSubType,
        'VisaLargeTicketIndicator': value.visaLargeTicketIndicator,
        'AccountLevelProcessingIndicator': value.accountLevelProcessingIndicator,
        'CardClass': value.cardClass,
        'PanLengthMin': value.panLengthMin,
        'PanLengthMax': value.panLengthMax,
        'TokenIndicator': value.tokenIndicator,
        'IssuingNetwork': value.issuingNetwork,
        'CardHolderBillingCurrency': value.cardHolderBillingCurrency,
        'MoneySendIndicator': value.moneySendIndicator,
        'OriginalCreditMoneyTransferIndicator': value.originalCreditMoneyTransferIndicator,
        'OriginalCreditOnlineGamblingIndicator': value.originalCreditOnlineGamblingIndicator,
        'OriginalCreditTransactionIndicator': value.originalCreditTransactionIndicator,
        'FastFunds': value.fastFunds,
        'ReservedField': value.reservedField,
        'IssueCountry': CountriesToJSON(value.issueCountry),
        'CardBrand': CardBrandToJSON(value.cardBrand),
        'CardType': CardTypeToJSON(value.cardType),
    };
}


