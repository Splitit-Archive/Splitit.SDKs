/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AddressData,
    AddressDataFromJSON,
    AddressDataFromJSONTyped,
    AddressDataToJSON,
    ReferenceEntityBase,
    ReferenceEntityBaseFromJSON,
    ReferenceEntityBaseFromJSONTyped,
    ReferenceEntityBaseToJSON,
} from './';

/**
 * 
 * @export
 * @interface CardData
 */
export interface CardData {
    /**
     * 
     * @type {string}
     * @memberof CardData
     */
    cardId?: string;
    /**
     * 
     * @type {string}
     * @memberof CardData
     */
    cardNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof CardData
     */
    cardExpMonth?: string;
    /**
     * 
     * @type {string}
     * @memberof CardData
     */
    cardExpYear?: string;
    /**
     * 
     * @type {ReferenceEntityBase}
     * @memberof CardData
     */
    cardBrand?: ReferenceEntityBase;
    /**
     * 
     * @type {ReferenceEntityBase}
     * @memberof CardData
     */
    cardType?: ReferenceEntityBase;
    /**
     * 
     * @type {string}
     * @memberof CardData
     */
    bin?: string;
    /**
     * 
     * @type {string}
     * @memberof CardData
     */
    cardHolderFullName?: string;
    /**
     * 
     * @type {string}
     * @memberof CardData
     */
    cardCvv?: string;
    /**
     * 
     * @type {AddressData}
     * @memberof CardData
     */
    address?: AddressData;
    /**
     * 
     * @type {string}
     * @memberof CardData
     */
    token?: string;
}

export function CardDataFromJSON(json: any): CardData {
    return CardDataFromJSONTyped(json, false);
}

export function CardDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): CardData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cardId': !exists(json, 'CardId') ? undefined : json['CardId'],
        'cardNumber': !exists(json, 'CardNumber') ? undefined : json['CardNumber'],
        'cardExpMonth': !exists(json, 'CardExpMonth') ? undefined : json['CardExpMonth'],
        'cardExpYear': !exists(json, 'CardExpYear') ? undefined : json['CardExpYear'],
        'cardBrand': !exists(json, 'CardBrand') ? undefined : ReferenceEntityBaseFromJSON(json['CardBrand']),
        'cardType': !exists(json, 'CardType') ? undefined : ReferenceEntityBaseFromJSON(json['CardType']),
        'bin': !exists(json, 'Bin') ? undefined : json['Bin'],
        'cardHolderFullName': !exists(json, 'CardHolderFullName') ? undefined : json['CardHolderFullName'],
        'cardCvv': !exists(json, 'CardCvv') ? undefined : json['CardCvv'],
        'address': !exists(json, 'Address') ? undefined : AddressDataFromJSON(json['Address']),
        'token': !exists(json, 'Token') ? undefined : json['Token'],
    };
}

export function CardDataToJSON(value?: CardData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'CardId': value.cardId,
        'CardNumber': value.cardNumber,
        'CardExpMonth': value.cardExpMonth,
        'CardExpYear': value.cardExpYear,
        'CardBrand': ReferenceEntityBaseToJSON(value.cardBrand),
        'CardType': ReferenceEntityBaseToJSON(value.cardType),
        'Bin': value.bin,
        'CardHolderFullName': value.cardHolderFullName,
        'CardCvv': value.cardCvv,
        'Address': AddressDataToJSON(value.address),
        'Token': value.token,
    };
}


