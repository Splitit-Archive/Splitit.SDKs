/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Cards,
    CardsFromJSON,
    CardsFromJSONTyped,
    CardsToJSON,
    DEKDataAllOf,
    DEKDataAllOfFromJSON,
    DEKDataAllOfFromJSONTyped,
    DEKDataAllOfToJSON,
    EntityBase,
    EntityBaseFromJSON,
    EntityBaseFromJSONTyped,
    EntityBaseToJSON,
} from './';

/**
 * 
 * @export
 * @interface DEKData
 */
export interface DEKData {
    /**
     * 
     * @type {number}
     * @memberof DEKData
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof DEKData
     */
    ciphertextBlob?: string;
    /**
     * 
     * @type {boolean}
     * @memberof DEKData
     */
    isActive: boolean;
    /**
     * 
     * @type {Array<Cards>}
     * @memberof DEKData
     */
    dekCards?: Array<Cards>;
}

export function DEKDataFromJSON(json: any): DEKData {
    return DEKDataFromJSONTyped(json, false);
}

export function DEKDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): DEKData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['Id'],
        'ciphertextBlob': !exists(json, 'CiphertextBlob') ? undefined : json['CiphertextBlob'],
        'isActive': json['IsActive'],
        'dekCards': !exists(json, 'DekCards') ? undefined : ((json['DekCards'] as Array<any>).map(CardsFromJSON)),
    };
}

export function DEKDataToJSON(value?: DEKData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Id': value.id,
        'CiphertextBlob': value.ciphertextBlob,
        'IsActive': value.isActive,
        'DekCards': value.dekCards === undefined ? undefined : ((value.dekCards as Array<any>).map(CardsToJSON)),
    };
}


