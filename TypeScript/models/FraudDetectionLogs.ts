/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Cards,
    CardsFromJSON,
    CardsFromJSONTyped,
    CardsToJSON,
    EntityBase,
    EntityBaseFromJSON,
    EntityBaseFromJSONTyped,
    EntityBaseToJSON,
    FraudCheckResult,
    FraudCheckResultFromJSON,
    FraudCheckResultFromJSONTyped,
    FraudCheckResultToJSON,
    FraudDetectionLogsAllOf,
    FraudDetectionLogsAllOfFromJSON,
    FraudDetectionLogsAllOfFromJSONTyped,
    FraudDetectionLogsAllOfToJSON,
    InstallmentPlans,
    InstallmentPlansFromJSON,
    InstallmentPlansFromJSONTyped,
    InstallmentPlansToJSON,
    PaymentGatewayTransactionLogs,
    PaymentGatewayTransactionLogsFromJSON,
    PaymentGatewayTransactionLogsFromJSONTyped,
    PaymentGatewayTransactionLogsToJSON,
} from './';

/**
 * 
 * @export
 * @interface FraudDetectionLogs
 */
export interface FraudDetectionLogs {
    /**
     * 
     * @type {number}
     * @memberof FraudDetectionLogs
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof FraudDetectionLogs
     */
    installmentPlanId: number;
    /**
     * 
     * @type {string}
     * @memberof FraudDetectionLogs
     */
    fullLog?: string;
    /**
     * 
     * @type {string}
     * @memberof FraudDetectionLogs
     */
    providerResultDescription?: string;
    /**
     * 
     * @type {string}
     * @memberof FraudDetectionLogs
     */
    providerResultCode?: string;
    /**
     * 
     * @type {string}
     * @memberof FraudDetectionLogs
     */
    providerReferenceId?: string;
    /**
     * 
     * @type {number}
     * @memberof FraudDetectionLogs
     */
    timeLapse: number;
    /**
     * 
     * @type {number}
     * @memberof FraudDetectionLogs
     */
    cardId: number;
    /**
     * 
     * @type {string}
     * @memberof FraudDetectionLogs
     */
    provider?: string;
    /**
     * 
     * @type {number}
     * @memberof FraudDetectionLogs
     */
    paymentGateWayTransactionLogId?: number;
    /**
     * 
     * @type {Cards}
     * @memberof FraudDetectionLogs
     */
    card?: Cards;
    /**
     * 
     * @type {InstallmentPlans}
     * @memberof FraudDetectionLogs
     */
    installmentPlan?: InstallmentPlans;
    /**
     * 
     * @type {PaymentGatewayTransactionLogs}
     * @memberof FraudDetectionLogs
     */
    paymentGateWayTransactionLog?: PaymentGatewayTransactionLogs;
    /**
     * 
     * @type {FraudCheckResult}
     * @memberof FraudDetectionLogs
     */
    result: FraudCheckResult;
}

export function FraudDetectionLogsFromJSON(json: any): FraudDetectionLogs {
    return FraudDetectionLogsFromJSONTyped(json, false);
}

export function FraudDetectionLogsFromJSONTyped(json: any, ignoreDiscriminator: boolean): FraudDetectionLogs {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['Id'],
        'installmentPlanId': json['InstallmentPlanId'],
        'fullLog': !exists(json, 'FullLog') ? undefined : json['FullLog'],
        'providerResultDescription': !exists(json, 'ProviderResultDescription') ? undefined : json['ProviderResultDescription'],
        'providerResultCode': !exists(json, 'ProviderResultCode') ? undefined : json['ProviderResultCode'],
        'providerReferenceId': !exists(json, 'ProviderReferenceId') ? undefined : json['ProviderReferenceId'],
        'timeLapse': json['TimeLapse'],
        'cardId': json['CardId'],
        'provider': !exists(json, 'Provider') ? undefined : json['Provider'],
        'paymentGateWayTransactionLogId': !exists(json, 'PaymentGateWayTransactionLogId') ? undefined : json['PaymentGateWayTransactionLogId'],
        'card': !exists(json, 'Card') ? undefined : CardsFromJSON(json['Card']),
        'installmentPlan': !exists(json, 'InstallmentPlan') ? undefined : InstallmentPlansFromJSON(json['InstallmentPlan']),
        'paymentGateWayTransactionLog': !exists(json, 'PaymentGateWayTransactionLog') ? undefined : PaymentGatewayTransactionLogsFromJSON(json['PaymentGateWayTransactionLog']),
        'result': FraudCheckResultFromJSON(json['Result']),
    };
}

export function FraudDetectionLogsToJSON(value?: FraudDetectionLogs | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Id': value.id,
        'InstallmentPlanId': value.installmentPlanId,
        'FullLog': value.fullLog,
        'ProviderResultDescription': value.providerResultDescription,
        'ProviderResultCode': value.providerResultCode,
        'ProviderReferenceId': value.providerReferenceId,
        'TimeLapse': value.timeLapse,
        'CardId': value.cardId,
        'Provider': value.provider,
        'PaymentGateWayTransactionLogId': value.paymentGateWayTransactionLogId,
        'Card': CardsToJSON(value.card),
        'InstallmentPlan': InstallmentPlansToJSON(value.installmentPlan),
        'PaymentGateWayTransactionLog': PaymentGatewayTransactionLogsToJSON(value.paymentGateWayTransactionLog),
        'Result': FraudCheckResultToJSON(value.result),
    };
}


