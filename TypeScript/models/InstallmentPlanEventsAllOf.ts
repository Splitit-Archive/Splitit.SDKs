/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    InstallmentPlanEventSubscriberRecords,
    InstallmentPlanEventSubscriberRecordsFromJSON,
    InstallmentPlanEventSubscriberRecordsFromJSONTyped,
    InstallmentPlanEventSubscriberRecordsToJSON,
    InstallmentPlanEventType,
    InstallmentPlanEventTypeFromJSON,
    InstallmentPlanEventTypeFromJSONTyped,
    InstallmentPlanEventTypeToJSON,
    InstallmentPlans,
    InstallmentPlansFromJSON,
    InstallmentPlansFromJSONTyped,
    InstallmentPlansToJSON,
} from './';

/**
 * 
 * @export
 * @interface InstallmentPlanEventsAllOf
 */
export interface InstallmentPlanEventsAllOf {
    /**
     * 
     * @type {number}
     * @memberof InstallmentPlanEventsAllOf
     */
    installmentPlanId: number;
    /**
     * 
     * @type {Date}
     * @memberof InstallmentPlanEventsAllOf
     */
    activityTime: Date;
    /**
     * 
     * @type {InstallmentPlans}
     * @memberof InstallmentPlanEventsAllOf
     */
    installmentPlan?: InstallmentPlans;
    /**
     * 
     * @type {Array<InstallmentPlanEventSubscriberRecords>}
     * @memberof InstallmentPlanEventsAllOf
     */
    installmentPlanEventSubscriberRecords?: Array<InstallmentPlanEventSubscriberRecords>;
    /**
     * 
     * @type {InstallmentPlanEventType}
     * @memberof InstallmentPlanEventsAllOf
     */
    event: InstallmentPlanEventType;
}

export function InstallmentPlanEventsAllOfFromJSON(json: any): InstallmentPlanEventsAllOf {
    return InstallmentPlanEventsAllOfFromJSONTyped(json, false);
}

export function InstallmentPlanEventsAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): InstallmentPlanEventsAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'installmentPlanId': json['InstallmentPlanId'],
        'activityTime': (new Date(json['ActivityTime'])),
        'installmentPlan': !exists(json, 'InstallmentPlan') ? undefined : InstallmentPlansFromJSON(json['InstallmentPlan']),
        'installmentPlanEventSubscriberRecords': !exists(json, 'InstallmentPlanEventSubscriberRecords') ? undefined : ((json['InstallmentPlanEventSubscriberRecords'] as Array<any>).map(InstallmentPlanEventSubscriberRecordsFromJSON)),
        'event': InstallmentPlanEventTypeFromJSON(json['Event']),
    };
}

export function InstallmentPlanEventsAllOfToJSON(value?: InstallmentPlanEventsAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'InstallmentPlanId': value.installmentPlanId,
        'ActivityTime': (value.activityTime.toISOString()),
        'InstallmentPlan': InstallmentPlansToJSON(value.installmentPlan),
        'InstallmentPlanEventSubscriberRecords': value.installmentPlanEventSubscriberRecords === undefined ? undefined : ((value.installmentPlanEventSubscriberRecords as Array<any>).map(InstallmentPlanEventSubscriberRecordsToJSON)),
        'Event': InstallmentPlanEventTypeToJSON(value.event),
    };
}


