/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntityBase,
    EntityBaseFromJSON,
    EntityBaseFromJSONTyped,
    EntityBaseToJSON,
    InstallmentPlanAuditLogs,
    InstallmentPlanAuditLogsFromJSON,
    InstallmentPlanAuditLogsFromJSONTyped,
    InstallmentPlanAuditLogsToJSON,
    PisSessions,
    PisSessionsFromJSON,
    PisSessionsFromJSONTyped,
    PisSessionsToJSON,
    TouchPoints,
    TouchPointsFromJSON,
    TouchPointsFromJSONTyped,
    TouchPointsToJSON,
    VersionedTouchPointsAllOf,
    VersionedTouchPointsAllOfFromJSON,
    VersionedTouchPointsAllOfFromJSONTyped,
    VersionedTouchPointsAllOfToJSON,
} from './';

/**
 * 
 * @export
 * @interface VersionedTouchPoints
 */
export interface VersionedTouchPoints {
    /**
     * 
     * @type {number}
     * @memberof VersionedTouchPoints
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof VersionedTouchPoints
     */
    version?: string;
    /**
     * 
     * @type {number}
     * @memberof VersionedTouchPoints
     */
    touchPointId: number;
    /**
     * 
     * @type {string}
     * @memberof VersionedTouchPoints
     */
    subVersion?: string;
    /**
     * 
     * @type {TouchPoints}
     * @memberof VersionedTouchPoints
     */
    touchPoint?: TouchPoints;
    /**
     * 
     * @type {Array<PisSessions>}
     * @memberof VersionedTouchPoints
     */
    pisSessions?: Array<PisSessions>;
    /**
     * 
     * @type {Array<InstallmentPlanAuditLogs>}
     * @memberof VersionedTouchPoints
     */
    installmentPlanAuditLogs?: Array<InstallmentPlanAuditLogs>;
}

export function VersionedTouchPointsFromJSON(json: any): VersionedTouchPoints {
    return VersionedTouchPointsFromJSONTyped(json, false);
}

export function VersionedTouchPointsFromJSONTyped(json: any, ignoreDiscriminator: boolean): VersionedTouchPoints {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['Id'],
        'version': !exists(json, 'Version') ? undefined : json['Version'],
        'touchPointId': json['TouchPointId'],
        'subVersion': !exists(json, 'SubVersion') ? undefined : json['SubVersion'],
        'touchPoint': !exists(json, 'TouchPoint') ? undefined : TouchPointsFromJSON(json['TouchPoint']),
        'pisSessions': !exists(json, 'PisSessions') ? undefined : ((json['PisSessions'] as Array<any>).map(PisSessionsFromJSON)),
        'installmentPlanAuditLogs': !exists(json, 'InstallmentPlanAuditLogs') ? undefined : ((json['InstallmentPlanAuditLogs'] as Array<any>).map(InstallmentPlanAuditLogsFromJSON)),
    };
}

export function VersionedTouchPointsToJSON(value?: VersionedTouchPoints | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Id': value.id,
        'Version': value.version,
        'TouchPointId': value.touchPointId,
        'SubVersion': value.subVersion,
        'TouchPoint': TouchPointsToJSON(value.touchPoint),
        'PisSessions': value.pisSessions === undefined ? undefined : ((value.pisSessions as Array<any>).map(PisSessionsToJSON)),
        'InstallmentPlanAuditLogs': value.installmentPlanAuditLogs === undefined ? undefined : ((value.installmentPlanAuditLogs as Array<any>).map(InstallmentPlanAuditLogsToJSON)),
    };
}


