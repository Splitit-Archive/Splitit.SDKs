/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Merchants,
    MerchantsFromJSON,
    MerchantsFromJSONTyped,
    MerchantsToJSON,
} from './';

/**
 * 
 * @export
 * @interface SalesAssociatesAllOf
 */
export interface SalesAssociatesAllOf {
    /**
     * 
     * @type {string}
     * @memberof SalesAssociatesAllOf
     */
    firstName?: string;
    /**
     * 
     * @type {string}
     * @memberof SalesAssociatesAllOf
     */
    lastName?: string;
    /**
     * 
     * @type {Array<Merchants>}
     * @memberof SalesAssociatesAllOf
     */
    merchants?: Array<Merchants>;
}

export function SalesAssociatesAllOfFromJSON(json: any): SalesAssociatesAllOf {
    return SalesAssociatesAllOfFromJSONTyped(json, false);
}

export function SalesAssociatesAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): SalesAssociatesAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'firstName': !exists(json, 'FirstName') ? undefined : json['FirstName'],
        'lastName': !exists(json, 'LastName') ? undefined : json['LastName'],
        'merchants': !exists(json, 'Merchants') ? undefined : ((json['Merchants'] as Array<any>).map(MerchantsFromJSON)),
    };
}

export function SalesAssociatesAllOfToJSON(value?: SalesAssociatesAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'FirstName': value.firstName,
        'LastName': value.lastName,
        'Merchants': value.merchants === undefined ? undefined : ((value.merchants as Array<any>).map(MerchantsToJSON)),
    };
}


