/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    InstallmentPlan,
    InstallmentPlanFromJSON,
    InstallmentPlanFromJSONTyped,
    InstallmentPlanToJSON,
    InstallmentPlanResponse,
    InstallmentPlanResponseFromJSON,
    InstallmentPlanResponseFromJSONTyped,
    InstallmentPlanResponseToJSON,
    Money,
    MoneyFromJSON,
    MoneyFromJSONTyped,
    MoneyToJSON,
    RefundInstallmentPlanResponseAllOf,
    RefundInstallmentPlanResponseAllOfFromJSON,
    RefundInstallmentPlanResponseAllOfFromJSONTyped,
    RefundInstallmentPlanResponseAllOfToJSON,
    ResponseHeader,
    ResponseHeaderFromJSON,
    ResponseHeaderFromJSONTyped,
    ResponseHeaderToJSON,
} from './';

/**
 * 
 * @export
 * @interface RefundInstallmentPlanResponse
 */
export interface RefundInstallmentPlanResponse {
    /**
     * 
     * @type {ResponseHeader}
     * @memberof RefundInstallmentPlanResponse
     */
    responseHeader?: ResponseHeader;
    /**
     * 
     * @type {InstallmentPlan}
     * @memberof RefundInstallmentPlanResponse
     */
    installmentPlan?: InstallmentPlan;
    /**
     * 
     * @type {Money}
     * @memberof RefundInstallmentPlanResponse
     */
    currentRefundAmount?: Money;
}

export function RefundInstallmentPlanResponseFromJSON(json: any): RefundInstallmentPlanResponse {
    return RefundInstallmentPlanResponseFromJSONTyped(json, false);
}

export function RefundInstallmentPlanResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RefundInstallmentPlanResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'responseHeader': !exists(json, 'ResponseHeader') ? undefined : ResponseHeaderFromJSON(json['ResponseHeader']),
        'installmentPlan': !exists(json, 'InstallmentPlan') ? undefined : InstallmentPlanFromJSON(json['InstallmentPlan']),
        'currentRefundAmount': !exists(json, 'CurrentRefundAmount') ? undefined : MoneyFromJSON(json['CurrentRefundAmount']),
    };
}

export function RefundInstallmentPlanResponseToJSON(value?: RefundInstallmentPlanResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ResponseHeader': ResponseHeaderToJSON(value.responseHeader),
        'InstallmentPlan': InstallmentPlanToJSON(value.installmentPlan),
        'CurrentRefundAmount': MoneyToJSON(value.currentRefundAmount),
    };
}


