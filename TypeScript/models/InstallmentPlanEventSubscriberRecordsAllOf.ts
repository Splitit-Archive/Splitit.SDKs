/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    InstallmentPlanEventSubscriberRecordSendLogs,
    InstallmentPlanEventSubscriberRecordSendLogsFromJSON,
    InstallmentPlanEventSubscriberRecordSendLogsFromJSONTyped,
    InstallmentPlanEventSubscriberRecordSendLogsToJSON,
    InstallmentPlanEvents,
    InstallmentPlanEventsFromJSON,
    InstallmentPlanEventsFromJSONTyped,
    InstallmentPlanEventsToJSON,
} from './';

/**
 * 
 * @export
 * @interface InstallmentPlanEventSubscriberRecordsAllOf
 */
export interface InstallmentPlanEventSubscriberRecordsAllOf {
    /**
     * 
     * @type {number}
     * @memberof InstallmentPlanEventSubscriberRecordsAllOf
     */
    installmentPlanEventId: number;
    /**
     * 
     * @type {string}
     * @memberof InstallmentPlanEventSubscriberRecordsAllOf
     */
    serializedInstallmentPlanEventMessage?: string;
    /**
     * 
     * @type {boolean}
     * @memberof InstallmentPlanEventSubscriberRecordsAllOf
     */
    isAcknowledged: boolean;
    /**
     * 
     * @type {string}
     * @memberof InstallmentPlanEventSubscriberRecordsAllOf
     */
    subscriberType?: string;
    /**
     * 
     * @type {InstallmentPlanEvents}
     * @memberof InstallmentPlanEventSubscriberRecordsAllOf
     */
    installmentPlanEvent?: InstallmentPlanEvents;
    /**
     * 
     * @type {Array<InstallmentPlanEventSubscriberRecordSendLogs>}
     * @memberof InstallmentPlanEventSubscriberRecordsAllOf
     */
    installmentPlanEventSubscriberRecordSendLogs?: Array<InstallmentPlanEventSubscriberRecordSendLogs>;
}

export function InstallmentPlanEventSubscriberRecordsAllOfFromJSON(json: any): InstallmentPlanEventSubscriberRecordsAllOf {
    return InstallmentPlanEventSubscriberRecordsAllOfFromJSONTyped(json, false);
}

export function InstallmentPlanEventSubscriberRecordsAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): InstallmentPlanEventSubscriberRecordsAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'installmentPlanEventId': json['InstallmentPlanEventId'],
        'serializedInstallmentPlanEventMessage': !exists(json, 'SerializedInstallmentPlanEventMessage') ? undefined : json['SerializedInstallmentPlanEventMessage'],
        'isAcknowledged': json['IsAcknowledged'],
        'subscriberType': !exists(json, 'SubscriberType') ? undefined : json['SubscriberType'],
        'installmentPlanEvent': !exists(json, 'InstallmentPlanEvent') ? undefined : InstallmentPlanEventsFromJSON(json['InstallmentPlanEvent']),
        'installmentPlanEventSubscriberRecordSendLogs': !exists(json, 'InstallmentPlanEventSubscriberRecordSendLogs') ? undefined : ((json['InstallmentPlanEventSubscriberRecordSendLogs'] as Array<any>).map(InstallmentPlanEventSubscriberRecordSendLogsFromJSON)),
    };
}

export function InstallmentPlanEventSubscriberRecordsAllOfToJSON(value?: InstallmentPlanEventSubscriberRecordsAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'InstallmentPlanEventId': value.installmentPlanEventId,
        'SerializedInstallmentPlanEventMessage': value.serializedInstallmentPlanEventMessage,
        'IsAcknowledged': value.isAcknowledged,
        'SubscriberType': value.subscriberType,
        'InstallmentPlanEvent': InstallmentPlanEventsToJSON(value.installmentPlanEvent),
        'InstallmentPlanEventSubscriberRecordSendLogs': value.installmentPlanEventSubscriberRecordSendLogs === undefined ? undefined : ((value.installmentPlanEventSubscriberRecordSendLogs as Array<any>).map(InstallmentPlanEventSubscriberRecordSendLogsToJSON)),
    };
}


