/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * 
 * @export
 * @enum {string}
 */
export enum BusinessActivity {
    InstallmentPlanCreate = 'InstallmentPlanCreate',
    InstallmentPlanUpdate = 'InstallmentPlanUpdate',
    InstallmentPlanApprove = 'InstallmentPlanApprove',
    InstallmentPlanDelete = 'InstallmentPlanDelete',
    InstallmentPlanStartInstallments = 'InstallmentPlanStartInstallments',
    InstallmentPlanUpdatePaymentData = 'InstallmentPlanUpdatePaymentData',
    InstallmentPlanCancel = 'InstallmentPlanCancel',
    InstallmentPlanAuthorize = 'InstallmentPlanAuthorize',
    InstallmentPlanCharge = 'InstallmentPlanCharge',
    InstallmentPlanGet = 'InstallmentPlanGet',
    InstallmentPlanStop = 'InstallmentPlanStop',
    InstallmentPlanRetry = 'InstallmentPlanRetry',
    InstallmentPlanFullCapture = 'InstallmentPlanFullCapture',
    ConsumersGet = 'ConsumersGet',
    ReceiptGet = 'ReceiptGet',
    ExposeFullCcNumber = 'ExposeFullCcNumber',
    RequestApprove = 'RequestApprove',
    UserUpdate = 'UserUpdate',
    InstallmentsUpdate = 'InstallmentsUpdate',
    Refund = 'Refund',
    ChangePassword = 'ChangePassword',
    ResetPassword = 'ResetPassword',
    GetUserProfile = 'GetUserProfile',
    GetResources = 'GetResources',
    GetSupportedCultures = 'GetSupportedCultures',
    MerchantSave = 'MerchantSave',
    MerchantGet = 'MerchantGet',
    InstallmentPlanSendEvent = 'InstallmentPlanSendEvent',
    BulkCardsUpdate = 'BulkCardsUpdate',
    CardsRetrieval = 'CardsRetrieval',
    SimulateInstallmentPlanCreate = 'SimulateInstallmentPlanCreate',
    InstallmentPlanHoldCharges = 'InstallmentPlanHoldCharges',
    InstallmentPlanReleaseHoldCharges = 'InstallmentPlanReleaseHoldCharges',
    TerminalGet = 'TerminalGet',
    InstallmentPlanAutoRetry = 'InstallmentPlanAutoRetry',
    InstallmentPlanInitiate = 'InstallmentPlanInitiate',
    GetValidNumberOfInstallments = 'GetValidNumberOfInstallments',
    GetInitiatedInstallmentPlan = 'GetInitiatedInstallmentPlan',
    GetTerminalPairToken = 'GetTerminalPairToken',
    SaveRole = 'SaveRole',
    SetRoleBusinessActivities = 'SetRoleBusinessActivities',
    GatewayTransactionUpdate = 'GatewayTransactionUpdate',
    GatewayTransactionsGet = 'GatewayTransactionsGet',
    TransformPlanToFunded = 'TransformPlanToFunded',
    TransformPlanToNonFunded = 'TransformPlanToNonFunded',
    TermsAndConditionsGet = 'TermsAndConditionsGet',
    ReCalculateFees = 'ReCalculateFees',
    GatewayTransactionsTest = 'GatewayTransactionsTest',
    BinSave = 'BinSave',
    MarkPlanFundingTranferDone = 'MarkPlanFundingTranferDone',
    InstallmentPlanMarkAsTest = 'InstallmentPlanMarkAsTest',
    UserUnlock = 'UserUnlock',
    GetUsers = 'GetUsers',
    GetSystemEmails = 'GetSystemEmails',
    InstallmentPlanChangeStrategy = 'InstallmentPlanChangeStrategy',
    InstallmentPlanSplitPay = 'InstallmentPlanSplitPay',
    Get3DSecureParameters = 'Get3DSecureParameters',
    Finalize3DSecure = 'Finalize3DSecure',
    ExecStoredProcedure = 'ExecStoredProcedure',
    GetJobs = 'GetJobs',
    AddJobDefinition = 'AddJobDefinition',
    RunJob = 'RunJob',
    ScheduleJob = 'ScheduleJob',
    CreateUser = 'CreateUser',
    DeleteUser = 'DeleteUser',
    MarkPlanReserveReturnDone = 'MarkPlanReserveReturnDone',
    InstallmentPlanSetDelayResolution = 'InstallmentPlanSetDelayResolution',
    InstallmentPlanApproveBankTransfer = 'InstallmentPlanApproveBankTransfer',
    GetAuditLog = 'GetAuditLog',
    LoadTranslation = 'LoadTranslation',
    SetDataPrivacyRestriction = 'SetDataPrivacyRestriction',
    VerifyPayment = 'VerifyPayment',
    InstallmentPlanVerifyPaid = 'InstallmentPlanVerifyPaid',
    SetEmailRules = 'SetEmailRules',
    SetMerchantEventSubscription = 'SetMerchantEventSubscription',
    GetMerchantEventSubscriptions = 'GetMerchantEventSubscriptions',
    GetReconciliationReport = 'GetReconciliationReport',
    GetOutstandingAmountsReport = 'GetOutstandingAmountsReport',
    GetNewPlansReport = 'GetNewPlansReport',
    UpdateTerminal = 'UpdateTerminal',
    FinanceFunding = 'FinanceFunding',
    GetLenders = 'GetLenders',
    InstallmentPlanChangeLender = 'InstallmentPlanChangeLender',
    GetMerchantFundingRules = 'GetMerchantFundingRules',
    FeeRuleDataGet = 'FeeRuleDataGet',
    SaveFeeRuleData = 'SaveFeeRuleData',
    GetMerchantStatements = 'GetMerchantStatements',
    ConfirmMerchantStatements = 'ConfirmMerchantStatements',
    SaveMerchantFundingRules = 'SaveMerchantFundingRules',
    GetMerchantSettings = 'GetMerchantSettings',
    SaveMerchantSettings = 'SaveMerchantSettings',
    InstallmentPlanCapture = 'InstallmentPlanCapture',
    DeleteAgents = 'DeleteAgents',
    GetAgents = 'GetAgents',
    DeleteApiCredentials = 'DeleteApiCredentials',
    GetApiCredentials = 'GetApiCredentials',
    UnlockApiCredentials = 'UnlockApiCredentials',
    SaveApiCredentials = 'SaveApiCredentials',
    InstallmentPlanVoid = 'InstallmentPlanVoid',
    CreateBusinessUnit = 'CreateBusinessUnit',
    InstallmentPlanRequestPayment = 'InstallmentPlanRequestPayment',
    Chargeback = 'Chargeback',
    VoidAuth = 'VoidAuth',
    UpdateTerminalParameters = 'UpdateTerminalParameters',
    GetTouchpoint = 'GetTouchpoint',
    OnBoardingRegistration = 'OnBoardingRegistration',
    InstallmentPlanInitiateByRefPlan = 'InstallmentPlanInitiateByRefPlan',
    CreatePublicToken = 'CreatePublicToken',
    LearnMoreDetails = 'LearnMoreDetails',
    CreatePayfacBankAccount = 'CreatePayfacBankAccount',
    GetInstallmentSchedules = 'GetInstallmentSchedules',
    SaveMerchantLenderAgreement = 'SaveMerchantLenderAgreement',
    GetFraudStatusDisplay = 'GetFraudStatusDisplay',
    SaveLender = 'SaveLender',
    RefreshFutureJobs = 'RefreshFutureJobs',
    TestCard = 'TestCard',
    RequestUpdateCard = 'RequestUpdateCard',
    ForceAuthorizeOutstandingAmount = 'ForceAuthorizeOutstandingAmount',
    Save3DSResources = 'Save3DSResources',
    PreChallenge3DS2 = 'PreChallenge3DS2',
    GetProcessors = 'GetProcessors',
    UpdateProcessors = 'UpdateProcessors',
    CreateProcessors = 'CreateProcessors',
    DeleteProcessors = 'DeleteProcessors',
    RefundReceived = 'RefundReceived',
    RefundUpdated = 'RefundUpdated',
    SalesForce = 'SalesForce'
}

export function BusinessActivityFromJSON(json: any): BusinessActivity {
    return BusinessActivityFromJSONTyped(json, false);
}

export function BusinessActivityFromJSONTyped(json: any, ignoreDiscriminator: boolean): BusinessActivity {
    return json as BusinessActivity;
}

export function BusinessActivityToJSON(value?: BusinessActivity | null): any {
    return value as any;
}

