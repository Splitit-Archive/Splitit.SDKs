/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ParameterGroups,
    ParameterGroupsFromJSON,
    ParameterGroupsFromJSONTyped,
    ParameterGroupsToJSON,
    UserJobSubscriptions,
    UserJobSubscriptionsFromJSON,
    UserJobSubscriptionsFromJSONTyped,
    UserJobSubscriptionsToJSON,
} from './';

/**
 * 
 * @export
 * @interface SplititJobDefinitionsAllOf
 */
export interface SplititJobDefinitionsAllOf {
    /**
     * 
     * @type {string}
     * @memberof SplititJobDefinitionsAllOf
     */
    code?: string;
    /**
     * 
     * @type {string}
     * @memberof SplititJobDefinitionsAllOf
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof SplititJobDefinitionsAllOf
     */
    scopeCode?: string;
    /**
     * 
     * @type {string}
     * @memberof SplititJobDefinitionsAllOf
     */
    cronExpression?: string;
    /**
     * 
     * @type {number}
     * @memberof SplititJobDefinitionsAllOf
     */
    parameterGroupId?: number;
    /**
     * 
     * @type {ParameterGroups}
     * @memberof SplititJobDefinitionsAllOf
     */
    parameterGroup?: ParameterGroups;
    /**
     * 
     * @type {Array<UserJobSubscriptions>}
     * @memberof SplititJobDefinitionsAllOf
     */
    userJobSubscriptions?: Array<UserJobSubscriptions>;
}

export function SplititJobDefinitionsAllOfFromJSON(json: any): SplititJobDefinitionsAllOf {
    return SplititJobDefinitionsAllOfFromJSONTyped(json, false);
}

export function SplititJobDefinitionsAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): SplititJobDefinitionsAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': !exists(json, 'Code') ? undefined : json['Code'],
        'name': !exists(json, 'Name') ? undefined : json['Name'],
        'scopeCode': !exists(json, 'ScopeCode') ? undefined : json['ScopeCode'],
        'cronExpression': !exists(json, 'CronExpression') ? undefined : json['CronExpression'],
        'parameterGroupId': !exists(json, 'ParameterGroupId') ? undefined : json['ParameterGroupId'],
        'parameterGroup': !exists(json, 'ParameterGroup') ? undefined : ParameterGroupsFromJSON(json['ParameterGroup']),
        'userJobSubscriptions': !exists(json, 'UserJobSubscriptions') ? undefined : ((json['UserJobSubscriptions'] as Array<any>).map(UserJobSubscriptionsFromJSON)),
    };
}

export function SplititJobDefinitionsAllOfToJSON(value?: SplititJobDefinitionsAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Code': value.code,
        'Name': value.name,
        'ScopeCode': value.scopeCode,
        'CronExpression': value.cronExpression,
        'ParameterGroupId': value.parameterGroupId,
        'ParameterGroup': ParameterGroupsToJSON(value.parameterGroup),
        'UserJobSubscriptions': value.userJobSubscriptions === undefined ? undefined : ((value.userJobSubscriptions as Array<any>).map(UserJobSubscriptionsToJSON)),
    };
}


