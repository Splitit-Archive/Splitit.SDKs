/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntityBase,
    EntityBaseFromJSON,
    EntityBaseFromJSONTyped,
    EntityBaseToJSON,
    PaymentFormTPABTestingDefinitionAllOf,
    PaymentFormTPABTestingDefinitionAllOfFromJSON,
    PaymentFormTPABTestingDefinitionAllOfFromJSONTyped,
    PaymentFormTPABTestingDefinitionAllOfToJSON,
    VersionedTouchPoints,
    VersionedTouchPointsFromJSON,
    VersionedTouchPointsFromJSONTyped,
    VersionedTouchPointsToJSON,
} from './';

/**
 * 
 * @export
 * @interface PaymentFormTPABTestingDefinition
 */
export interface PaymentFormTPABTestingDefinition {
    /**
     * 
     * @type {number}
     * @memberof PaymentFormTPABTestingDefinition
     */
    id: number;
    /**
     * 
     * @type {boolean}
     * @memberof PaymentFormTPABTestingDefinition
     */
    isActive: boolean;
    /**
     * 
     * @type {string}
     * @memberof PaymentFormTPABTestingDefinition
     */
    abTestName?: string;
    /**
     * 
     * @type {number}
     * @memberof PaymentFormTPABTestingDefinition
     */
    pFVersionAId?: number;
    /**
     * 
     * @type {number}
     * @memberof PaymentFormTPABTestingDefinition
     */
    pFVersionBId?: number;
    /**
     * 
     * @type {string}
     * @memberof PaymentFormTPABTestingDefinition
     */
    abTestDescription?: string;
    /**
     * 
     * @type {number}
     * @memberof PaymentFormTPABTestingDefinition
     */
    pFVersionAPercentage: number;
    /**
     * 
     * @type {number}
     * @memberof PaymentFormTPABTestingDefinition
     */
    pFVersionBPercentage: number;
    /**
     * 
     * @type {VersionedTouchPoints}
     * @memberof PaymentFormTPABTestingDefinition
     */
    pFVersionA?: VersionedTouchPoints;
    /**
     * 
     * @type {VersionedTouchPoints}
     * @memberof PaymentFormTPABTestingDefinition
     */
    pFVersionB?: VersionedTouchPoints;
}

export function PaymentFormTPABTestingDefinitionFromJSON(json: any): PaymentFormTPABTestingDefinition {
    return PaymentFormTPABTestingDefinitionFromJSONTyped(json, false);
}

export function PaymentFormTPABTestingDefinitionFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaymentFormTPABTestingDefinition {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['Id'],
        'isActive': json['IsActive'],
        'abTestName': !exists(json, 'AbTestName') ? undefined : json['AbTestName'],
        'pFVersionAId': !exists(json, 'PFVersionAId') ? undefined : json['PFVersionAId'],
        'pFVersionBId': !exists(json, 'PFVersionBId') ? undefined : json['PFVersionBId'],
        'abTestDescription': !exists(json, 'AbTestDescription') ? undefined : json['AbTestDescription'],
        'pFVersionAPercentage': json['PFVersionAPercentage'],
        'pFVersionBPercentage': json['PFVersionBPercentage'],
        'pFVersionA': !exists(json, 'PFVersionA') ? undefined : VersionedTouchPointsFromJSON(json['PFVersionA']),
        'pFVersionB': !exists(json, 'PFVersionB') ? undefined : VersionedTouchPointsFromJSON(json['PFVersionB']),
    };
}

export function PaymentFormTPABTestingDefinitionToJSON(value?: PaymentFormTPABTestingDefinition | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Id': value.id,
        'IsActive': value.isActive,
        'AbTestName': value.abTestName,
        'PFVersionAId': value.pFVersionAId,
        'PFVersionBId': value.pFVersionBId,
        'AbTestDescription': value.abTestDescription,
        'PFVersionAPercentage': value.pFVersionAPercentage,
        'PFVersionBPercentage': value.pFVersionBPercentage,
        'PFVersionA': VersionedTouchPointsToJSON(value.pFVersionA),
        'PFVersionB': VersionedTouchPointsToJSON(value.pFVersionB),
    };
}


