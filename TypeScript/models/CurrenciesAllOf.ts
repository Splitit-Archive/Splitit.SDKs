/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CurrenciesAllOf
 */
export interface CurrenciesAllOf {
    /**
     * 
     * @type {string}
     * @memberof CurrenciesAllOf
     */
    currencyCode: string;
    /**
     * 
     * @type {string}
     * @memberof CurrenciesAllOf
     */
    currencyName: string;
    /**
     * 
     * @type {string}
     * @memberof CurrenciesAllOf
     */
    currencySymbol: string;
    /**
     * 
     * @type {string}
     * @memberof CurrenciesAllOf
     */
    currencyIsoNumber: string;
    /**
     * 
     * @type {number}
     * @memberof CurrenciesAllOf
     */
    decimalPlaces: number;
}

export function CurrenciesAllOfFromJSON(json: any): CurrenciesAllOf {
    return CurrenciesAllOfFromJSONTyped(json, false);
}

export function CurrenciesAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): CurrenciesAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'currencyCode': json['CurrencyCode'],
        'currencyName': json['CurrencyName'],
        'currencySymbol': json['CurrencySymbol'],
        'currencyIsoNumber': json['CurrencyIsoNumber'],
        'decimalPlaces': json['DecimalPlaces'],
    };
}

export function CurrenciesAllOfToJSON(value?: CurrenciesAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'CurrencyCode': value.currencyCode,
        'CurrencyName': value.currencyName,
        'CurrencySymbol': value.currencySymbol,
        'CurrencyIsoNumber': value.currencyIsoNumber,
        'DecimalPlaces': value.decimalPlaces,
    };
}


