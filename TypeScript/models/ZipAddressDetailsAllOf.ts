/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CountrySubdivisions,
    CountrySubdivisionsFromJSON,
    CountrySubdivisionsFromJSONTyped,
    CountrySubdivisionsToJSON,
} from './';

/**
 * 
 * @export
 * @interface ZipAddressDetailsAllOf
 */
export interface ZipAddressDetailsAllOf {
    /**
     * 
     * @type {number}
     * @memberof ZipAddressDetailsAllOf
     */
    countrySubdivisionId: number;
    /**
     * 
     * @type {string}
     * @memberof ZipAddressDetailsAllOf
     */
    zip?: string;
    /**
     * 
     * @type {CountrySubdivisions}
     * @memberof ZipAddressDetailsAllOf
     */
    countrySubdivision?: CountrySubdivisions;
}

export function ZipAddressDetailsAllOfFromJSON(json: any): ZipAddressDetailsAllOf {
    return ZipAddressDetailsAllOfFromJSONTyped(json, false);
}

export function ZipAddressDetailsAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): ZipAddressDetailsAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'countrySubdivisionId': json['CountrySubdivisionId'],
        'zip': !exists(json, 'Zip') ? undefined : json['Zip'],
        'countrySubdivision': !exists(json, 'CountrySubdivision') ? undefined : CountrySubdivisionsFromJSON(json['CountrySubdivision']),
    };
}

export function ZipAddressDetailsAllOfToJSON(value?: ZipAddressDetailsAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'CountrySubdivisionId': value.countrySubdivisionId,
        'Zip': value.zip,
        'CountrySubdivision': CountrySubdivisionsToJSON(value.countrySubdivision),
    };
}


