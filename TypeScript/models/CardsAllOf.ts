/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AccountUpdaterPendingCards,
    AccountUpdaterPendingCardsFromJSON,
    AccountUpdaterPendingCardsFromJSONTyped,
    AccountUpdaterPendingCardsToJSON,
    AddressData2,
    AddressData2FromJSON,
    AddressData2FromJSONTyped,
    AddressData2ToJSON,
    BinData,
    BinDataFromJSON,
    BinDataFromJSONTyped,
    BinDataToJSON,
    CardBrand,
    CardBrandFromJSON,
    CardBrandFromJSONTyped,
    CardBrandToJSON,
    CardStateLogs,
    CardStateLogsFromJSON,
    CardStateLogsFromJSONTyped,
    CardStateLogsToJSON,
    CardType,
    CardTypeFromJSON,
    CardTypeFromJSONTyped,
    CardTypeToJSON,
    Countries,
    CountriesFromJSON,
    CountriesFromJSONTyped,
    CountriesToJSON,
    CountrySubdivisions,
    CountrySubdivisionsFromJSON,
    CountrySubdivisionsFromJSONTyped,
    CountrySubdivisionsToJSON,
    DEKData,
    DEKDataFromJSON,
    DEKDataFromJSONTyped,
    DEKDataToJSON,
    FraudDetectionLogs,
    FraudDetectionLogsFromJSON,
    FraudDetectionLogsFromJSONTyped,
    FraudDetectionLogsToJSON,
    InstallmentPlanAuditLogs,
    InstallmentPlanAuditLogsFromJSON,
    InstallmentPlanAuditLogsFromJSONTyped,
    InstallmentPlanAuditLogsToJSON,
    InstallmentPlans,
    InstallmentPlansFromJSON,
    InstallmentPlansFromJSONTyped,
    InstallmentPlansToJSON,
    Keks,
    KeksFromJSON,
    KeksFromJSONTyped,
    KeksToJSON,
    PisMembers,
    PisMembersFromJSON,
    PisMembersFromJSONTyped,
    PisMembersToJSON,
} from './';

/**
 * 
 * @export
 * @interface CardsAllOf
 */
export interface CardsAllOf {
    /**
     * 
     * @type {number}
     * @memberof CardsAllOf
     */
    kekId: number;
    /**
     * 
     * @type {string}
     * @memberof CardsAllOf
     */
    binBinNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof CardsAllOf
     */
    binIssuingCountryIsoNumber?: string;
    /**
     * 
     * @type {number}
     * @memberof CardsAllOf
     */
    binId: number;
    /**
     * 
     * @type {number}
     * @memberof CardsAllOf
     */
    expirationMonth: number;
    /**
     * 
     * @type {number}
     * @memberof CardsAllOf
     */
    expirationYear: number;
    /**
     * 
     * @type {string}
     * @memberof CardsAllOf
     */
    addressDataAddressLine?: string;
    /**
     * 
     * @type {string}
     * @memberof CardsAllOf
     */
    addressDataZip?: string;
    /**
     * 
     * @type {boolean}
     * @memberof CardsAllOf
     */
    isDeleted: boolean;
    /**
     * 
     * @type {number}
     * @memberof CardsAllOf
     */
    version: number;
    /**
     * 
     * @type {string}
     * @memberof CardsAllOf
     */
    pisMemberUniqueId?: string;
    /**
     * 
     * @type {number}
     * @memberof CardsAllOf
     */
    pisMemberId?: number;
    /**
     * 
     * @type {string}
     * @memberof CardsAllOf
     */
    addressDataAddressLine2?: string;
    /**
     * 
     * @type {string}
     * @memberof CardsAllOf
     */
    addressDataCity?: string;
    /**
     * 
     * @type {number}
     * @memberof CardsAllOf
     */
    addressDataCountryId?: number;
    /**
     * 
     * @type {number}
     * @memberof CardsAllOf
     */
    addressDataStateId?: number;
    /**
     * 
     * @type {string}
     * @memberof CardsAllOf
     */
    addressDataLegacyFullAddressLine?: string;
    /**
     * 
     * @type {boolean}
     * @memberof CardsAllOf
     */
    binIsPrepaid?: boolean;
    /**
     * 
     * @type {string}
     * @memberof CardsAllOf
     */
    token?: string;
    /**
     * 
     * @type {Keks}
     * @memberof CardsAllOf
     */
    kek?: Keks;
    /**
     * 
     * @type {string}
     * @memberof CardsAllOf
     */
    cardClass?: string;
    /**
     * 
     * @type {string}
     * @memberof CardsAllOf
     */
    productId?: string;
    /**
     * 
     * @type {string}
     * @memberof CardsAllOf
     */
    issuerBankName?: string;
    /**
     * 
     * @type {number}
     * @memberof CardsAllOf
     */
    dekDataId?: number;
    /**
     * 
     * @type {DEKData}
     * @memberof CardsAllOf
     */
    dekData?: DEKData;
    /**
     * 
     * @type {PisMembers}
     * @memberof CardsAllOf
     */
    pisMember?: PisMembers;
    /**
     * 
     * @type {Array<AccountUpdaterPendingCards>}
     * @memberof CardsAllOf
     */
    accountUpdaterPendingCards?: Array<AccountUpdaterPendingCards>;
    /**
     * 
     * @type {Array<CardStateLogs>}
     * @memberof CardsAllOf
     */
    cardStateLogs?: Array<CardStateLogs>;
    /**
     * 
     * @type {Array<FraudDetectionLogs>}
     * @memberof CardsAllOf
     */
    fraudDetectionLogs?: Array<FraudDetectionLogs>;
    /**
     * 
     * @type {Array<InstallmentPlanAuditLogs>}
     * @memberof CardsAllOf
     */
    installmentPlanAuditLogs?: Array<InstallmentPlanAuditLogs>;
    /**
     * 
     * @type {Array<InstallmentPlans>}
     * @memberof CardsAllOf
     */
    installmentPlans?: Array<InstallmentPlans>;
    /**
     * 
     * @type {AddressData2}
     * @memberof CardsAllOf
     */
    addressData?: AddressData2;
    /**
     * 
     * @type {string}
     * @memberof CardsAllOf
     */
    encryptedNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof CardsAllOf
     */
    dek?: string;
    /**
     * 
     * @type {string}
     * @memberof CardsAllOf
     */
    maskedNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof CardsAllOf
     */
    cardHolderName?: string;
    /**
     * 
     * @type {CardBrand}
     * @memberof CardsAllOf
     */
    binCardBrand: CardBrand;
    /**
     * 
     * @type {CardType}
     * @memberof CardsAllOf
     */
    binCardType: CardType;
    /**
     * 
     * @type {string}
     * @memberof CardsAllOf
     */
    cvv?: string;
    /**
     * 
     * @type {BinData}
     * @memberof CardsAllOf
     */
    bin?: BinData;
    /**
     * 
     * @type {Countries}
     * @memberof CardsAllOf
     */
    country?: Countries;
    /**
     * 
     * @type {CountrySubdivisions}
     * @memberof CardsAllOf
     */
    state?: CountrySubdivisions;
}

export function CardsAllOfFromJSON(json: any): CardsAllOf {
    return CardsAllOfFromJSONTyped(json, false);
}

export function CardsAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): CardsAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'kekId': json['KekId'],
        'binBinNumber': !exists(json, 'BinBinNumber') ? undefined : json['BinBinNumber'],
        'binIssuingCountryIsoNumber': !exists(json, 'BinIssuingCountryIsoNumber') ? undefined : json['BinIssuingCountryIsoNumber'],
        'binId': json['BinId'],
        'expirationMonth': json['ExpirationMonth'],
        'expirationYear': json['ExpirationYear'],
        'addressDataAddressLine': !exists(json, 'AddressDataAddressLine') ? undefined : json['AddressDataAddressLine'],
        'addressDataZip': !exists(json, 'AddressDataZip') ? undefined : json['AddressDataZip'],
        'isDeleted': json['IsDeleted'],
        'version': json['Version'],
        'pisMemberUniqueId': !exists(json, 'PisMemberUniqueId') ? undefined : json['PisMemberUniqueId'],
        'pisMemberId': !exists(json, 'PisMemberId') ? undefined : json['PisMemberId'],
        'addressDataAddressLine2': !exists(json, 'AddressDataAddressLine2') ? undefined : json['AddressDataAddressLine2'],
        'addressDataCity': !exists(json, 'AddressDataCity') ? undefined : json['AddressDataCity'],
        'addressDataCountryId': !exists(json, 'AddressDataCountryId') ? undefined : json['AddressDataCountryId'],
        'addressDataStateId': !exists(json, 'AddressDataStateId') ? undefined : json['AddressDataStateId'],
        'addressDataLegacyFullAddressLine': !exists(json, 'AddressDataLegacyFullAddressLine') ? undefined : json['AddressDataLegacyFullAddressLine'],
        'binIsPrepaid': !exists(json, 'BinIsPrepaid') ? undefined : json['BinIsPrepaid'],
        'token': !exists(json, 'Token') ? undefined : json['Token'],
        'kek': !exists(json, 'Kek') ? undefined : KeksFromJSON(json['Kek']),
        'cardClass': !exists(json, 'CardClass') ? undefined : json['CardClass'],
        'productId': !exists(json, 'ProductId') ? undefined : json['ProductId'],
        'issuerBankName': !exists(json, 'IssuerBankName') ? undefined : json['IssuerBankName'],
        'dekDataId': !exists(json, 'DekDataId') ? undefined : json['DekDataId'],
        'dekData': !exists(json, 'DekData') ? undefined : DEKDataFromJSON(json['DekData']),
        'pisMember': !exists(json, 'PisMember') ? undefined : PisMembersFromJSON(json['PisMember']),
        'accountUpdaterPendingCards': !exists(json, 'AccountUpdaterPendingCards') ? undefined : ((json['AccountUpdaterPendingCards'] as Array<any>).map(AccountUpdaterPendingCardsFromJSON)),
        'cardStateLogs': !exists(json, 'CardStateLogs') ? undefined : ((json['CardStateLogs'] as Array<any>).map(CardStateLogsFromJSON)),
        'fraudDetectionLogs': !exists(json, 'FraudDetectionLogs') ? undefined : ((json['FraudDetectionLogs'] as Array<any>).map(FraudDetectionLogsFromJSON)),
        'installmentPlanAuditLogs': !exists(json, 'InstallmentPlanAuditLogs') ? undefined : ((json['InstallmentPlanAuditLogs'] as Array<any>).map(InstallmentPlanAuditLogsFromJSON)),
        'installmentPlans': !exists(json, 'InstallmentPlans') ? undefined : ((json['InstallmentPlans'] as Array<any>).map(InstallmentPlansFromJSON)),
        'addressData': !exists(json, 'AddressData') ? undefined : AddressData2FromJSON(json['AddressData']),
        'encryptedNumber': !exists(json, 'EncryptedNumber') ? undefined : json['EncryptedNumber'],
        'dek': !exists(json, 'Dek') ? undefined : json['Dek'],
        'maskedNumber': !exists(json, 'MaskedNumber') ? undefined : json['MaskedNumber'],
        'cardHolderName': !exists(json, 'CardHolderName') ? undefined : json['CardHolderName'],
        'binCardBrand': CardBrandFromJSON(json['BinCardBrand']),
        'binCardType': CardTypeFromJSON(json['BinCardType']),
        'cvv': !exists(json, 'Cvv') ? undefined : json['Cvv'],
        'bin': !exists(json, 'Bin') ? undefined : BinDataFromJSON(json['Bin']),
        'country': !exists(json, 'Country') ? undefined : CountriesFromJSON(json['Country']),
        'state': !exists(json, 'State') ? undefined : CountrySubdivisionsFromJSON(json['State']),
    };
}

export function CardsAllOfToJSON(value?: CardsAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'KekId': value.kekId,
        'BinBinNumber': value.binBinNumber,
        'BinIssuingCountryIsoNumber': value.binIssuingCountryIsoNumber,
        'BinId': value.binId,
        'ExpirationMonth': value.expirationMonth,
        'ExpirationYear': value.expirationYear,
        'AddressDataAddressLine': value.addressDataAddressLine,
        'AddressDataZip': value.addressDataZip,
        'IsDeleted': value.isDeleted,
        'Version': value.version,
        'PisMemberUniqueId': value.pisMemberUniqueId,
        'PisMemberId': value.pisMemberId,
        'AddressDataAddressLine2': value.addressDataAddressLine2,
        'AddressDataCity': value.addressDataCity,
        'AddressDataCountryId': value.addressDataCountryId,
        'AddressDataStateId': value.addressDataStateId,
        'AddressDataLegacyFullAddressLine': value.addressDataLegacyFullAddressLine,
        'BinIsPrepaid': value.binIsPrepaid,
        'Token': value.token,
        'Kek': KeksToJSON(value.kek),
        'CardClass': value.cardClass,
        'ProductId': value.productId,
        'IssuerBankName': value.issuerBankName,
        'DekDataId': value.dekDataId,
        'DekData': DEKDataToJSON(value.dekData),
        'PisMember': PisMembersToJSON(value.pisMember),
        'AccountUpdaterPendingCards': value.accountUpdaterPendingCards === undefined ? undefined : ((value.accountUpdaterPendingCards as Array<any>).map(AccountUpdaterPendingCardsToJSON)),
        'CardStateLogs': value.cardStateLogs === undefined ? undefined : ((value.cardStateLogs as Array<any>).map(CardStateLogsToJSON)),
        'FraudDetectionLogs': value.fraudDetectionLogs === undefined ? undefined : ((value.fraudDetectionLogs as Array<any>).map(FraudDetectionLogsToJSON)),
        'InstallmentPlanAuditLogs': value.installmentPlanAuditLogs === undefined ? undefined : ((value.installmentPlanAuditLogs as Array<any>).map(InstallmentPlanAuditLogsToJSON)),
        'InstallmentPlans': value.installmentPlans === undefined ? undefined : ((value.installmentPlans as Array<any>).map(InstallmentPlansToJSON)),
        'AddressData': AddressData2ToJSON(value.addressData),
        'EncryptedNumber': value.encryptedNumber,
        'Dek': value.dek,
        'MaskedNumber': value.maskedNumber,
        'CardHolderName': value.cardHolderName,
        'BinCardBrand': CardBrandToJSON(value.binCardBrand),
        'BinCardType': CardTypeToJSON(value.binCardType),
        'Cvv': value.cvv,
        'Bin': BinDataToJSON(value.bin),
        'Country': CountriesToJSON(value.country),
        'State': CountrySubdivisionsToJSON(value.state),
    };
}


