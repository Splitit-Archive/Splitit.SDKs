/* tslint:disable */
/* eslint-disable */
/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Merchants,
    MerchantsFromJSON,
    MerchantsFromJSONTyped,
    MerchantsToJSON,
    PisUsers,
    PisUsersFromJSON,
    PisUsersFromJSONTyped,
    PisUsersToJSON,
    Terminals,
    TerminalsFromJSON,
    TerminalsFromJSONTyped,
    TerminalsToJSON,
} from './';

/**
 * 
 * @export
 * @interface AgentsAllOf
 */
export interface AgentsAllOf {
    /**
     * 
     * @type {string}
     * @memberof AgentsAllOf
     */
    agentNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof AgentsAllOf
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof AgentsAllOf
     */
    firstName?: string;
    /**
     * 
     * @type {string}
     * @memberof AgentsAllOf
     */
    lastName?: string;
    /**
     * 
     * @type {string}
     * @memberof AgentsAllOf
     */
    jobTitle?: string;
    /**
     * 
     * @type {string}
     * @memberof AgentsAllOf
     */
    faxNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof AgentsAllOf
     */
    mobileNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof AgentsAllOf
     */
    workPhoneNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof AgentsAllOf
     */
    notes?: string;
    /**
     * 
     * @type {string}
     * @memberof AgentsAllOf
     */
    crmId?: string;
    /**
     * 
     * @type {string}
     * @memberof AgentsAllOf
     */
    pisUserUniqueId?: string;
    /**
     * 
     * @type {number}
     * @memberof AgentsAllOf
     */
    merchantId?: number;
    /**
     * 
     * @type {number}
     * @memberof AgentsAllOf
     */
    pisUserId?: number;
    /**
     * 
     * @type {Merchants}
     * @memberof AgentsAllOf
     */
    merchant?: Merchants;
    /**
     * 
     * @type {PisUsers}
     * @memberof AgentsAllOf
     */
    pisUser?: PisUsers;
    /**
     * 
     * @type {Array<Terminals>}
     * @memberof AgentsAllOf
     */
    terminals?: Array<Terminals>;
}

export function AgentsAllOfFromJSON(json: any): AgentsAllOf {
    return AgentsAllOfFromJSONTyped(json, false);
}

export function AgentsAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): AgentsAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'agentNumber': !exists(json, 'AgentNumber') ? undefined : json['AgentNumber'],
        'email': !exists(json, 'Email') ? undefined : json['Email'],
        'firstName': !exists(json, 'FirstName') ? undefined : json['FirstName'],
        'lastName': !exists(json, 'LastName') ? undefined : json['LastName'],
        'jobTitle': !exists(json, 'JobTitle') ? undefined : json['JobTitle'],
        'faxNumber': !exists(json, 'FaxNumber') ? undefined : json['FaxNumber'],
        'mobileNumber': !exists(json, 'MobileNumber') ? undefined : json['MobileNumber'],
        'workPhoneNumber': !exists(json, 'WorkPhoneNumber') ? undefined : json['WorkPhoneNumber'],
        'notes': !exists(json, 'Notes') ? undefined : json['Notes'],
        'crmId': !exists(json, 'CrmId') ? undefined : json['CrmId'],
        'pisUserUniqueId': !exists(json, 'PisUserUniqueId') ? undefined : json['PisUserUniqueId'],
        'merchantId': !exists(json, 'MerchantId') ? undefined : json['MerchantId'],
        'pisUserId': !exists(json, 'PisUserId') ? undefined : json['PisUserId'],
        'merchant': !exists(json, 'Merchant') ? undefined : MerchantsFromJSON(json['Merchant']),
        'pisUser': !exists(json, 'PisUser') ? undefined : PisUsersFromJSON(json['PisUser']),
        'terminals': !exists(json, 'Terminals') ? undefined : ((json['Terminals'] as Array<any>).map(TerminalsFromJSON)),
    };
}

export function AgentsAllOfToJSON(value?: AgentsAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'AgentNumber': value.agentNumber,
        'Email': value.email,
        'FirstName': value.firstName,
        'LastName': value.lastName,
        'JobTitle': value.jobTitle,
        'FaxNumber': value.faxNumber,
        'MobileNumber': value.mobileNumber,
        'WorkPhoneNumber': value.workPhoneNumber,
        'Notes': value.notes,
        'CrmId': value.crmId,
        'PisUserUniqueId': value.pisUserUniqueId,
        'MerchantId': value.merchantId,
        'PisUserId': value.pisUserId,
        'Merchant': MerchantsToJSON(value.merchant),
        'PisUser': PisUsersToJSON(value.pisUser),
        'Terminals': value.terminals === undefined ? undefined : ((value.terminals as Array<any>).map(TerminalsToJSON)),
    };
}


