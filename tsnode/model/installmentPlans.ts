/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../api';
import { AmountDetails2 } from './amountDetails2';
import { Cards } from './cards';
import { CartItems } from './cartItems';
import { Currencies } from './currencies';
import { DelayResolution } from './delayResolution';
import { EmailAuditLogs } from './emailAuditLogs';
import { EntityBase } from './entityBase';
import { FeesDocuments } from './feesDocuments';
import { FraudDetectionLogs } from './fraudDetectionLogs';
import { FundingCollectDocumentDetails } from './fundingCollectDocumentDetails';
import { InstallmentPlanAuditLogs } from './installmentPlanAuditLogs';
import { InstallmentPlanEvents } from './installmentPlanEvents';
import { InstallmentPlanSetupContexts } from './installmentPlanSetupContexts';
import { InstallmentPlanStatus } from './installmentPlanStatus';
import { InstallmentPlanStatusLogEntries } from './installmentPlanStatusLogEntries';
import { InstallmentPlanTerminalDatas } from './installmentPlanTerminalDatas';
import { InstallmentPlansAllOf } from './installmentPlansAllOf';
import { Installments } from './installments';
import { MoneyFlows } from './moneyFlows';
import { PisMembers } from './pisMembers';
import { PlanStrategy } from './planStrategy';
import { PurchaseMethod } from './purchaseMethod';
import { ReAuthorizations } from './reAuthorizations';
import { RefundLogEntries } from './refundLogEntries';
import { TerminalGatewayDatas } from './terminalGatewayDatas';
import { Terminals } from './terminals';
import { TestModes } from './testModes';
import { TransferDocumentDetails } from './transferDocumentDetails';

export class InstallmentPlans {
    'id': number;
    'terminalId': number;
    'numberOfInstallments': number;
    'amount': number;
    'amountBeforeFees': number;
    'eula': boolean;
    'installmentPlanNumber'?: string;
    'isFullCaptured': boolean;
    'beginLockTime'?: Date;
    'merchantFinancedDate'?: Date;
    'merchantReserveReturnedDate'?: Date;
    'plannedFullCapture'?: Date;
    'installmentPlanTerminalDataId': number;
    'currencyId': number;
    'refOrderNumber'?: string;
    'activeCardId'?: number;
    'base64PngSignature'?: string;
    'isChargedBack': boolean;
    'areChargesHeld': boolean;
    'autoRetry': boolean;
    'pisMemberUniqueId'?: string;
    'pisMemberId'?: number;
    'subtotal': number;
    'tax': number;
    'shipping': number;
    'setupContextId': number;
    'originalAmount': number;
    'refundAmount': number;
    'reservePoolAmount': number;
    'shopperApprovalDateTime'?: Date;
    'cancellationDateTime'?: Date;
    'activatedDate'?: Date;
    'deActivatedDate'?: Date;
    'amountForFunding': number;
    'amountForFundingCurrency'?: Currencies;
    'amountForFundingExchangeRate': number;
    'amountForFundingTransactionCurrency': number;
    'activeCard'?: Cards;
    'currency'?: Currencies;
    'installmentPlanTerminalData'?: InstallmentPlanTerminalDatas;
    'pisMember'?: PisMembers;
    'setupContext'?: InstallmentPlanSetupContexts;
    'terminal'?: Terminals;
    'cartItems'?: Array<CartItems>;
    'emailAuditLogs'?: Array<EmailAuditLogs>;
    'feesDocuments'?: Array<FeesDocuments>;
    'fraudDetectionLogs'?: Array<FraudDetectionLogs>;
    'fundingCollectDocumentDetails'?: Array<FundingCollectDocumentDetails>;
    'installmentPlanAuditLogs'?: Array<InstallmentPlanAuditLogs>;
    'installmentPlanEvents'?: Array<InstallmentPlanEvents>;
    'installmentPlanStatusLogEntries'?: Array<InstallmentPlanStatusLogEntries>;
    'installments'?: Array<Installments>;
    'reAuthorizations'?: Array<ReAuthorizations>;
    'refundLogEntries'?: Array<RefundLogEntries>;
    'transferDocumentDetails'?: Array<TransferDocumentDetails>;
    'activeTerminalDataId'?: number;
    'activeTerminalData'?: TerminalGatewayDatas;
    'delayResolution'?: DelayResolution;
    'testMode': TestModes;
    'fundingTypesId': MoneyFlows;
    'strategy': PlanStrategy;
    'status': InstallmentPlanStatus;
    'purchaseMethod': PurchaseMethod;
    'extendedParamsSerializedData'?: string;
    'extendedParams'?: { [key: string]: string; };
    'autoCapture': boolean;
    'items'?: Array<CartItems>;
    'amountDetails'?: AmountDetails2;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "Id",
            "type": "number"
        },
        {
            "name": "terminalId",
            "baseName": "TerminalId",
            "type": "number"
        },
        {
            "name": "numberOfInstallments",
            "baseName": "NumberOfInstallments",
            "type": "number"
        },
        {
            "name": "amount",
            "baseName": "Amount",
            "type": "number"
        },
        {
            "name": "amountBeforeFees",
            "baseName": "AmountBeforeFees",
            "type": "number"
        },
        {
            "name": "eula",
            "baseName": "Eula",
            "type": "boolean"
        },
        {
            "name": "installmentPlanNumber",
            "baseName": "InstallmentPlanNumber",
            "type": "string"
        },
        {
            "name": "isFullCaptured",
            "baseName": "IsFullCaptured",
            "type": "boolean"
        },
        {
            "name": "beginLockTime",
            "baseName": "BeginLockTime",
            "type": "Date"
        },
        {
            "name": "merchantFinancedDate",
            "baseName": "MerchantFinancedDate",
            "type": "Date"
        },
        {
            "name": "merchantReserveReturnedDate",
            "baseName": "MerchantReserveReturnedDate",
            "type": "Date"
        },
        {
            "name": "plannedFullCapture",
            "baseName": "PlannedFullCapture",
            "type": "Date"
        },
        {
            "name": "installmentPlanTerminalDataId",
            "baseName": "InstallmentPlanTerminalDataId",
            "type": "number"
        },
        {
            "name": "currencyId",
            "baseName": "CurrencyId",
            "type": "number"
        },
        {
            "name": "refOrderNumber",
            "baseName": "RefOrderNumber",
            "type": "string"
        },
        {
            "name": "activeCardId",
            "baseName": "ActiveCardId",
            "type": "number"
        },
        {
            "name": "base64PngSignature",
            "baseName": "Base64PngSignature",
            "type": "string"
        },
        {
            "name": "isChargedBack",
            "baseName": "IsChargedBack",
            "type": "boolean"
        },
        {
            "name": "areChargesHeld",
            "baseName": "AreChargesHeld",
            "type": "boolean"
        },
        {
            "name": "autoRetry",
            "baseName": "AutoRetry",
            "type": "boolean"
        },
        {
            "name": "pisMemberUniqueId",
            "baseName": "PisMemberUniqueId",
            "type": "string"
        },
        {
            "name": "pisMemberId",
            "baseName": "PisMemberId",
            "type": "number"
        },
        {
            "name": "subtotal",
            "baseName": "Subtotal",
            "type": "number"
        },
        {
            "name": "tax",
            "baseName": "Tax",
            "type": "number"
        },
        {
            "name": "shipping",
            "baseName": "Shipping",
            "type": "number"
        },
        {
            "name": "setupContextId",
            "baseName": "SetupContextId",
            "type": "number"
        },
        {
            "name": "originalAmount",
            "baseName": "OriginalAmount",
            "type": "number"
        },
        {
            "name": "refundAmount",
            "baseName": "RefundAmount",
            "type": "number"
        },
        {
            "name": "reservePoolAmount",
            "baseName": "ReservePoolAmount",
            "type": "number"
        },
        {
            "name": "shopperApprovalDateTime",
            "baseName": "ShopperApprovalDateTime",
            "type": "Date"
        },
        {
            "name": "cancellationDateTime",
            "baseName": "CancellationDateTime",
            "type": "Date"
        },
        {
            "name": "activatedDate",
            "baseName": "ActivatedDate",
            "type": "Date"
        },
        {
            "name": "deActivatedDate",
            "baseName": "DeActivatedDate",
            "type": "Date"
        },
        {
            "name": "amountForFunding",
            "baseName": "AmountForFunding",
            "type": "number"
        },
        {
            "name": "amountForFundingCurrency",
            "baseName": "AmountForFunding_Currency",
            "type": "Currencies"
        },
        {
            "name": "amountForFundingExchangeRate",
            "baseName": "AmountForFunding_ExchangeRate",
            "type": "number"
        },
        {
            "name": "amountForFundingTransactionCurrency",
            "baseName": "AmountForFunding_TransactionCurrency",
            "type": "number"
        },
        {
            "name": "activeCard",
            "baseName": "ActiveCard",
            "type": "Cards"
        },
        {
            "name": "currency",
            "baseName": "Currency",
            "type": "Currencies"
        },
        {
            "name": "installmentPlanTerminalData",
            "baseName": "InstallmentPlanTerminalData",
            "type": "InstallmentPlanTerminalDatas"
        },
        {
            "name": "pisMember",
            "baseName": "PisMember",
            "type": "PisMembers"
        },
        {
            "name": "setupContext",
            "baseName": "SetupContext",
            "type": "InstallmentPlanSetupContexts"
        },
        {
            "name": "terminal",
            "baseName": "Terminal",
            "type": "Terminals"
        },
        {
            "name": "cartItems",
            "baseName": "CartItems",
            "type": "Array<CartItems>"
        },
        {
            "name": "emailAuditLogs",
            "baseName": "EmailAuditLogs",
            "type": "Array<EmailAuditLogs>"
        },
        {
            "name": "feesDocuments",
            "baseName": "FeesDocuments",
            "type": "Array<FeesDocuments>"
        },
        {
            "name": "fraudDetectionLogs",
            "baseName": "FraudDetectionLogs",
            "type": "Array<FraudDetectionLogs>"
        },
        {
            "name": "fundingCollectDocumentDetails",
            "baseName": "FundingCollectDocumentDetails",
            "type": "Array<FundingCollectDocumentDetails>"
        },
        {
            "name": "installmentPlanAuditLogs",
            "baseName": "InstallmentPlanAuditLogs",
            "type": "Array<InstallmentPlanAuditLogs>"
        },
        {
            "name": "installmentPlanEvents",
            "baseName": "InstallmentPlanEvents",
            "type": "Array<InstallmentPlanEvents>"
        },
        {
            "name": "installmentPlanStatusLogEntries",
            "baseName": "InstallmentPlanStatusLogEntries",
            "type": "Array<InstallmentPlanStatusLogEntries>"
        },
        {
            "name": "installments",
            "baseName": "Installments",
            "type": "Array<Installments>"
        },
        {
            "name": "reAuthorizations",
            "baseName": "ReAuthorizations",
            "type": "Array<ReAuthorizations>"
        },
        {
            "name": "refundLogEntries",
            "baseName": "RefundLogEntries",
            "type": "Array<RefundLogEntries>"
        },
        {
            "name": "transferDocumentDetails",
            "baseName": "TransferDocumentDetails",
            "type": "Array<TransferDocumentDetails>"
        },
        {
            "name": "activeTerminalDataId",
            "baseName": "ActiveTerminalDataId",
            "type": "number"
        },
        {
            "name": "activeTerminalData",
            "baseName": "ActiveTerminalData",
            "type": "TerminalGatewayDatas"
        },
        {
            "name": "delayResolution",
            "baseName": "DelayResolution",
            "type": "DelayResolution"
        },
        {
            "name": "testMode",
            "baseName": "TestMode",
            "type": "TestModes"
        },
        {
            "name": "fundingTypesId",
            "baseName": "FundingTypesId",
            "type": "MoneyFlows"
        },
        {
            "name": "strategy",
            "baseName": "Strategy",
            "type": "PlanStrategy"
        },
        {
            "name": "status",
            "baseName": "Status",
            "type": "InstallmentPlanStatus"
        },
        {
            "name": "purchaseMethod",
            "baseName": "PurchaseMethod",
            "type": "PurchaseMethod"
        },
        {
            "name": "extendedParamsSerializedData",
            "baseName": "ExtendedParamsSerializedData",
            "type": "string"
        },
        {
            "name": "extendedParams",
            "baseName": "ExtendedParams",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "autoCapture",
            "baseName": "AutoCapture",
            "type": "boolean"
        },
        {
            "name": "items",
            "baseName": "Items",
            "type": "Array<CartItems>"
        },
        {
            "name": "amountDetails",
            "baseName": "AmountDetails",
            "type": "AmountDetails2"
        }    ];

    static getAttributeTypeMap() {
        return InstallmentPlans.attributeTypeMap;
    }
}

