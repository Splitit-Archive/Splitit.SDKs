/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../api';
import { AccountUpdaterSubscribersScopes } from './accountUpdaterSubscribersScopes';
import { Agents } from './agents';
import { BusinessUnits } from './businessUnits';
import { ChbDefaultAction } from './chbDefaultAction';
import { Currencies } from './currencies';
import { EntityBase } from './entityBase';
import { FailureUnderFrozenInstallmentsPlan } from './failureUnderFrozenInstallmentsPlan';
import { InstallmentPlans } from './installmentPlans';
import { IntegrationType } from './integrationType';
import { Merchants } from './merchants';
import { ReconciliationReports } from './reconciliationReports';
import { RefundUnderCancelation } from './refundUnderCancelation';
import { StateLimitRuleDatas } from './stateLimitRuleDatas';
import { TerminalCountries } from './terminalCountries';
import { TerminalGatewayDatas } from './terminalGatewayDatas';
import { TerminalKvps } from './terminalKvps';
import { TerminalsAllOf } from './terminalsAllOf';
import { TestModes } from './testModes';

export class Terminals {
    'id': number;
    'name'?: string;
    'email'?: string;
    'apiKey'?: string;
    'wizardTimeout': number;
    'merchantId': number;
    'utcOffset': number;
    'isDisabled': boolean;
    'chargeBeforeShipping': boolean;
    'terminalId'?: string;
    'agentId': number;
    'canCancelInstallmentsPlan': boolean;
    'crmId'?: string;
    'currencyId'?: number;
    'pendingShipmentReminderDays': number;
    'businessUnitId': number;
    'keepNonApprovedPlanLive': number;
    'useTestGateway': boolean;
    'agent'?: Agents;
    'businessUnit'?: BusinessUnits;
    'currency'?: Currencies;
    'merchant'?: Merchants;
    'accountUpdaterSubscribersScopes'?: Array<AccountUpdaterSubscribersScopes>;
    'installmentPlans'?: Array<InstallmentPlans>;
    'reconciliationReports'?: Array<ReconciliationReports>;
    'stateLimitRuleDatas'?: Array<StateLimitRuleDatas>;
    'terminalCountries'?: Array<TerminalCountries>;
    'terminalGatewayDatas'?: Array<TerminalGatewayDatas>;
    'terminalKvps'?: Array<TerminalKvps>;
    'continueExistingPlanWithOriginalGateway': boolean;
    'activeTerminalData'?: TerminalGatewayDatas;
    'chbDefaultAction': ChbDefaultAction;
    'failureUnderFrozenInstallmentsPlan': FailureUnderFrozenInstallmentsPlan;
    'refundUnderCancelation': RefundUnderCancelation;
    'integrationType': IntegrationType;
    'testMode': TestModes;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "Id",
            "type": "number"
        },
        {
            "name": "name",
            "baseName": "Name",
            "type": "string"
        },
        {
            "name": "email",
            "baseName": "Email",
            "type": "string"
        },
        {
            "name": "apiKey",
            "baseName": "ApiKey",
            "type": "string"
        },
        {
            "name": "wizardTimeout",
            "baseName": "WizardTimeout",
            "type": "number"
        },
        {
            "name": "merchantId",
            "baseName": "MerchantId",
            "type": "number"
        },
        {
            "name": "utcOffset",
            "baseName": "UtcOffset",
            "type": "number"
        },
        {
            "name": "isDisabled",
            "baseName": "IsDisabled",
            "type": "boolean"
        },
        {
            "name": "chargeBeforeShipping",
            "baseName": "ChargeBeforeShipping",
            "type": "boolean"
        },
        {
            "name": "terminalId",
            "baseName": "TerminalId",
            "type": "string"
        },
        {
            "name": "agentId",
            "baseName": "AgentId",
            "type": "number"
        },
        {
            "name": "canCancelInstallmentsPlan",
            "baseName": "CanCancelInstallmentsPlan",
            "type": "boolean"
        },
        {
            "name": "crmId",
            "baseName": "CrmId",
            "type": "string"
        },
        {
            "name": "currencyId",
            "baseName": "CurrencyId",
            "type": "number"
        },
        {
            "name": "pendingShipmentReminderDays",
            "baseName": "PendingShipmentReminderDays",
            "type": "number"
        },
        {
            "name": "businessUnitId",
            "baseName": "BusinessUnitId",
            "type": "number"
        },
        {
            "name": "keepNonApprovedPlanLive",
            "baseName": "KeepNonApprovedPlanLive",
            "type": "number"
        },
        {
            "name": "useTestGateway",
            "baseName": "UseTestGateway",
            "type": "boolean"
        },
        {
            "name": "agent",
            "baseName": "Agent",
            "type": "Agents"
        },
        {
            "name": "businessUnit",
            "baseName": "BusinessUnit",
            "type": "BusinessUnits"
        },
        {
            "name": "currency",
            "baseName": "Currency",
            "type": "Currencies"
        },
        {
            "name": "merchant",
            "baseName": "Merchant",
            "type": "Merchants"
        },
        {
            "name": "accountUpdaterSubscribersScopes",
            "baseName": "AccountUpdaterSubscribersScopes",
            "type": "Array<AccountUpdaterSubscribersScopes>"
        },
        {
            "name": "installmentPlans",
            "baseName": "InstallmentPlans",
            "type": "Array<InstallmentPlans>"
        },
        {
            "name": "reconciliationReports",
            "baseName": "ReconciliationReports",
            "type": "Array<ReconciliationReports>"
        },
        {
            "name": "stateLimitRuleDatas",
            "baseName": "StateLimitRuleDatas",
            "type": "Array<StateLimitRuleDatas>"
        },
        {
            "name": "terminalCountries",
            "baseName": "TerminalCountries",
            "type": "Array<TerminalCountries>"
        },
        {
            "name": "terminalGatewayDatas",
            "baseName": "TerminalGatewayDatas",
            "type": "Array<TerminalGatewayDatas>"
        },
        {
            "name": "terminalKvps",
            "baseName": "TerminalKvps",
            "type": "Array<TerminalKvps>"
        },
        {
            "name": "continueExistingPlanWithOriginalGateway",
            "baseName": "ContinueExistingPlanWithOriginalGateway",
            "type": "boolean"
        },
        {
            "name": "activeTerminalData",
            "baseName": "ActiveTerminalData",
            "type": "TerminalGatewayDatas"
        },
        {
            "name": "chbDefaultAction",
            "baseName": "ChbDefaultAction",
            "type": "ChbDefaultAction"
        },
        {
            "name": "failureUnderFrozenInstallmentsPlan",
            "baseName": "FailureUnderFrozenInstallmentsPlan",
            "type": "FailureUnderFrozenInstallmentsPlan"
        },
        {
            "name": "refundUnderCancelation",
            "baseName": "RefundUnderCancelation",
            "type": "RefundUnderCancelation"
        },
        {
            "name": "integrationType",
            "baseName": "IntegrationType",
            "type": "IntegrationType"
        },
        {
            "name": "testMode",
            "baseName": "TestMode",
            "type": "TestModes"
        }    ];

    static getAttributeTypeMap() {
        return Terminals.attributeTypeMap;
    }
}

