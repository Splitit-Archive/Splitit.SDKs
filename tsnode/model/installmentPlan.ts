/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../api';
import { CardData } from './cardData';
import { ConsumerData } from './consumerData';
import { FraudCheck } from './fraudCheck';
import { Installment2 } from './installment2';
import { MerchantRef } from './merchantRef';
import { Money } from './money';
import { ReAuthorization } from './reAuthorization';
import { ReferenceEntityBase } from './referenceEntityBase';
import { TestModes } from './testModes';

export class InstallmentPlan {
    'installmentPlanNumber'?: string;
    'installmentPlanStatus'?: ReferenceEntityBase;
    'amount'?: Money;
    'outstandingAmount'?: Money;
    'numberOfInstallments': number;
    'numberOfProcessedInstallments': number;
    'originalAmount'?: Money;
    'refundAmount'?: Money;
    'consumer'?: ConsumerData;
    'activeCard'?: CardData;
    'fraudCheck'?: FraudCheck;
    'merchant'?: MerchantRef;
    'refOrderNumber'?: string;
    'purchaseMethod'?: ReferenceEntityBase;
    'strategy'?: ReferenceEntityBase;
    'delayResolution'?: ReferenceEntityBase;
    'extendedParams'?: { [key: string]: string; };
    'isFullCaptured': boolean;
    'isChargedBack': boolean;
    'arePaymentsOnHold': boolean;
    'scpFundingPercent': number;
    'isFunded': boolean;
    'testMode': TestModes;
    'creationDateTime': Date;
    'installments'?: Array<Installment2>;
    'secureAuthorizations'?: Array<ReAuthorization>;
    'logoUrl'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "installmentPlanNumber",
            "baseName": "InstallmentPlanNumber",
            "type": "string"
        },
        {
            "name": "installmentPlanStatus",
            "baseName": "InstallmentPlanStatus",
            "type": "ReferenceEntityBase"
        },
        {
            "name": "amount",
            "baseName": "Amount",
            "type": "Money"
        },
        {
            "name": "outstandingAmount",
            "baseName": "OutstandingAmount",
            "type": "Money"
        },
        {
            "name": "numberOfInstallments",
            "baseName": "NumberOfInstallments",
            "type": "number"
        },
        {
            "name": "numberOfProcessedInstallments",
            "baseName": "NumberOfProcessedInstallments",
            "type": "number"
        },
        {
            "name": "originalAmount",
            "baseName": "OriginalAmount",
            "type": "Money"
        },
        {
            "name": "refundAmount",
            "baseName": "RefundAmount",
            "type": "Money"
        },
        {
            "name": "consumer",
            "baseName": "Consumer",
            "type": "ConsumerData"
        },
        {
            "name": "activeCard",
            "baseName": "ActiveCard",
            "type": "CardData"
        },
        {
            "name": "fraudCheck",
            "baseName": "FraudCheck",
            "type": "FraudCheck"
        },
        {
            "name": "merchant",
            "baseName": "Merchant",
            "type": "MerchantRef"
        },
        {
            "name": "refOrderNumber",
            "baseName": "RefOrderNumber",
            "type": "string"
        },
        {
            "name": "purchaseMethod",
            "baseName": "PurchaseMethod",
            "type": "ReferenceEntityBase"
        },
        {
            "name": "strategy",
            "baseName": "Strategy",
            "type": "ReferenceEntityBase"
        },
        {
            "name": "delayResolution",
            "baseName": "DelayResolution",
            "type": "ReferenceEntityBase"
        },
        {
            "name": "extendedParams",
            "baseName": "ExtendedParams",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "isFullCaptured",
            "baseName": "IsFullCaptured",
            "type": "boolean"
        },
        {
            "name": "isChargedBack",
            "baseName": "IsChargedBack",
            "type": "boolean"
        },
        {
            "name": "arePaymentsOnHold",
            "baseName": "ArePaymentsOnHold",
            "type": "boolean"
        },
        {
            "name": "scpFundingPercent",
            "baseName": "ScpFundingPercent",
            "type": "number"
        },
        {
            "name": "isFunded",
            "baseName": "IsFunded",
            "type": "boolean"
        },
        {
            "name": "testMode",
            "baseName": "TestMode",
            "type": "TestModes"
        },
        {
            "name": "creationDateTime",
            "baseName": "CreationDateTime",
            "type": "Date"
        },
        {
            "name": "installments",
            "baseName": "Installments",
            "type": "Array<Installment2>"
        },
        {
            "name": "secureAuthorizations",
            "baseName": "SecureAuthorizations",
            "type": "Array<ReAuthorization>"
        },
        {
            "name": "logoUrl",
            "baseName": "LogoUrl",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return InstallmentPlan.attributeTypeMap;
    }
}

