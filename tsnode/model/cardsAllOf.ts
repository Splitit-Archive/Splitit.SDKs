/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../api';
import { AccountUpdaterPendingCards } from './accountUpdaterPendingCards';
import { AddressData2 } from './addressData2';
import { BinData } from './binData';
import { CardBrand } from './cardBrand';
import { CardStateLogs } from './cardStateLogs';
import { CardType } from './cardType';
import { Countries } from './countries';
import { CountrySubdivisions } from './countrySubdivisions';
import { DEKData } from './dEKData';
import { FraudDetectionLogs } from './fraudDetectionLogs';
import { InstallmentPlanAuditLogs } from './installmentPlanAuditLogs';
import { InstallmentPlans } from './installmentPlans';
import { Keks } from './keks';
import { PisMembers } from './pisMembers';

export class CardsAllOf {
    'kekId': number;
    'binBinNumber'?: string;
    'binIssuingCountryIsoNumber'?: string;
    'binId': number;
    'expirationMonth': number;
    'expirationYear': number;
    'addressDataAddressLine'?: string;
    'addressDataZip'?: string;
    'isDeleted': boolean;
    'version': number;
    'pisMemberUniqueId'?: string;
    'pisMemberId'?: number;
    'addressDataAddressLine2'?: string;
    'addressDataCity'?: string;
    'addressDataCountryId'?: number;
    'addressDataStateId'?: number;
    'addressDataLegacyFullAddressLine'?: string;
    'binIsPrepaid'?: boolean;
    'token'?: string;
    'kek'?: Keks;
    'cardClass'?: string;
    'productId'?: string;
    'issuerBankName'?: string;
    'dekDataId'?: number;
    'dekData'?: DEKData;
    'pisMember'?: PisMembers;
    'accountUpdaterPendingCards'?: Array<AccountUpdaterPendingCards>;
    'cardStateLogs'?: Array<CardStateLogs>;
    'fraudDetectionLogs'?: Array<FraudDetectionLogs>;
    'installmentPlanAuditLogs'?: Array<InstallmentPlanAuditLogs>;
    'installmentPlans'?: Array<InstallmentPlans>;
    'addressData'?: AddressData2;
    'encryptedNumber'?: string;
    'dek'?: string;
    'maskedNumber'?: string;
    'cardHolderName'?: string;
    'binCardBrand': CardBrand;
    'binCardType': CardType;
    'cvv'?: string;
    'bin'?: BinData;
    'country'?: Countries;
    'state'?: CountrySubdivisions;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "kekId",
            "baseName": "KekId",
            "type": "number"
        },
        {
            "name": "binBinNumber",
            "baseName": "BinBinNumber",
            "type": "string"
        },
        {
            "name": "binIssuingCountryIsoNumber",
            "baseName": "BinIssuingCountryIsoNumber",
            "type": "string"
        },
        {
            "name": "binId",
            "baseName": "BinId",
            "type": "number"
        },
        {
            "name": "expirationMonth",
            "baseName": "ExpirationMonth",
            "type": "number"
        },
        {
            "name": "expirationYear",
            "baseName": "ExpirationYear",
            "type": "number"
        },
        {
            "name": "addressDataAddressLine",
            "baseName": "AddressDataAddressLine",
            "type": "string"
        },
        {
            "name": "addressDataZip",
            "baseName": "AddressDataZip",
            "type": "string"
        },
        {
            "name": "isDeleted",
            "baseName": "IsDeleted",
            "type": "boolean"
        },
        {
            "name": "version",
            "baseName": "Version",
            "type": "number"
        },
        {
            "name": "pisMemberUniqueId",
            "baseName": "PisMemberUniqueId",
            "type": "string"
        },
        {
            "name": "pisMemberId",
            "baseName": "PisMemberId",
            "type": "number"
        },
        {
            "name": "addressDataAddressLine2",
            "baseName": "AddressDataAddressLine2",
            "type": "string"
        },
        {
            "name": "addressDataCity",
            "baseName": "AddressDataCity",
            "type": "string"
        },
        {
            "name": "addressDataCountryId",
            "baseName": "AddressDataCountryId",
            "type": "number"
        },
        {
            "name": "addressDataStateId",
            "baseName": "AddressDataStateId",
            "type": "number"
        },
        {
            "name": "addressDataLegacyFullAddressLine",
            "baseName": "AddressDataLegacyFullAddressLine",
            "type": "string"
        },
        {
            "name": "binIsPrepaid",
            "baseName": "BinIsPrepaid",
            "type": "boolean"
        },
        {
            "name": "token",
            "baseName": "Token",
            "type": "string"
        },
        {
            "name": "kek",
            "baseName": "Kek",
            "type": "Keks"
        },
        {
            "name": "cardClass",
            "baseName": "CardClass",
            "type": "string"
        },
        {
            "name": "productId",
            "baseName": "ProductId",
            "type": "string"
        },
        {
            "name": "issuerBankName",
            "baseName": "IssuerBankName",
            "type": "string"
        },
        {
            "name": "dekDataId",
            "baseName": "DekDataId",
            "type": "number"
        },
        {
            "name": "dekData",
            "baseName": "DekData",
            "type": "DEKData"
        },
        {
            "name": "pisMember",
            "baseName": "PisMember",
            "type": "PisMembers"
        },
        {
            "name": "accountUpdaterPendingCards",
            "baseName": "AccountUpdaterPendingCards",
            "type": "Array<AccountUpdaterPendingCards>"
        },
        {
            "name": "cardStateLogs",
            "baseName": "CardStateLogs",
            "type": "Array<CardStateLogs>"
        },
        {
            "name": "fraudDetectionLogs",
            "baseName": "FraudDetectionLogs",
            "type": "Array<FraudDetectionLogs>"
        },
        {
            "name": "installmentPlanAuditLogs",
            "baseName": "InstallmentPlanAuditLogs",
            "type": "Array<InstallmentPlanAuditLogs>"
        },
        {
            "name": "installmentPlans",
            "baseName": "InstallmentPlans",
            "type": "Array<InstallmentPlans>"
        },
        {
            "name": "addressData",
            "baseName": "AddressData",
            "type": "AddressData2"
        },
        {
            "name": "encryptedNumber",
            "baseName": "EncryptedNumber",
            "type": "string"
        },
        {
            "name": "dek",
            "baseName": "Dek",
            "type": "string"
        },
        {
            "name": "maskedNumber",
            "baseName": "MaskedNumber",
            "type": "string"
        },
        {
            "name": "cardHolderName",
            "baseName": "CardHolderName",
            "type": "string"
        },
        {
            "name": "binCardBrand",
            "baseName": "BinCardBrand",
            "type": "CardBrand"
        },
        {
            "name": "binCardType",
            "baseName": "BinCardType",
            "type": "CardType"
        },
        {
            "name": "cvv",
            "baseName": "Cvv",
            "type": "string"
        },
        {
            "name": "bin",
            "baseName": "Bin",
            "type": "BinData"
        },
        {
            "name": "country",
            "baseName": "Country",
            "type": "Countries"
        },
        {
            "name": "state",
            "baseName": "State",
            "type": "CountrySubdivisions"
        }    ];

    static getAttributeTypeMap() {
        return CardsAllOf.attributeTypeMap;
    }
}

