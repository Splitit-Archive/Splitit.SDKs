/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../api';
import { AddressData } from './addressData';
import { Agent } from './agent';
import { BankDetails } from './bankDetails';
import { ContactPerson } from './contactPerson';
import { Currency } from './currency';
import { MerchantVertical } from './merchantVertical';
import { SalesAssociate } from './salesAssociate';
import { SplititEntity } from './splititEntity';

export class Merchant {
    'id': number;
    'name'?: string;
    'address'?: string;
    'splititMerchantId'?: string;
    'crmId'?: string;
    'businessLegalName'?: string;
    'businessDBAName'?: string;
    'businessUnitId': number;
    'onBoardingStatus': number;
    'declaredAnnualVolumeUSD': number;
    'declaredAOVUSD': number;
    'vertical': MerchantVertical;
    'email'?: string;
    'websiteUrl'?: string;
    'logoImageFileContent'?: string;
    'logoImageFileExt'?: string;
    'logoImageUrl'?: string;
    'createdDateTime': Date;
    'transactionCurrencies'?: Array<Currency>;
    'accountCurrencies'?: Array<Currency>;
    'accountCurrencyIsTransactionCurrencies': boolean;
    'billingAddress'?: AddressData;
    'vatTaxId'?: string;
    'registeredCountryOfBusinessId'?: string;
    'registeredCountryOfBusinessCode'?: string;
    'registeredStateOfBusinessId'?: string;
    'registeredStateOfBusinessCode'?: string;
    'merchantCountryId'?: string;
    'merchantCountryCode'?: string;
    'merchantStateId'?: string;
    'merchantStateCode'?: string;
    'bankDetails'?: BankDetails;
    'salesAssociate'?: SalesAssociate;
    'partner'?: Agent;
    'splititCurrentEntity': SplititEntity;
    'splititSigningEntity': SplititEntity;
    'businessContact'?: ContactPerson;
    'technicalContact'?: ContactPerson;
    'financialContact'?: ContactPerson;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "Id",
            "type": "number"
        },
        {
            "name": "name",
            "baseName": "Name",
            "type": "string"
        },
        {
            "name": "address",
            "baseName": "Address",
            "type": "string"
        },
        {
            "name": "splititMerchantId",
            "baseName": "SplititMerchantId",
            "type": "string"
        },
        {
            "name": "crmId",
            "baseName": "CrmId",
            "type": "string"
        },
        {
            "name": "businessLegalName",
            "baseName": "BusinessLegalName",
            "type": "string"
        },
        {
            "name": "businessDBAName",
            "baseName": "BusinessDBAName",
            "type": "string"
        },
        {
            "name": "businessUnitId",
            "baseName": "BusinessUnitId",
            "type": "number"
        },
        {
            "name": "onBoardingStatus",
            "baseName": "OnBoardingStatus",
            "type": "number"
        },
        {
            "name": "declaredAnnualVolumeUSD",
            "baseName": "DeclaredAnnualVolumeUSD",
            "type": "number"
        },
        {
            "name": "declaredAOVUSD",
            "baseName": "DeclaredAOVUSD",
            "type": "number"
        },
        {
            "name": "vertical",
            "baseName": "Vertical",
            "type": "MerchantVertical"
        },
        {
            "name": "email",
            "baseName": "Email",
            "type": "string"
        },
        {
            "name": "websiteUrl",
            "baseName": "WebsiteUrl",
            "type": "string"
        },
        {
            "name": "logoImageFileContent",
            "baseName": "LogoImageFileContent",
            "type": "string"
        },
        {
            "name": "logoImageFileExt",
            "baseName": "LogoImageFileExt",
            "type": "string"
        },
        {
            "name": "logoImageUrl",
            "baseName": "LogoImageUrl",
            "type": "string"
        },
        {
            "name": "createdDateTime",
            "baseName": "CreatedDateTime",
            "type": "Date"
        },
        {
            "name": "transactionCurrencies",
            "baseName": "TransactionCurrencies",
            "type": "Array<Currency>"
        },
        {
            "name": "accountCurrencies",
            "baseName": "AccountCurrencies",
            "type": "Array<Currency>"
        },
        {
            "name": "accountCurrencyIsTransactionCurrencies",
            "baseName": "AccountCurrencyIsTransactionCurrencies",
            "type": "boolean"
        },
        {
            "name": "billingAddress",
            "baseName": "BillingAddress",
            "type": "AddressData"
        },
        {
            "name": "vatTaxId",
            "baseName": "VatTaxId",
            "type": "string"
        },
        {
            "name": "registeredCountryOfBusinessId",
            "baseName": "RegisteredCountryOfBusinessId",
            "type": "string"
        },
        {
            "name": "registeredCountryOfBusinessCode",
            "baseName": "RegisteredCountryOfBusinessCode",
            "type": "string"
        },
        {
            "name": "registeredStateOfBusinessId",
            "baseName": "RegisteredStateOfBusinessId",
            "type": "string"
        },
        {
            "name": "registeredStateOfBusinessCode",
            "baseName": "RegisteredStateOfBusinessCode",
            "type": "string"
        },
        {
            "name": "merchantCountryId",
            "baseName": "MerchantCountryId",
            "type": "string"
        },
        {
            "name": "merchantCountryCode",
            "baseName": "MerchantCountryCode",
            "type": "string"
        },
        {
            "name": "merchantStateId",
            "baseName": "MerchantStateId",
            "type": "string"
        },
        {
            "name": "merchantStateCode",
            "baseName": "MerchantStateCode",
            "type": "string"
        },
        {
            "name": "bankDetails",
            "baseName": "BankDetails",
            "type": "BankDetails"
        },
        {
            "name": "salesAssociate",
            "baseName": "SalesAssociate",
            "type": "SalesAssociate"
        },
        {
            "name": "partner",
            "baseName": "Partner",
            "type": "Agent"
        },
        {
            "name": "splititCurrentEntity",
            "baseName": "SplititCurrentEntity",
            "type": "SplititEntity"
        },
        {
            "name": "splititSigningEntity",
            "baseName": "SplititSigningEntity",
            "type": "SplititEntity"
        },
        {
            "name": "businessContact",
            "baseName": "BusinessContact",
            "type": "ContactPerson"
        },
        {
            "name": "technicalContact",
            "baseName": "TechnicalContact",
            "type": "ContactPerson"
        },
        {
            "name": "financialContact",
            "baseName": "FinancialContact",
            "type": "ContactPerson"
        }    ];

    static getAttributeTypeMap() {
        return Merchant.attributeTypeMap;
    }
}

