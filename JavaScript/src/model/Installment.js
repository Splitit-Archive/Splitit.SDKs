/**
 * splitit-web-api-public-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CardData from './CardData';
import Money from './Money';
import ReferenceEntityBase from './ReferenceEntityBase';
import TransactionResult from './TransactionResult';

/**
 * The Installment model module.
 * @module model/Installment
 * @version 1.3.10
 */
class Installment {
    /**
     * Constructs a new <code>Installment</code>.
     * @alias module:model/Installment
     * @param installmentNumber {Number} 
     * @param isRefund {Boolean} 
     * @param createdDateTime {Date} 
     */
    constructor(installmentNumber, isRefund, createdDateTime) { 
        
        Installment.initialize(this, installmentNumber, isRefund, createdDateTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, installmentNumber, isRefund, createdDateTime) { 
        obj['InstallmentNumber'] = installmentNumber;
        obj['IsRefund'] = isRefund;
        obj['CreatedDateTime'] = createdDateTime;
    }

    /**
     * Constructs a <code>Installment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Installment} obj Optional instance to populate.
     * @return {module:model/Installment} The populated <code>Installment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Installment();

            if (data.hasOwnProperty('InstallmentNumber')) {
                obj['InstallmentNumber'] = ApiClient.convertToType(data['InstallmentNumber'], 'Number');
            }
            if (data.hasOwnProperty('Amount')) {
                obj['Amount'] = Money.constructFromObject(data['Amount']);
            }
            if (data.hasOwnProperty('OriginalAmount')) {
                obj['OriginalAmount'] = Money.constructFromObject(data['OriginalAmount']);
            }
            if (data.hasOwnProperty('RefundAmount')) {
                obj['RefundAmount'] = Money.constructFromObject(data['RefundAmount']);
            }
            if (data.hasOwnProperty('ProcessDateTime')) {
                obj['ProcessDateTime'] = ApiClient.convertToType(data['ProcessDateTime'], 'Date');
            }
            if (data.hasOwnProperty('IsRefund')) {
                obj['IsRefund'] = ApiClient.convertToType(data['IsRefund'], 'Boolean');
            }
            if (data.hasOwnProperty('RequiredCredit')) {
                obj['RequiredCredit'] = Money.constructFromObject(data['RequiredCredit']);
            }
            if (data.hasOwnProperty('CreatedDateTime')) {
                obj['CreatedDateTime'] = ApiClient.convertToType(data['CreatedDateTime'], 'Date');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ReferenceEntityBase.constructFromObject(data['Status']);
            }
            if (data.hasOwnProperty('TransactionResults')) {
                obj['TransactionResults'] = ApiClient.convertToType(data['TransactionResults'], [TransactionResult]);
            }
            if (data.hasOwnProperty('CardDetails')) {
                obj['CardDetails'] = CardData.constructFromObject(data['CardDetails']);
            }
            if (data.hasOwnProperty('Result')) {
                obj['Result'] = ApiClient.convertToType(data['Result'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} InstallmentNumber
 */
Installment.prototype['InstallmentNumber'] = undefined;

/**
 * @member {module:model/Money} Amount
 */
Installment.prototype['Amount'] = undefined;

/**
 * @member {module:model/Money} OriginalAmount
 */
Installment.prototype['OriginalAmount'] = undefined;

/**
 * @member {module:model/Money} RefundAmount
 */
Installment.prototype['RefundAmount'] = undefined;

/**
 * @member {Date} ProcessDateTime
 */
Installment.prototype['ProcessDateTime'] = undefined;

/**
 * @member {Boolean} IsRefund
 */
Installment.prototype['IsRefund'] = undefined;

/**
 * @member {module:model/Money} RequiredCredit
 */
Installment.prototype['RequiredCredit'] = undefined;

/**
 * @member {Date} CreatedDateTime
 */
Installment.prototype['CreatedDateTime'] = undefined;

/**
 * @member {module:model/ReferenceEntityBase} Status
 */
Installment.prototype['Status'] = undefined;

/**
 * @member {Array.<module:model/TransactionResult>} TransactionResults
 */
Installment.prototype['TransactionResults'] = undefined;

/**
 * @member {module:model/CardData} CardDetails
 */
Installment.prototype['CardDetails'] = undefined;

/**
 * @member {Boolean} Result
 */
Installment.prototype['Result'] = undefined;






export default Installment;

