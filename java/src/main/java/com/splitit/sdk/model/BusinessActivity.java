/*
 * splitit-web-api-public-sdk
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.splitit.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * 
 */
@JsonAdapter(BusinessActivity.Adapter.class)
public enum BusinessActivity {
  
  INSTALLMENTPLANCREATE("InstallmentPlanCreate"),
  
  INSTALLMENTPLANUPDATE("InstallmentPlanUpdate"),
  
  INSTALLMENTPLANAPPROVE("InstallmentPlanApprove"),
  
  INSTALLMENTPLANDELETE("InstallmentPlanDelete"),
  
  INSTALLMENTPLANSTARTINSTALLMENTS("InstallmentPlanStartInstallments"),
  
  INSTALLMENTPLANUPDATEPAYMENTDATA("InstallmentPlanUpdatePaymentData"),
  
  INSTALLMENTPLANCANCEL("InstallmentPlanCancel"),
  
  INSTALLMENTPLANAUTHORIZE("InstallmentPlanAuthorize"),
  
  INSTALLMENTPLANCHARGE("InstallmentPlanCharge"),
  
  INSTALLMENTPLANGET("InstallmentPlanGet"),
  
  INSTALLMENTPLANSTOP("InstallmentPlanStop"),
  
  INSTALLMENTPLANRETRY("InstallmentPlanRetry"),
  
  INSTALLMENTPLANFULLCAPTURE("InstallmentPlanFullCapture"),
  
  CONSUMERSGET("ConsumersGet"),
  
  RECEIPTGET("ReceiptGet"),
  
  EXPOSEFULLCCNUMBER("ExposeFullCcNumber"),
  
  REQUESTAPPROVE("RequestApprove"),
  
  USERUPDATE("UserUpdate"),
  
  INSTALLMENTSUPDATE("InstallmentsUpdate"),
  
  REFUND("Refund"),
  
  CHANGEPASSWORD("ChangePassword"),
  
  RESETPASSWORD("ResetPassword"),
  
  GETUSERPROFILE("GetUserProfile"),
  
  GETRESOURCES("GetResources"),
  
  GETSUPPORTEDCULTURES("GetSupportedCultures"),
  
  MERCHANTSAVE("MerchantSave"),
  
  MERCHANTGET("MerchantGet"),
  
  INSTALLMENTPLANSENDEVENT("InstallmentPlanSendEvent"),
  
  BULKCARDSUPDATE("BulkCardsUpdate"),
  
  CARDSRETRIEVAL("CardsRetrieval"),
  
  SIMULATEINSTALLMENTPLANCREATE("SimulateInstallmentPlanCreate"),
  
  INSTALLMENTPLANHOLDCHARGES("InstallmentPlanHoldCharges"),
  
  INSTALLMENTPLANRELEASEHOLDCHARGES("InstallmentPlanReleaseHoldCharges"),
  
  TERMINALGET("TerminalGet"),
  
  INSTALLMENTPLANAUTORETRY("InstallmentPlanAutoRetry"),
  
  INSTALLMENTPLANINITIATE("InstallmentPlanInitiate"),
  
  GETVALIDNUMBEROFINSTALLMENTS("GetValidNumberOfInstallments"),
  
  GETINITIATEDINSTALLMENTPLAN("GetInitiatedInstallmentPlan"),
  
  GETTERMINALPAIRTOKEN("GetTerminalPairToken"),
  
  SAVEROLE("SaveRole"),
  
  SETROLEBUSINESSACTIVITIES("SetRoleBusinessActivities"),
  
  GATEWAYTRANSACTIONUPDATE("GatewayTransactionUpdate"),
  
  GATEWAYTRANSACTIONSGET("GatewayTransactionsGet"),
  
  TRANSFORMPLANTOFUNDED("TransformPlanToFunded"),
  
  TRANSFORMPLANTONONFUNDED("TransformPlanToNonFunded"),
  
  TERMSANDCONDITIONSGET("TermsAndConditionsGet"),
  
  RECALCULATEFEES("ReCalculateFees"),
  
  GATEWAYTRANSACTIONSTEST("GatewayTransactionsTest"),
  
  BINSAVE("BinSave"),
  
  MARKPLANFUNDINGTRANFERDONE("MarkPlanFundingTranferDone"),
  
  INSTALLMENTPLANMARKASTEST("InstallmentPlanMarkAsTest"),
  
  USERUNLOCK("UserUnlock"),
  
  GETUSERS("GetUsers"),
  
  GETSYSTEMEMAILS("GetSystemEmails"),
  
  INSTALLMENTPLANCHANGESTRATEGY("InstallmentPlanChangeStrategy"),
  
  INSTALLMENTPLANSPLITPAY("InstallmentPlanSplitPay"),
  
  GET3DSECUREPARAMETERS("Get3DSecureParameters"),
  
  FINALIZE3DSECURE("Finalize3DSecure"),
  
  EXECSTOREDPROCEDURE("ExecStoredProcedure"),
  
  GETJOBS("GetJobs"),
  
  ADDJOBDEFINITION("AddJobDefinition"),
  
  RUNJOB("RunJob"),
  
  SCHEDULEJOB("ScheduleJob"),
  
  CREATEUSER("CreateUser"),
  
  DELETEUSER("DeleteUser"),
  
  MARKPLANRESERVERETURNDONE("MarkPlanReserveReturnDone"),
  
  INSTALLMENTPLANSETDELAYRESOLUTION("InstallmentPlanSetDelayResolution"),
  
  INSTALLMENTPLANAPPROVEBANKTRANSFER("InstallmentPlanApproveBankTransfer"),
  
  GETAUDITLOG("GetAuditLog"),
  
  LOADTRANSLATION("LoadTranslation"),
  
  SETDATAPRIVACYRESTRICTION("SetDataPrivacyRestriction"),
  
  VERIFYPAYMENT("VerifyPayment"),
  
  INSTALLMENTPLANVERIFYPAID("InstallmentPlanVerifyPaid"),
  
  SETEMAILRULES("SetEmailRules"),
  
  SETMERCHANTEVENTSUBSCRIPTION("SetMerchantEventSubscription"),
  
  GETMERCHANTEVENTSUBSCRIPTIONS("GetMerchantEventSubscriptions"),
  
  GETRECONCILIATIONREPORT("GetReconciliationReport"),
  
  GETOUTSTANDINGAMOUNTSREPORT("GetOutstandingAmountsReport"),
  
  GETNEWPLANSREPORT("GetNewPlansReport"),
  
  UPDATETERMINAL("UpdateTerminal"),
  
  FINANCEFUNDING("FinanceFunding"),
  
  GETLENDERS("GetLenders"),
  
  INSTALLMENTPLANCHANGELENDER("InstallmentPlanChangeLender"),
  
  GETMERCHANTFUNDINGRULES("GetMerchantFundingRules"),
  
  FEERULEDATAGET("FeeRuleDataGet"),
  
  SAVEFEERULEDATA("SaveFeeRuleData"),
  
  GETMERCHANTSTATEMENTS("GetMerchantStatements"),
  
  CONFIRMMERCHANTSTATEMENTS("ConfirmMerchantStatements"),
  
  SAVEMERCHANTFUNDINGRULES("SaveMerchantFundingRules"),
  
  GETMERCHANTSETTINGS("GetMerchantSettings"),
  
  SAVEMERCHANTSETTINGS("SaveMerchantSettings"),
  
  INSTALLMENTPLANCAPTURE("InstallmentPlanCapture"),
  
  DELETEAGENTS("DeleteAgents"),
  
  GETAGENTS("GetAgents"),
  
  DELETEAPICREDENTIALS("DeleteApiCredentials"),
  
  GETAPICREDENTIALS("GetApiCredentials"),
  
  UNLOCKAPICREDENTIALS("UnlockApiCredentials"),
  
  SAVEAPICREDENTIALS("SaveApiCredentials"),
  
  INSTALLMENTPLANVOID("InstallmentPlanVoid"),
  
  CREATEBUSINESSUNIT("CreateBusinessUnit"),
  
  INSTALLMENTPLANREQUESTPAYMENT("InstallmentPlanRequestPayment"),
  
  CHARGEBACK("Chargeback"),
  
  VOIDAUTH("VoidAuth"),
  
  UPDATETERMINALPARAMETERS("UpdateTerminalParameters"),
  
  GETTOUCHPOINT("GetTouchpoint"),
  
  ONBOARDINGREGISTRATION("OnBoardingRegistration"),
  
  INSTALLMENTPLANINITIATEBYREFPLAN("InstallmentPlanInitiateByRefPlan"),
  
  CREATEPUBLICTOKEN("CreatePublicToken"),
  
  LEARNMOREDETAILS("LearnMoreDetails"),
  
  CREATEPAYFACBANKACCOUNT("CreatePayfacBankAccount"),
  
  GETINSTALLMENTSCHEDULES("GetInstallmentSchedules"),
  
  SAVEMERCHANTLENDERAGREEMENT("SaveMerchantLenderAgreement"),
  
  GETFRAUDSTATUSDISPLAY("GetFraudStatusDisplay"),
  
  SAVELENDER("SaveLender"),
  
  REFRESHFUTUREJOBS("RefreshFutureJobs"),
  
  TESTCARD("TestCard"),
  
  REQUESTUPDATECARD("RequestUpdateCard"),
  
  FORCEAUTHORIZEOUTSTANDINGAMOUNT("ForceAuthorizeOutstandingAmount"),
  
  SAVE3DSRESOURCES("Save3DSResources"),
  
  PRECHALLENGE3DS2("PreChallenge3DS2"),
  
  GETPROCESSORS("GetProcessors"),
  
  UPDATEPROCESSORS("UpdateProcessors"),
  
  CREATEPROCESSORS("CreateProcessors"),
  
  DELETEPROCESSORS("DeleteProcessors"),
  
  REFUNDRECEIVED("RefundReceived"),
  
  REFUNDUPDATED("RefundUpdated"),
  
  SALESFORCE("SalesForce");

  private String value;

  BusinessActivity(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static BusinessActivity fromValue(String text) {
    for (BusinessActivity b : BusinessActivity.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<BusinessActivity> {
    @Override
    public void write(final JsonWriter jsonWriter, final BusinessActivity enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public BusinessActivity read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return BusinessActivity.fromValue(String.valueOf(value));
    }
  }
}

