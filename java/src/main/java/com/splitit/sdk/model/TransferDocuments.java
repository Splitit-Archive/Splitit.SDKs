/*
 * splitit-web-api-public-sdk
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.splitit.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.splitit.sdk.model.Currencies;
import com.splitit.sdk.model.EntityBase;
import com.splitit.sdk.model.TransferDocumentDetails;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * TransferDocuments
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-05-06T07:48:08.244Z")
public class TransferDocuments  {
  @SerializedName("Id")
  private Long id = null;

  @SerializedName("Amount")
  private BigDecimal amount = null;

  @SerializedName("CurrencyId")
  private Long currencyId = null;

  @SerializedName("BusinessUnitId")
  private Long businessUnitId = null;

  @SerializedName("AchStatus")
  private Integer achStatus = null;

  @SerializedName("Currency")
  private Currencies currency = null;

  @SerializedName("TransferDocumentDetails")
  private List<TransferDocumentDetails> transferDocumentDetails = null;

  public TransferDocuments id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public TransferDocuments amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }

  public TransferDocuments currencyId(Long currencyId) {
    this.currencyId = currencyId;
    return this;
  }

   /**
   * Get currencyId
   * @return currencyId
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getCurrencyId() {
    return currencyId;
  }

  public void setCurrencyId(Long currencyId) {
    this.currencyId = currencyId;
  }

  public TransferDocuments businessUnitId(Long businessUnitId) {
    this.businessUnitId = businessUnitId;
    return this;
  }

   /**
   * Get businessUnitId
   * @return businessUnitId
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getBusinessUnitId() {
    return businessUnitId;
  }

  public void setBusinessUnitId(Long businessUnitId) {
    this.businessUnitId = businessUnitId;
  }

  public TransferDocuments achStatus(Integer achStatus) {
    this.achStatus = achStatus;
    return this;
  }

   /**
   * Get achStatus
   * @return achStatus
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getAchStatus() {
    return achStatus;
  }

  public void setAchStatus(Integer achStatus) {
    this.achStatus = achStatus;
  }

  public TransferDocuments currency(Currencies currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public Currencies getCurrency() {
    return currency;
  }

  public void setCurrency(Currencies currency) {
    this.currency = currency;
  }

  public TransferDocuments transferDocumentDetails(List<TransferDocumentDetails> transferDocumentDetails) {
    this.transferDocumentDetails = transferDocumentDetails;
    return this;
  }

  public TransferDocuments addTransferDocumentDetailsItem(TransferDocumentDetails transferDocumentDetailsItem) {
    if (this.transferDocumentDetails == null) {
      this.transferDocumentDetails = new ArrayList<TransferDocumentDetails>();
    }
    this.transferDocumentDetails.add(transferDocumentDetailsItem);
    return this;
  }

   /**
   * Get transferDocumentDetails
   * @return transferDocumentDetails
  **/
  @ApiModelProperty(value = "")
  public List<TransferDocumentDetails> getTransferDocumentDetails() {
    return transferDocumentDetails;
  }

  public void setTransferDocumentDetails(List<TransferDocumentDetails> transferDocumentDetails) {
    this.transferDocumentDetails = transferDocumentDetails;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransferDocuments transferDocuments = (TransferDocuments) o;
    return Objects.equals(this.id, transferDocuments.id) &&
        Objects.equals(this.amount, transferDocuments.amount) &&
        Objects.equals(this.currencyId, transferDocuments.currencyId) &&
        Objects.equals(this.businessUnitId, transferDocuments.businessUnitId) &&
        Objects.equals(this.achStatus, transferDocuments.achStatus) &&
        Objects.equals(this.currency, transferDocuments.currency) &&
        Objects.equals(this.transferDocumentDetails, transferDocuments.transferDocumentDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, amount, currencyId, businessUnitId, achStatus, currency, transferDocumentDetails);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransferDocuments {\n");
    
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    businessUnitId: ").append(toIndentedString(businessUnitId)).append("\n");
    sb.append("    achStatus: ").append(toIndentedString(achStatus)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    transferDocumentDetails: ").append(toIndentedString(transferDocumentDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

