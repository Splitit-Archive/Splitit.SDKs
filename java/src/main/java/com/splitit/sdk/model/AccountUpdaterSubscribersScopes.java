/*
 * splitit-web-api-public-sdk
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.splitit.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.splitit.sdk.model.AccountUpdaterProvider;
import com.splitit.sdk.model.CardBrand;
import com.splitit.sdk.model.EntityBase;
import com.splitit.sdk.model.Terminals;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * AccountUpdaterSubscribersScopes
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-05-31T11:14:42.224Z")
public class AccountUpdaterSubscribersScopes  {
  @SerializedName("Id")
  private Long id = null;

  @SerializedName("TerminalId")
  private Long terminalId = null;

  @SerializedName("IssuingCountryIso")
  private String issuingCountryIso = null;

  @SerializedName("Terminal")
  private Terminals terminal = null;

  @SerializedName("AccountUpdaterProvider")
  private AccountUpdaterProvider accountUpdaterProvider = null;

  @SerializedName("CardBrand")
  private CardBrand cardBrand = null;

  public AccountUpdaterSubscribersScopes id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public AccountUpdaterSubscribersScopes terminalId(Long terminalId) {
    this.terminalId = terminalId;
    return this;
  }

   /**
   * Get terminalId
   * @return terminalId
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getTerminalId() {
    return terminalId;
  }

  public void setTerminalId(Long terminalId) {
    this.terminalId = terminalId;
  }

  public AccountUpdaterSubscribersScopes issuingCountryIso(String issuingCountryIso) {
    this.issuingCountryIso = issuingCountryIso;
    return this;
  }

   /**
   * Get issuingCountryIso
   * @return issuingCountryIso
  **/
  @ApiModelProperty(value = "")
  public String getIssuingCountryIso() {
    return issuingCountryIso;
  }

  public void setIssuingCountryIso(String issuingCountryIso) {
    this.issuingCountryIso = issuingCountryIso;
  }

  public AccountUpdaterSubscribersScopes terminal(Terminals terminal) {
    this.terminal = terminal;
    return this;
  }

   /**
   * Get terminal
   * @return terminal
  **/
  @ApiModelProperty(value = "")
  public Terminals getTerminal() {
    return terminal;
  }

  public void setTerminal(Terminals terminal) {
    this.terminal = terminal;
  }

  public AccountUpdaterSubscribersScopes accountUpdaterProvider(AccountUpdaterProvider accountUpdaterProvider) {
    this.accountUpdaterProvider = accountUpdaterProvider;
    return this;
  }

   /**
   * Get accountUpdaterProvider
   * @return accountUpdaterProvider
  **/
  @ApiModelProperty(required = true, value = "")
  public AccountUpdaterProvider getAccountUpdaterProvider() {
    return accountUpdaterProvider;
  }

  public void setAccountUpdaterProvider(AccountUpdaterProvider accountUpdaterProvider) {
    this.accountUpdaterProvider = accountUpdaterProvider;
  }

  public AccountUpdaterSubscribersScopes cardBrand(CardBrand cardBrand) {
    this.cardBrand = cardBrand;
    return this;
  }

   /**
   * Get cardBrand
   * @return cardBrand
  **/
  @ApiModelProperty(required = true, value = "")
  public CardBrand getCardBrand() {
    return cardBrand;
  }

  public void setCardBrand(CardBrand cardBrand) {
    this.cardBrand = cardBrand;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountUpdaterSubscribersScopes accountUpdaterSubscribersScopes = (AccountUpdaterSubscribersScopes) o;
    return Objects.equals(this.id, accountUpdaterSubscribersScopes.id) &&
        Objects.equals(this.terminalId, accountUpdaterSubscribersScopes.terminalId) &&
        Objects.equals(this.issuingCountryIso, accountUpdaterSubscribersScopes.issuingCountryIso) &&
        Objects.equals(this.terminal, accountUpdaterSubscribersScopes.terminal) &&
        Objects.equals(this.accountUpdaterProvider, accountUpdaterSubscribersScopes.accountUpdaterProvider) &&
        Objects.equals(this.cardBrand, accountUpdaterSubscribersScopes.cardBrand);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, terminalId, issuingCountryIso, terminal, accountUpdaterProvider, cardBrand);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountUpdaterSubscribersScopes {\n");
    
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    terminalId: ").append(toIndentedString(terminalId)).append("\n");
    sb.append("    issuingCountryIso: ").append(toIndentedString(issuingCountryIso)).append("\n");
    sb.append("    terminal: ").append(toIndentedString(terminal)).append("\n");
    sb.append("    accountUpdaterProvider: ").append(toIndentedString(accountUpdaterProvider)).append("\n");
    sb.append("    cardBrand: ").append(toIndentedString(cardBrand)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

