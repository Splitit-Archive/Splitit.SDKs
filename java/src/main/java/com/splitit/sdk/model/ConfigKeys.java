/*
 * splitit-web-api-public-sdk
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.splitit.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.splitit.sdk.model.ConfigValues;
import com.splitit.sdk.model.EntityBase;
import com.splitit.sdk.model.TouchPoints;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ConfigKeys
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-05-31T11:14:42.224Z")
public class ConfigKeys  {
  @SerializedName("Id")
  private Long id = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Code")
  private String code = null;

  @SerializedName("TouchPointId")
  private Long touchPointId = null;

  @SerializedName("TouchPoint")
  private TouchPoints touchPoint = null;

  @SerializedName("ConfigValues")
  private List<ConfigValues> configValues = null;

  public ConfigKeys id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public ConfigKeys name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ConfigKeys code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @ApiModelProperty(value = "")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public ConfigKeys touchPointId(Long touchPointId) {
    this.touchPointId = touchPointId;
    return this;
  }

   /**
   * Get touchPointId
   * @return touchPointId
  **/
  @ApiModelProperty(value = "")
  public Long getTouchPointId() {
    return touchPointId;
  }

  public void setTouchPointId(Long touchPointId) {
    this.touchPointId = touchPointId;
  }

  public ConfigKeys touchPoint(TouchPoints touchPoint) {
    this.touchPoint = touchPoint;
    return this;
  }

   /**
   * Get touchPoint
   * @return touchPoint
  **/
  @ApiModelProperty(value = "")
  public TouchPoints getTouchPoint() {
    return touchPoint;
  }

  public void setTouchPoint(TouchPoints touchPoint) {
    this.touchPoint = touchPoint;
  }

  public ConfigKeys configValues(List<ConfigValues> configValues) {
    this.configValues = configValues;
    return this;
  }

  public ConfigKeys addConfigValuesItem(ConfigValues configValuesItem) {
    if (this.configValues == null) {
      this.configValues = new ArrayList<ConfigValues>();
    }
    this.configValues.add(configValuesItem);
    return this;
  }

   /**
   * Get configValues
   * @return configValues
  **/
  @ApiModelProperty(value = "")
  public List<ConfigValues> getConfigValues() {
    return configValues;
  }

  public void setConfigValues(List<ConfigValues> configValues) {
    this.configValues = configValues;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfigKeys configKeys = (ConfigKeys) o;
    return Objects.equals(this.id, configKeys.id) &&
        Objects.equals(this.name, configKeys.name) &&
        Objects.equals(this.code, configKeys.code) &&
        Objects.equals(this.touchPointId, configKeys.touchPointId) &&
        Objects.equals(this.touchPoint, configKeys.touchPoint) &&
        Objects.equals(this.configValues, configKeys.configValues);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, code, touchPointId, touchPoint, configValues);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfigKeys {\n");
    
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    touchPointId: ").append(toIndentedString(touchPointId)).append("\n");
    sb.append("    touchPoint: ").append(toIndentedString(touchPoint)).append("\n");
    sb.append("    configValues: ").append(toIndentedString(configValues)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

