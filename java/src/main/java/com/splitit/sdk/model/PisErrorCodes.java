/*
 * splitit-web-api-public-sdk
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.splitit.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * 
 */
@JsonAdapter(PisErrorCodes.Adapter.class)
public enum PisErrorCodes {
  
  CONFIGURATIONKEYNOTFOUND("ConfigurationKeyNotFound"),
  
  IDNOTFOUND("IdNotFound"),
  
  INVALIDINPUT("InvalidInput"),
  
  EXTERNALSYSTEMCALLFAILED("ExternalSystemCallFailed"),
  
  IDEMPOTENCYERROR("IdempotencyError"),
  
  IDEMPOTENCYORIGINALREQUESTERROR("IdempotencyOriginalRequestError"),
  
  RULEDATAALREADYEXISTS("RuleDataAlreadyExists"),
  
  PGPENCRYPTIONKEYNOTFOUND("PGPEncryptionKeyNotFound"),
  
  INVALIDPGPKEY("InvalidPGPKey"),
  
  INVALIDINSTALLMENTPLANNUMBER("InvalidInstallmentPlanNumber"),
  
  INVALIDINSTALLMENTPLANSTATUS("InvalidInstallmentPlanStatus"),
  
  INVALIDCCCARDTYPENOTSUPPORTED("InvalidCCCardTypeNotSupported"),
  
  INVALIDNUMBEROFINSTALLMENTS("InvalidNumberOfInstallments"),
  
  INVALIDAMOUNTFORMAT("InvalidAmountFormat"),
  
  CARDUPDATEISNOTALLOWED("CardUpdateIsNotAllowed"),
  
  INVALIDCOUNTRYCODE("InvalidCountryCode"),
  
  INVALIDRESPONSEURL("InvalidResponseURL"),
  
  INVALIDCARDHOLDERNAME("InvalidCardholderName"),
  
  INVALIDAMOUNT("InvalidAmount"),
  
  INVALIDCVV("InvalidCVV"),
  
  INVALIDCARDNUMBER("InvalidCardNumber"),
  
  INVALIDEXPIRATIONDATE("InvalidExpirationDate"),
  
  INVALIDCONSUMERFULLNAME("InvalidConsumerFullName"),
  
  INVALIDEMAILFORMAT("InvalidEmailFormat"),
  
  INVALIDADDRESS("InvalidAddress"),
  
  INVALIDZIPCODE("InvalidZIPCode"),
  
  INVALIDCCISSUECOUNTRYNOTSUPPORTEDBYTERMINAL("InvalidCCIssueCountryNotSupportedByTerminal"),
  
  INVALIDCURRENCY("InvalidCurrency"),
  
  INVALIDMASKEDCCNUMNOTFOUNDINPLAN("InvalidMaskedCcNumNotFoundInPlan"),
  
  INSTALLMENTPLANISABOUTTOEXPIRE("InstallmentPlanIsAboutToExpire"),
  
  COUNTRYSUBDIVISIONNOTSUPPORTED("CountrySubdivisionNotSupported"),
  
  UPDATEINSTALLMENT_WITHHIGHERAMOUNTTHANPERSISTEDISNOTALLOW("UpdateInstallment_WithHigherAmountThanPersistedIsNotAllow"),
  
  UPDATEINSTALLMENT_FIRSTINSTALLMENTWITHHIGHERAMOUNTTHANPERSISTEDISNOTALLOW("UpdateInstallment_FirstInstallmentWithHigherAmountThanPersistedIsNotAllow"),
  
  UPDATEINSTALLMENT_INTHEMIDDLEOFPLANASZEROISNOTALLOW("UpdateInstallment_InTheMiddleOfPlanAsZeroIsNotAllow"),
  
  REFUNDINSTALLMENTWITHHIGHERAMOUNTTHANORIGINALISNOTALLOWED("RefundInstallmentWithHigherAmountThanOriginalIsNotAllowed"),
  
  REFUNDINSTALLMENTTHATHASBEENCAPTUREDYETISNOTALLOWED("RefundInstallmentThatHasBeenCapturedYetIsNotAllowed"),
  
  UPDATEINSTALLMENT_ALREADYPROCESSED("UpdateInstallment_AlreadyProcessed"),
  
  APPROVEPLAN_PLANALREADYAPPROVED("ApprovePlan_PlanAlreadyApproved"),
  
  INVALIDEXPIRATIONDATEFORMAT("InvalidExpirationDateFormat"),
  
  INVALIDCCBINNOTFOUND("InvalidCCBinNotFound"),
  
  INVALIDCCCARDBRANDNOTSUPPORTED("InvalidCCCardBrandNotSupported"),
  
  APPROVEPLAN_NOAPPROVALEVIDENCE("ApprovePlan_NoApprovalEvidence"),
  
  PLANWITHTHESAMEPAYMENTDATAALREADYBEENCREATEDLATELY("PlanWithTheSamePaymentDataAlreadyBeenCreatedLately"),
  
  INVALIDFUTURECHARGEDATE("InvalidFutureChargeDate"),
  
  INVALIDFIRSTINSTALLMENTAMOUNT("InvalidFirstInstallmentAmount"),
  
  CULTURENAMENOTVALID("CultureNameNotValid"),
  
  CULTURENOTSUPPORTED("CultureNotSupported"),
  
  SYSTEMTEXTKEYNOTFOUND("SystemTextKeyNotFound"),
  
  TERMINALNOTFOUNDBYSUPPLIEDAPIKEY("TerminalNotFoundBySuppliedApiKey"),
  
  UNKNOWNZIPCODE("UnknownZipCode"),
  
  CCREJECTIONPROCESSCANNOTBEINITIATEDDUETOAUTHEXPIRATION("CCRejectionProcessCannotBeInitiatedDueToAuthExpiration"),
  
  CANTCHARGEINSTALLMENTWHILEPLANCHARGESAREONHOLD("CantChargeInstallmentWhilePlanChargesAreOnHold"),
  
  CANTRELEASEHOLDONCHARGESSINCECHARGESARENOTHOLDED("CantReleaseHoldOnChargesSinceChargesAreNotHolded"),
  
  REFUNDNOTALLOWEDONEORMOREINSTALLMENTSPASSEDREFUNDALLOWEDTIME("RefundNotAllowedOneOrMoreInstallmentsPassedRefundAllowedTime"),
  
  REFUNDPARTIALYFAILEDONEORMOREINSTALLMENTFAILEDREFUND("RefundPartialyFailedOneOrMoreInstallmentFailedRefund"),
  
  REFUNDFAILED("RefundFailed"),
  
  UPDATEPLANPARAMETERSARENOTSUPPORTED("UpdatePlanParametersAreNotSupported"),
  
  REFUNDREQUESTEDAMOUNTEXCEEDEDPLANREFUNDABLEAMOUNT("RefundRequestedAmountExceededPlanRefundableAmount"),
  
  INVALIDCURRENCY_NOTSUPPORTEDBYTERMINAL("InvalidCurrency_NotSupportedByTerminal"),
  
  CREDITCARDISMISSING("CreditCardIsMissing"),
  
  PISMEMBERISMISSING("PisMemberIsMissing"),
  
  ADDRESSDATAISMISSINGORPARTIALLYINITIATED("AddressDataIsMissingOrPartiallyInitiated"),
  
  CARDHOLDERNAMEISMISSING("CardHolderNameIsMissing"),
  
  CARDNUMBERISMISSING("CardNumberIsMissing"),
  
  CARDEXPIRATIONMONTHISMISSING("CardExpirationMonthIsMissing"),
  
  CARDEXPIRATIONYEARISMISSING("CardExpirationYearIsMissing"),
  
  NUMBEROFINSTALLMENTNOTDEFINED("NumberOfInstallmentNotDefined"),
  
  INVALIDSTATECODE("InvalidStateCode"),
  
  EMAILISMISSING("EmailIsMissing"),
  
  CONSUMERFULLNAMEISMISSING("ConsumerFullNameIsMissing"),
  
  CURRENCYMUSTBEDEFINEDONTRANSACTION("CurrencyMustBeDefinedOnTransaction"),
  
  COULDNOTFUNDINSTALLMENTPLAN("CouldNotFundInstallmentPlan"),
  
  COULDNOTREVERTFUND("CouldNotRevertFund"),
  
  INVALIDPLANSTRATEGY("InvalidPlanStrategy"),
  
  FULLCAPTURENOTSUPPORTED("FullCaptureNotSupported"),
  
  INVALIDCCPREPAIDCARDNOTSUPPORTED("InvalidCcPrepaidCardNotSupported"),
  
  CARDEXPIREBEFOREPLANENDS("CardExpireBeforePlanEnds"),
  
  PARTIALPLANAMOUNTAUTHORIZED("PartialPlanAmountAuthorized"),
  
  SECUREDAUTHORIZATIONREQUIREDFORPARTIALPAYMENT("SecuredAuthorizationRequiredForPartialPayment"),
  
  THREEDSECUREDATANOTFOUND("ThreeDSecureDataNotFound"),
  
  THREEDSECURENOTSUPPORTEDBYPLANSTRATEGY("ThreeDSecureNotSupportedByPlanStrategy"),
  
  THREEDSECUREREQUIREDDATAMISSING("ThreeDSecureRequiredDataMissing"),
  
  STRATEGYNOTALLOWED("StrategyNotAllowed"),
  
  PAYMENTTOKENNOTVALID("PaymentTokenNotValid"),
  
  ACTIVITYNOTSUPPORTEDFORPLANSTRATEGY("ActivityNotSupportedForPlanStrategy"),
  
  PAYMENTWIZARDVIEWNOTEXIST("PaymentWizardViewNotExist"),
  
  INVALIDURL("InvalidUrl"),
  
  ISSUERBINNOTSUPPORTINGINSTALLMENTEXCEPTION("IssuerBinNotSupportingInstallmentException"),
  
  COULDNOTCHANGELENDER("CouldNotChangeLender"),
  
  FRAUDDETECED("FraudDeteced"),
  
  PHONEISMISSING("PhoneIsMissing"),
  
  INVALIDPHONEFORMAT("InvalidPhoneFormat"),
  
  INSTALLMENTMISSINGOPENAUTHORIZATION("InstallmentMissingOpenAuthorization"),
  
  GENERALERROR("GeneralError"),
  
  GTWYRESULTGENERALERROR("GtwyResultGeneralError"),
  
  GTWYRESULTCCDATAAVSZIP("GtwyResultCCDataAVSZip"),
  
  GTWYRESULTCCDATAAVSADDRESS("GtwyResultCCDataAVSAddress"),
  
  GTWYRESULTCCDATACVV("GtwyResultCCDataCVV"),
  
  GTWYRESULTCCDATACCEXPIRATION("GtwyResultCCDataCCExpiration"),
  
  GTWYRESULTCCDATAAVS("GtwyResultCCDataAVS"),
  
  GTWYRESULTCCDATANUMBER("GtwyResultCCDataNumber"),
  
  GTWYRESULTCCDATAGENERALPROBLEM("GtwyResultCCDataGeneralProblem"),
  
  GTWYRESULTCCDATAINSUFFICIENTFUNDS("GtwyResultCCDataInsufficientFunds"),
  
  GTWYRESULTCCWASDECLINED("GtwyResultCCWasDeclined"),
  
  GTWYCONNECTIVITYPROBLEM("GtwyConnectivityProblem"),
  
  GTWYMERCHANTDATAPROBLEM("GtwyMerchantDataProblem"),
  
  GTWYREQUIRE3DAUTHENTICATION("GtwyRequire3DAuthentication"),
  
  INVALIDCREDENTIALS("InvalidCredentials"),
  
  USERISLOCKED("UserIsLocked"),
  
  USERISLOCKEDDUEINACTIVITY("UserIsLockedDueInactivity"),
  
  SESSIONNOTVALID("SessionNotValid"),
  
  SESSIONEXPIRED("SessionExpired"),
  
  ACTIVITYNOTALLOWEDFORUSER("ActivityNotAllowedForUser"),
  
  ACTIVITYONMERCHANTNOTALLOWEDFORUSER("ActivityOnMerchantNotAllowedForUser"),
  
  ACTIVITYONTERMINALNOTALLOWEDFORUSER("ActivityOnTerminalNotAllowedForUser"),
  
  ACTIVITYONINSTALLMENTPLANNOTALLOWEDFORUSER("ActivityOnInstallmentPlanNotAllowedForUser"),
  
  TOKENNOTFOUNDOREXPIRED("TokenNotFoundOrExpired"),
  
  TOKENALREADYUSED("TokenAlreadyUsed"),
  
  USEROLDPASSRODISINCORRECT("UserOldPassrodIsIncorrect"),
  
  USERNEWPASSWORDALREADYUSED("UserNewPasswordAlreadyUsed"),
  
  USEREMAILNOTFOUND("UserEmailNotFound"),
  
  PASSWORDEXPIRED("PasswordExpired"),
  
  TOUCHPOINTNOTFOUND("TouchPointNotFound"),
  
  ACTIVITYNOTALLOWEDFORPUBLICSESSION("ActivityNotAllowedForPublicSession"),
  
  USERRELATESTOMORETHANSINGLEBUSINESSUNIT("UserRelatesToMoreThanSingleBusinessUnit"),
  
  INVALIDPASSWORDSTRENGTH("InvalidPasswordStrength"),
  
  INVALIDREQUESTEDSTRATEGY("InvalidRequestedStrategy"),
  
  ROLENOTALLOWEDFORUSER("RoleNotAllowedForUser"),
  
  USERNAMEALREADYEXISTS("UserNameAlreadyExists"),
  
  ACTIVITYNOTALLOWEDFORAUTHENTICATIONTYPE("ActivityNotAllowedForAuthenticationType"),
  
  ACTIVITYNOTALLOWEDDUETOPRIVACYPROTECTION("ActivityNotAllowedDueToPrivacyProtection"),
  
  BUSINESSUNITNOTALLOWEDFORUSER("BusinessUnitNotAllowedForUser"),
  
  UPDATETODIFFERENTBUSINESSPARTYROLENOTALLOWED("UpdateToDifferentBusinessPartyRoleNotAllowed"),
  
  EXTERNALAUTHAMOUNTNOTVALID("ExternalAuthAmountNotValid"),
  
  CAPTCHANOTSUCCESSFUL("CaptchaNotSuccessful"),
  
  REPORTNOTALLOWEDFORUSER("ReportNotAllowedForUser"),
  
  INVALIDPERIODRANGEVALUES("InvalidPeriodRangeValues"),
  
  REMOVEDTRANSACTIONCURRENCYISINUSEBYTERMINAL("RemovedTransactionCurrencyIsInUseByTerminal"),
  
  REMOVEDTRANSACTIONCURRENCYISINUSEBYACCOUNTINGCURRENCY("RemovedTransactionCurrencyIsInUseByAccountingCurrency"),
  
  INVALIDAMOUNTRANGEVALUES("InvalidAmountRangeValues"),
  
  EMAILCANNOTBEEMPTY("EmailCannotBeEmpty"),
  
  COUNTRYNOTSUPPORTED("CountryNotSupported"),
  
  TERMINALAPIKEYMISSING("TerminalApiKeyMissing"),
  
  TOTALWEIGHTEDVALUESNOTEQUAL100("TotalWeightedValuesNotEqual100"),
  
  AMOUNTEXCEEDEDMAXALLOWEDFORFUNDINGOPERATION("AmountExceededMaxAllowedForFundingOperation"),
  
  FUNDEDPLANSCANNOTBECANCELEDWITHOUTREFUND("FundedPlansCannotBeCanceledWithoutRefund"),
  
  INSTALLMENTSCANNOTBEUPDATEDONFUNDEDPLANWITHLOWERPLANAMOUNT("InstallmentsCannotBeUpdatedOnFundedPlanWithLowerPlanAmount"),
  
  NOFUNDINGPLANINFOFORINSTALLMENTPLAN("NoFundingPlanInfoForInstallmentPlan"),
  
  NOFUNDINGSETUPFORBUSINESSUNIT("NoFundingSetupForBusinessUnit"),
  
  MERCHANTISNOTFINANCEDYET("MerchantIsNotFinancedYet"),
  
  SALESFORCEOPERATIONERROR("SalesforceOperationError"),
  
  MULTIPLEMESSAGINGMEANSPROVIDED("MultipleMessagingMeansProvided"),
  
  NOMESSAGINGMEANSWASPROVIDED("NoMessagingMeansWasProvided"),
  
  LOGOCANNOTBEREMOVED("LogoCannotBeRemoved"),
  
  PLANISLOCKEDFORCHANGES("PlanIsLockedForChanges"),
  
  CANNOTPERFROMACTIONDUETOACTIVEDELAYDCHARGE("CannotPerfromActionDueToActiveDelaydCharge"),
  
  EXTERNALINSTALLMENTPROVIDERERROR("ExternalInstallmentProviderError"),
  
  CANNOTCHANGEAMOUNTWHENSTATUSISNTINITIALIZE("CannotChangeAmountWhenStatusIsntInitialize"),
  
  INVALIDCCCARDTYPENOTSUPPORTEDMORETHANXINSTALLMENTS("InvalidCCCardTypeNotSupportedMoreThanXInstallments"),
  
  INVALIDCCCARDTYPENOTSUPPORTEDMORETHANXAMOUNT("InvalidCCCardTypeNotSupportedMoreThanXAmount"),
  
  PLANAMOUNTEXCEEDSALLOWEDDECIMALPLACES("PlanAmountExceedsAllowedDecimalPlaces"),
  
  INVALIDCCCARDBRANDNOTSUPPORTEDMORETHANXINSTALLMENTS("InvalidCCCardBrandNotSupportedMoreThanXInstallments"),
  
  INVALIDCCCARDBRANDNOTSUPPORTEDMORETHANXAMOUNT("InvalidCCCardBrandNotSupportedMoreThanXAmount"),
  
  EMAILNOTVERIFIED("EmailNotVerified"),
  
  INVALIDCCPREPAIDCARDNOTSUPPORTEDMORETHANXINSTALLMENTS("InvalidCcPrepaidCardNotSupportedMoreThanXInstallments"),
  
  INVALIDCCPREPAIDCARDNOTSUPPORTEDMORETHANXAMOUNT("InvalidCcPrepaidCardNotSupportedMoreThanXAmount"),
  
  PLANCONTEXTNOTVALIDFORNUMBEROFINSTALLMENTS("PlanContextNotValidForNumberOfInstallments"),
  
  PLANCONTEXTNOTVALIDFORAMOUNT("PlanContextNotValidForAmount"),
  
  USEREMAILALREADYEXISTS("UserEmailAlreadyExists"),
  
  USERNOTFOUND("UserNotFound"),
  
  NONE("None");

  private String value;

  PisErrorCodes(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static PisErrorCodes fromValue(String text) {
    for (PisErrorCodes b : PisErrorCodes.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<PisErrorCodes> {
    @Override
    public void write(final JsonWriter jsonWriter, final PisErrorCodes enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public PisErrorCodes read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return PisErrorCodes.fromValue(String.valueOf(value));
    }
  }
}

