/*
 * splitit-web-api-public-sdk
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.splitit.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.splitit.sdk.model.EntityBase;
import com.splitit.sdk.model.InstallmentPlans;
import com.splitit.sdk.model.SystemEmailsTypes;
import com.splitit.sdk.model.UserType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * EmailAuditLogs
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-05-31T11:14:42.224Z")
public class EmailAuditLogs  {
  @SerializedName("Id")
  private Long id = null;

  @SerializedName("InstallmentPlanId")
  private Long installmentPlanId = null;

  @SerializedName("UserUniqueId")
  private String userUniqueId = null;

  @SerializedName("UserId")
  private Long userId = null;

  @SerializedName("EmailAddress")
  private String emailAddress = null;

  @SerializedName("ExternalIdentifier")
  private String externalIdentifier = null;

  @SerializedName("InstallmentPlan")
  private InstallmentPlans installmentPlan = null;

  @SerializedName("UserType")
  private UserType userType = null;

  @SerializedName("EmailType")
  private SystemEmailsTypes emailType = null;

  @SerializedName("EmailHtmlBodyFilename")
  private String emailHtmlBodyFilename = null;

  public EmailAuditLogs id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public EmailAuditLogs installmentPlanId(Long installmentPlanId) {
    this.installmentPlanId = installmentPlanId;
    return this;
  }

   /**
   * Get installmentPlanId
   * @return installmentPlanId
  **/
  @ApiModelProperty(value = "")
  public Long getInstallmentPlanId() {
    return installmentPlanId;
  }

  public void setInstallmentPlanId(Long installmentPlanId) {
    this.installmentPlanId = installmentPlanId;
  }

  public EmailAuditLogs userUniqueId(String userUniqueId) {
    this.userUniqueId = userUniqueId;
    return this;
  }

   /**
   * Get userUniqueId
   * @return userUniqueId
  **/
  @ApiModelProperty(value = "")
  public String getUserUniqueId() {
    return userUniqueId;
  }

  public void setUserUniqueId(String userUniqueId) {
    this.userUniqueId = userUniqueId;
  }

  public EmailAuditLogs userId(Long userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @ApiModelProperty(value = "")
  public Long getUserId() {
    return userId;
  }

  public void setUserId(Long userId) {
    this.userId = userId;
  }

  public EmailAuditLogs emailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
    return this;
  }

   /**
   * Get emailAddress
   * @return emailAddress
  **/
  @ApiModelProperty(value = "")
  public String getEmailAddress() {
    return emailAddress;
  }

  public void setEmailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
  }

  public EmailAuditLogs externalIdentifier(String externalIdentifier) {
    this.externalIdentifier = externalIdentifier;
    return this;
  }

   /**
   * Get externalIdentifier
   * @return externalIdentifier
  **/
  @ApiModelProperty(value = "")
  public String getExternalIdentifier() {
    return externalIdentifier;
  }

  public void setExternalIdentifier(String externalIdentifier) {
    this.externalIdentifier = externalIdentifier;
  }

  public EmailAuditLogs installmentPlan(InstallmentPlans installmentPlan) {
    this.installmentPlan = installmentPlan;
    return this;
  }

   /**
   * Get installmentPlan
   * @return installmentPlan
  **/
  @ApiModelProperty(value = "")
  public InstallmentPlans getInstallmentPlan() {
    return installmentPlan;
  }

  public void setInstallmentPlan(InstallmentPlans installmentPlan) {
    this.installmentPlan = installmentPlan;
  }

  public EmailAuditLogs userType(UserType userType) {
    this.userType = userType;
    return this;
  }

   /**
   * Get userType
   * @return userType
  **/
  @ApiModelProperty(value = "")
  public UserType getUserType() {
    return userType;
  }

  public void setUserType(UserType userType) {
    this.userType = userType;
  }

  public EmailAuditLogs emailType(SystemEmailsTypes emailType) {
    this.emailType = emailType;
    return this;
  }

   /**
   * Get emailType
   * @return emailType
  **/
  @ApiModelProperty(required = true, value = "")
  public SystemEmailsTypes getEmailType() {
    return emailType;
  }

  public void setEmailType(SystemEmailsTypes emailType) {
    this.emailType = emailType;
  }

  public EmailAuditLogs emailHtmlBodyFilename(String emailHtmlBodyFilename) {
    this.emailHtmlBodyFilename = emailHtmlBodyFilename;
    return this;
  }

   /**
   * Get emailHtmlBodyFilename
   * @return emailHtmlBodyFilename
  **/
  @ApiModelProperty(value = "")
  public String getEmailHtmlBodyFilename() {
    return emailHtmlBodyFilename;
  }

  public void setEmailHtmlBodyFilename(String emailHtmlBodyFilename) {
    this.emailHtmlBodyFilename = emailHtmlBodyFilename;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailAuditLogs emailAuditLogs = (EmailAuditLogs) o;
    return Objects.equals(this.id, emailAuditLogs.id) &&
        Objects.equals(this.installmentPlanId, emailAuditLogs.installmentPlanId) &&
        Objects.equals(this.userUniqueId, emailAuditLogs.userUniqueId) &&
        Objects.equals(this.userId, emailAuditLogs.userId) &&
        Objects.equals(this.emailAddress, emailAuditLogs.emailAddress) &&
        Objects.equals(this.externalIdentifier, emailAuditLogs.externalIdentifier) &&
        Objects.equals(this.installmentPlan, emailAuditLogs.installmentPlan) &&
        Objects.equals(this.userType, emailAuditLogs.userType) &&
        Objects.equals(this.emailType, emailAuditLogs.emailType) &&
        Objects.equals(this.emailHtmlBodyFilename, emailAuditLogs.emailHtmlBodyFilename);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, installmentPlanId, userUniqueId, userId, emailAddress, externalIdentifier, installmentPlan, userType, emailType, emailHtmlBodyFilename);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailAuditLogs {\n");
    
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    installmentPlanId: ").append(toIndentedString(installmentPlanId)).append("\n");
    sb.append("    userUniqueId: ").append(toIndentedString(userUniqueId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    externalIdentifier: ").append(toIndentedString(externalIdentifier)).append("\n");
    sb.append("    installmentPlan: ").append(toIndentedString(installmentPlan)).append("\n");
    sb.append("    userType: ").append(toIndentedString(userType)).append("\n");
    sb.append("    emailType: ").append(toIndentedString(emailType)).append("\n");
    sb.append("    emailHtmlBodyFilename: ").append(toIndentedString(emailHtmlBodyFilename)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

