/*
 * splitit-web-api-public-sdk
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.splitit.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.splitit.sdk.model.CountrySubdivisions;
import com.splitit.sdk.model.EntityBase;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ZipAddressDetails
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-05-06T07:48:08.244Z")
public class ZipAddressDetails  {
  @SerializedName("Id")
  private Long id = null;

  @SerializedName("CountrySubdivisionId")
  private Long countrySubdivisionId = null;

  @SerializedName("Zip")
  private String zip = null;

  @SerializedName("CountrySubdivision")
  private CountrySubdivisions countrySubdivision = null;

  public ZipAddressDetails id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public ZipAddressDetails countrySubdivisionId(Long countrySubdivisionId) {
    this.countrySubdivisionId = countrySubdivisionId;
    return this;
  }

   /**
   * Get countrySubdivisionId
   * @return countrySubdivisionId
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getCountrySubdivisionId() {
    return countrySubdivisionId;
  }

  public void setCountrySubdivisionId(Long countrySubdivisionId) {
    this.countrySubdivisionId = countrySubdivisionId;
  }

  public ZipAddressDetails zip(String zip) {
    this.zip = zip;
    return this;
  }

   /**
   * Get zip
   * @return zip
  **/
  @ApiModelProperty(value = "")
  public String getZip() {
    return zip;
  }

  public void setZip(String zip) {
    this.zip = zip;
  }

  public ZipAddressDetails countrySubdivision(CountrySubdivisions countrySubdivision) {
    this.countrySubdivision = countrySubdivision;
    return this;
  }

   /**
   * Get countrySubdivision
   * @return countrySubdivision
  **/
  @ApiModelProperty(value = "")
  public CountrySubdivisions getCountrySubdivision() {
    return countrySubdivision;
  }

  public void setCountrySubdivision(CountrySubdivisions countrySubdivision) {
    this.countrySubdivision = countrySubdivision;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ZipAddressDetails zipAddressDetails = (ZipAddressDetails) o;
    return Objects.equals(this.id, zipAddressDetails.id) &&
        Objects.equals(this.countrySubdivisionId, zipAddressDetails.countrySubdivisionId) &&
        Objects.equals(this.zip, zipAddressDetails.zip) &&
        Objects.equals(this.countrySubdivision, zipAddressDetails.countrySubdivision);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, countrySubdivisionId, zip, countrySubdivision);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ZipAddressDetails {\n");
    
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    countrySubdivisionId: ").append(toIndentedString(countrySubdivisionId)).append("\n");
    sb.append("    zip: ").append(toIndentedString(zip)).append("\n");
    sb.append("    countrySubdivision: ").append(toIndentedString(countrySubdivision)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

