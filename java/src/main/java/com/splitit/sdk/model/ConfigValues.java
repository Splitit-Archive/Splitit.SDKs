/*
 * splitit-web-api-public-sdk
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.splitit.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.splitit.sdk.model.ConfigKeys;
import com.splitit.sdk.model.EntityBase;
import com.splitit.sdk.model.TouchPointColorValues;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ConfigValues
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-05-06T07:48:08.244Z")
public class ConfigValues  {
  @SerializedName("Id")
  private Long id = null;

  @SerializedName("Value")
  private String value = null;

  @SerializedName("ConfigKeyId")
  private Long configKeyId = null;

  @SerializedName("TouchPointColorValuesId")
  private Long touchPointColorValuesId = null;

  @SerializedName("ConfigKey")
  private ConfigKeys configKey = null;

  @SerializedName("TouchPointColorValues")
  private TouchPointColorValues touchPointColorValues = null;

  public ConfigValues id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public ConfigValues value(String value) {
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @ApiModelProperty(value = "")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public ConfigValues configKeyId(Long configKeyId) {
    this.configKeyId = configKeyId;
    return this;
  }

   /**
   * Get configKeyId
   * @return configKeyId
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getConfigKeyId() {
    return configKeyId;
  }

  public void setConfigKeyId(Long configKeyId) {
    this.configKeyId = configKeyId;
  }

  public ConfigValues touchPointColorValuesId(Long touchPointColorValuesId) {
    this.touchPointColorValuesId = touchPointColorValuesId;
    return this;
  }

   /**
   * Get touchPointColorValuesId
   * @return touchPointColorValuesId
  **/
  @ApiModelProperty(value = "")
  public Long getTouchPointColorValuesId() {
    return touchPointColorValuesId;
  }

  public void setTouchPointColorValuesId(Long touchPointColorValuesId) {
    this.touchPointColorValuesId = touchPointColorValuesId;
  }

  public ConfigValues configKey(ConfigKeys configKey) {
    this.configKey = configKey;
    return this;
  }

   /**
   * Get configKey
   * @return configKey
  **/
  @ApiModelProperty(value = "")
  public ConfigKeys getConfigKey() {
    return configKey;
  }

  public void setConfigKey(ConfigKeys configKey) {
    this.configKey = configKey;
  }

  public ConfigValues touchPointColorValues(TouchPointColorValues touchPointColorValues) {
    this.touchPointColorValues = touchPointColorValues;
    return this;
  }

   /**
   * Get touchPointColorValues
   * @return touchPointColorValues
  **/
  @ApiModelProperty(value = "")
  public TouchPointColorValues getTouchPointColorValues() {
    return touchPointColorValues;
  }

  public void setTouchPointColorValues(TouchPointColorValues touchPointColorValues) {
    this.touchPointColorValues = touchPointColorValues;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfigValues configValues = (ConfigValues) o;
    return Objects.equals(this.id, configValues.id) &&
        Objects.equals(this.value, configValues.value) &&
        Objects.equals(this.configKeyId, configValues.configKeyId) &&
        Objects.equals(this.touchPointColorValuesId, configValues.touchPointColorValuesId) &&
        Objects.equals(this.configKey, configValues.configKey) &&
        Objects.equals(this.touchPointColorValues, configValues.touchPointColorValues);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, value, configKeyId, touchPointColorValuesId, configKey, touchPointColorValues);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfigValues {\n");
    
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    configKeyId: ").append(toIndentedString(configKeyId)).append("\n");
    sb.append("    touchPointColorValuesId: ").append(toIndentedString(touchPointColorValuesId)).append("\n");
    sb.append("    configKey: ").append(toIndentedString(configKey)).append("\n");
    sb.append("    touchPointColorValues: ").append(toIndentedString(touchPointColorValues)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

