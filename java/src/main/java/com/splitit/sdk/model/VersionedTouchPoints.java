/*
 * splitit-web-api-public-sdk
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.splitit.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.splitit.sdk.model.EntityBase;
import com.splitit.sdk.model.InstallmentPlanAuditLogs;
import com.splitit.sdk.model.PisSessions;
import com.splitit.sdk.model.TouchPoints;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * VersionedTouchPoints
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-05-06T09:33:27.783Z")
public class VersionedTouchPoints  {
  @SerializedName("Id")
  private Long id = null;

  @SerializedName("Version")
  private String version = null;

  @SerializedName("TouchPointId")
  private Long touchPointId = null;

  @SerializedName("SubVersion")
  private String subVersion = null;

  @SerializedName("TouchPoint")
  private TouchPoints touchPoint = null;

  @SerializedName("PisSessions")
  private List<PisSessions> pisSessions = null;

  @SerializedName("InstallmentPlanAuditLogs")
  private List<InstallmentPlanAuditLogs> installmentPlanAuditLogs = null;

  public VersionedTouchPoints id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public VersionedTouchPoints version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @ApiModelProperty(value = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public VersionedTouchPoints touchPointId(Long touchPointId) {
    this.touchPointId = touchPointId;
    return this;
  }

   /**
   * Get touchPointId
   * @return touchPointId
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getTouchPointId() {
    return touchPointId;
  }

  public void setTouchPointId(Long touchPointId) {
    this.touchPointId = touchPointId;
  }

  public VersionedTouchPoints subVersion(String subVersion) {
    this.subVersion = subVersion;
    return this;
  }

   /**
   * Get subVersion
   * @return subVersion
  **/
  @ApiModelProperty(value = "")
  public String getSubVersion() {
    return subVersion;
  }

  public void setSubVersion(String subVersion) {
    this.subVersion = subVersion;
  }

  public VersionedTouchPoints touchPoint(TouchPoints touchPoint) {
    this.touchPoint = touchPoint;
    return this;
  }

   /**
   * Get touchPoint
   * @return touchPoint
  **/
  @ApiModelProperty(value = "")
  public TouchPoints getTouchPoint() {
    return touchPoint;
  }

  public void setTouchPoint(TouchPoints touchPoint) {
    this.touchPoint = touchPoint;
  }

  public VersionedTouchPoints pisSessions(List<PisSessions> pisSessions) {
    this.pisSessions = pisSessions;
    return this;
  }

  public VersionedTouchPoints addPisSessionsItem(PisSessions pisSessionsItem) {
    if (this.pisSessions == null) {
      this.pisSessions = new ArrayList<PisSessions>();
    }
    this.pisSessions.add(pisSessionsItem);
    return this;
  }

   /**
   * Get pisSessions
   * @return pisSessions
  **/
  @ApiModelProperty(value = "")
  public List<PisSessions> getPisSessions() {
    return pisSessions;
  }

  public void setPisSessions(List<PisSessions> pisSessions) {
    this.pisSessions = pisSessions;
  }

  public VersionedTouchPoints installmentPlanAuditLogs(List<InstallmentPlanAuditLogs> installmentPlanAuditLogs) {
    this.installmentPlanAuditLogs = installmentPlanAuditLogs;
    return this;
  }

  public VersionedTouchPoints addInstallmentPlanAuditLogsItem(InstallmentPlanAuditLogs installmentPlanAuditLogsItem) {
    if (this.installmentPlanAuditLogs == null) {
      this.installmentPlanAuditLogs = new ArrayList<InstallmentPlanAuditLogs>();
    }
    this.installmentPlanAuditLogs.add(installmentPlanAuditLogsItem);
    return this;
  }

   /**
   * Get installmentPlanAuditLogs
   * @return installmentPlanAuditLogs
  **/
  @ApiModelProperty(value = "")
  public List<InstallmentPlanAuditLogs> getInstallmentPlanAuditLogs() {
    return installmentPlanAuditLogs;
  }

  public void setInstallmentPlanAuditLogs(List<InstallmentPlanAuditLogs> installmentPlanAuditLogs) {
    this.installmentPlanAuditLogs = installmentPlanAuditLogs;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VersionedTouchPoints versionedTouchPoints = (VersionedTouchPoints) o;
    return Objects.equals(this.id, versionedTouchPoints.id) &&
        Objects.equals(this.version, versionedTouchPoints.version) &&
        Objects.equals(this.touchPointId, versionedTouchPoints.touchPointId) &&
        Objects.equals(this.subVersion, versionedTouchPoints.subVersion) &&
        Objects.equals(this.touchPoint, versionedTouchPoints.touchPoint) &&
        Objects.equals(this.pisSessions, versionedTouchPoints.pisSessions) &&
        Objects.equals(this.installmentPlanAuditLogs, versionedTouchPoints.installmentPlanAuditLogs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, version, touchPointId, subVersion, touchPoint, pisSessions, installmentPlanAuditLogs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VersionedTouchPoints {\n");
    
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    touchPointId: ").append(toIndentedString(touchPointId)).append("\n");
    sb.append("    subVersion: ").append(toIndentedString(subVersion)).append("\n");
    sb.append("    touchPoint: ").append(toIndentedString(touchPoint)).append("\n");
    sb.append("    pisSessions: ").append(toIndentedString(pisSessions)).append("\n");
    sb.append("    installmentPlanAuditLogs: ").append(toIndentedString(installmentPlanAuditLogs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

