/*
 * splitit-web-api-public-sdk
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.splitit.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.splitit.sdk.model.AddressData2;
import com.splitit.sdk.model.Agents;
import com.splitit.sdk.model.ApiUsers;
import com.splitit.sdk.model.BankDetails;
import com.splitit.sdk.model.BusinessUnits;
import com.splitit.sdk.model.Countries;
import com.splitit.sdk.model.CountryState;
import com.splitit.sdk.model.CountrySubdivisions;
import com.splitit.sdk.model.EntityBase;
import com.splitit.sdk.model.InstallmentPlanEventsSubscriptionDatas;
import com.splitit.sdk.model.MerchantStatus;
import com.splitit.sdk.model.OnBoardingMethod;
import com.splitit.sdk.model.ParameterGroups;
import com.splitit.sdk.model.SalesAssociates;
import com.splitit.sdk.model.SplititEntity;
import com.splitit.sdk.model.Terminals;
import com.splitit.sdk.model.TouchPointColorValues;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * Merchants
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-05-06T09:33:27.783Z")
public class Merchants  {
  @SerializedName("Id")
  private Long id = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Address")
  private String address = null;

  @SerializedName("Email")
  private String email = null;

  @SerializedName("MerchantAdminWebsite")
  private Boolean merchantAdminWebsite = null;

  @SerializedName("WebApi")
  private Boolean webApi = null;

  @SerializedName("EmbeddedClients")
  private Boolean embeddedClients = null;

  @SerializedName("CrmId")
  private String crmId = null;

  @SerializedName("SFParentAccountExternalId")
  private String sfParentAccountExternalId = null;

  @SerializedName("SFLeadId")
  private String sfLeadId = null;

  @SerializedName("SFParentAccountName")
  private String sfParentAccountName = null;

  @SerializedName("MerchantVertical")
  private String merchantVertical = null;

  @SerializedName("SFAccountId")
  private String sfAccountId = null;

  @SerializedName("DeclaredAnnualVolumeUSD")
  private BigDecimal declaredAnnualVolumeUSD = null;

  @SerializedName("DeclaredAOVUSD")
  private BigDecimal declaredAOVUSD = null;

  @SerializedName("LogoImage")
  private byte[] logoImage = null;

  @SerializedName("LogoFileExtension")
  private String logoFileExtension = null;

  @SerializedName("Code")
  private String code = null;

  @SerializedName("SupportEmail")
  private String supportEmail = null;

  @SerializedName("SupportPhone")
  private String supportPhone = null;

  @SerializedName("ParameterGroupId")
  private Long parameterGroupId = null;

  @SerializedName("BusinessUnitId")
  private Long businessUnitId = null;

  @SerializedName("LogoUrl")
  private String logoUrl = null;

  @SerializedName("MerchantLegalName")
  private String merchantLegalName = null;

  @SerializedName("SplititMerchantId")
  private String splititMerchantId = null;

  @SerializedName("WebsiteUrl")
  private String websiteUrl = null;

  @SerializedName("BillingAddressAddressLine")
  private String billingAddressAddressLine = null;

  @SerializedName("BillingAddressAddressLine2")
  private String billingAddressAddressLine2 = null;

  @SerializedName("BillingAddressCity")
  private String billingAddressCity = null;

  @SerializedName("OrgGroup")
  private String orgGroup = null;

  @SerializedName("BillingAddressCountryId")
  private Long billingAddressCountryId = null;

  @SerializedName("BillingAddressStateId")
  private Long billingAddressStateId = null;

  @SerializedName("BillingAddressZip")
  private String billingAddressZip = null;

  @SerializedName("BillingAddressLegacyFullAddressLine")
  private String billingAddressLegacyFullAddressLine = null;

  @SerializedName("VatTaxId")
  private String vatTaxId = null;

  @SerializedName("SalesAccossiateId")
  private Long salesAccossiateId = null;

  @SerializedName("RegisteredCountryOfBusinessCountryId")
  private Long registeredCountryOfBusinessCountryId = null;

  @SerializedName("RegisteredCountryOfBusinessStateId")
  private Long registeredCountryOfBusinessStateId = null;

  @SerializedName("MerchantCountryCountryId")
  private Long merchantCountryCountryId = null;

  @SerializedName("MerchantCountryStateId")
  private Long merchantCountryStateId = null;

  @SerializedName("BankDetailsBankAccountName")
  private String bankDetailsBankAccountName = null;

  @SerializedName("BankDetailsBankRoutingNumber")
  private String bankDetailsBankRoutingNumber = null;

  @SerializedName("BankDetailsBankAccountNumber")
  private String bankDetailsBankAccountNumber = null;

  @SerializedName("ReportsFolderName")
  private String reportsFolderName = null;

  @SerializedName("OnBoardingMethod")
  private OnBoardingMethod onBoardingMethod = null;

  @SerializedName("BusinessUnit")
  private BusinessUnits businessUnit = null;

  @SerializedName("ParameterGroup")
  private ParameterGroups parameterGroup = null;

  @SerializedName("SalesAccossiate")
  private SalesAssociates salesAccossiate = null;

  @SerializedName("ApiUsers")
  private ApiUsers apiUsers = null;

  @SerializedName("Agents")
  private List<Agents> agents = null;

  @SerializedName("InstallmentPlanEventsSubscriptionDatas")
  private List<InstallmentPlanEventsSubscriptionDatas> installmentPlanEventsSubscriptionDatas = null;

  @SerializedName("Terminals")
  private List<Terminals> terminals = null;

  @SerializedName("TouchPointColorValues")
  private List<TouchPointColorValues> touchPointColorValues = null;

  @SerializedName("IsTest")
  private Boolean isTest = null;

  @SerializedName("MarkedForDeletion")
  private Boolean markedForDeletion = null;

  @SerializedName("RegisteredCountryOfBusiness")
  private CountryState registeredCountryOfBusiness = null;

  @SerializedName("MerchantCountry")
  private CountryState merchantCountry = null;

  @SerializedName("Status")
  private MerchantStatus status = null;

  @SerializedName("Vertical")
  private Object vertical = null;

  @SerializedName("BankDetails")
  private BankDetails bankDetails = null;

  @SerializedName("BillingAddress")
  private AddressData2 billingAddress = null;

  @SerializedName("Country")
  private Countries country = null;

  @SerializedName("State")
  private CountrySubdivisions state = null;

  @SerializedName("SplititSigningEntity")
  private SplititEntity splititSigningEntity = null;

  @SerializedName("SplititCurrentEntity")
  private SplititEntity splititCurrentEntity = null;

  public Merchants id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Merchants name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Merchants address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @ApiModelProperty(value = "")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public Merchants email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @ApiModelProperty(value = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public Merchants merchantAdminWebsite(Boolean merchantAdminWebsite) {
    this.merchantAdminWebsite = merchantAdminWebsite;
    return this;
  }

   /**
   * Get merchantAdminWebsite
   * @return merchantAdminWebsite
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isMerchantAdminWebsite() {
    return merchantAdminWebsite;
  }

  public void setMerchantAdminWebsite(Boolean merchantAdminWebsite) {
    this.merchantAdminWebsite = merchantAdminWebsite;
  }

  public Merchants webApi(Boolean webApi) {
    this.webApi = webApi;
    return this;
  }

   /**
   * Get webApi
   * @return webApi
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isWebApi() {
    return webApi;
  }

  public void setWebApi(Boolean webApi) {
    this.webApi = webApi;
  }

  public Merchants embeddedClients(Boolean embeddedClients) {
    this.embeddedClients = embeddedClients;
    return this;
  }

   /**
   * Get embeddedClients
   * @return embeddedClients
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isEmbeddedClients() {
    return embeddedClients;
  }

  public void setEmbeddedClients(Boolean embeddedClients) {
    this.embeddedClients = embeddedClients;
  }

  public Merchants crmId(String crmId) {
    this.crmId = crmId;
    return this;
  }

   /**
   * Get crmId
   * @return crmId
  **/
  @ApiModelProperty(value = "")
  public String getCrmId() {
    return crmId;
  }

  public void setCrmId(String crmId) {
    this.crmId = crmId;
  }

  public Merchants sfParentAccountExternalId(String sfParentAccountExternalId) {
    this.sfParentAccountExternalId = sfParentAccountExternalId;
    return this;
  }

   /**
   * Get sfParentAccountExternalId
   * @return sfParentAccountExternalId
  **/
  @ApiModelProperty(value = "")
  public String getSfParentAccountExternalId() {
    return sfParentAccountExternalId;
  }

  public void setSfParentAccountExternalId(String sfParentAccountExternalId) {
    this.sfParentAccountExternalId = sfParentAccountExternalId;
  }

  public Merchants sfLeadId(String sfLeadId) {
    this.sfLeadId = sfLeadId;
    return this;
  }

   /**
   * Get sfLeadId
   * @return sfLeadId
  **/
  @ApiModelProperty(value = "")
  public String getSfLeadId() {
    return sfLeadId;
  }

  public void setSfLeadId(String sfLeadId) {
    this.sfLeadId = sfLeadId;
  }

  public Merchants sfParentAccountName(String sfParentAccountName) {
    this.sfParentAccountName = sfParentAccountName;
    return this;
  }

   /**
   * Get sfParentAccountName
   * @return sfParentAccountName
  **/
  @ApiModelProperty(value = "")
  public String getSfParentAccountName() {
    return sfParentAccountName;
  }

  public void setSfParentAccountName(String sfParentAccountName) {
    this.sfParentAccountName = sfParentAccountName;
  }

  public Merchants merchantVertical(String merchantVertical) {
    this.merchantVertical = merchantVertical;
    return this;
  }

   /**
   * Get merchantVertical
   * @return merchantVertical
  **/
  @ApiModelProperty(value = "")
  public String getMerchantVertical() {
    return merchantVertical;
  }

  public void setMerchantVertical(String merchantVertical) {
    this.merchantVertical = merchantVertical;
  }

  public Merchants sfAccountId(String sfAccountId) {
    this.sfAccountId = sfAccountId;
    return this;
  }

   /**
   * Get sfAccountId
   * @return sfAccountId
  **/
  @ApiModelProperty(value = "")
  public String getSfAccountId() {
    return sfAccountId;
  }

  public void setSfAccountId(String sfAccountId) {
    this.sfAccountId = sfAccountId;
  }

  public Merchants declaredAnnualVolumeUSD(BigDecimal declaredAnnualVolumeUSD) {
    this.declaredAnnualVolumeUSD = declaredAnnualVolumeUSD;
    return this;
  }

   /**
   * Get declaredAnnualVolumeUSD
   * @return declaredAnnualVolumeUSD
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getDeclaredAnnualVolumeUSD() {
    return declaredAnnualVolumeUSD;
  }

  public void setDeclaredAnnualVolumeUSD(BigDecimal declaredAnnualVolumeUSD) {
    this.declaredAnnualVolumeUSD = declaredAnnualVolumeUSD;
  }

  public Merchants declaredAOVUSD(BigDecimal declaredAOVUSD) {
    this.declaredAOVUSD = declaredAOVUSD;
    return this;
  }

   /**
   * Get declaredAOVUSD
   * @return declaredAOVUSD
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getDeclaredAOVUSD() {
    return declaredAOVUSD;
  }

  public void setDeclaredAOVUSD(BigDecimal declaredAOVUSD) {
    this.declaredAOVUSD = declaredAOVUSD;
  }

  public Merchants logoImage(byte[] logoImage) {
    this.logoImage = logoImage;
    return this;
  }

   /**
   * Get logoImage
   * @return logoImage
  **/
  @ApiModelProperty(value = "")
  public byte[] getLogoImage() {
    return logoImage;
  }

  public void setLogoImage(byte[] logoImage) {
    this.logoImage = logoImage;
  }

  public Merchants logoFileExtension(String logoFileExtension) {
    this.logoFileExtension = logoFileExtension;
    return this;
  }

   /**
   * Get logoFileExtension
   * @return logoFileExtension
  **/
  @ApiModelProperty(value = "")
  public String getLogoFileExtension() {
    return logoFileExtension;
  }

  public void setLogoFileExtension(String logoFileExtension) {
    this.logoFileExtension = logoFileExtension;
  }

  public Merchants code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @ApiModelProperty(value = "")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Merchants supportEmail(String supportEmail) {
    this.supportEmail = supportEmail;
    return this;
  }

   /**
   * Get supportEmail
   * @return supportEmail
  **/
  @ApiModelProperty(value = "")
  public String getSupportEmail() {
    return supportEmail;
  }

  public void setSupportEmail(String supportEmail) {
    this.supportEmail = supportEmail;
  }

  public Merchants supportPhone(String supportPhone) {
    this.supportPhone = supportPhone;
    return this;
  }

   /**
   * Get supportPhone
   * @return supportPhone
  **/
  @ApiModelProperty(value = "")
  public String getSupportPhone() {
    return supportPhone;
  }

  public void setSupportPhone(String supportPhone) {
    this.supportPhone = supportPhone;
  }

  public Merchants parameterGroupId(Long parameterGroupId) {
    this.parameterGroupId = parameterGroupId;
    return this;
  }

   /**
   * Get parameterGroupId
   * @return parameterGroupId
  **/
  @ApiModelProperty(value = "")
  public Long getParameterGroupId() {
    return parameterGroupId;
  }

  public void setParameterGroupId(Long parameterGroupId) {
    this.parameterGroupId = parameterGroupId;
  }

  public Merchants businessUnitId(Long businessUnitId) {
    this.businessUnitId = businessUnitId;
    return this;
  }

   /**
   * Get businessUnitId
   * @return businessUnitId
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getBusinessUnitId() {
    return businessUnitId;
  }

  public void setBusinessUnitId(Long businessUnitId) {
    this.businessUnitId = businessUnitId;
  }

  public Merchants logoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
    return this;
  }

   /**
   * Get logoUrl
   * @return logoUrl
  **/
  @ApiModelProperty(value = "")
  public String getLogoUrl() {
    return logoUrl;
  }

  public void setLogoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
  }

  public Merchants merchantLegalName(String merchantLegalName) {
    this.merchantLegalName = merchantLegalName;
    return this;
  }

   /**
   * Get merchantLegalName
   * @return merchantLegalName
  **/
  @ApiModelProperty(value = "")
  public String getMerchantLegalName() {
    return merchantLegalName;
  }

  public void setMerchantLegalName(String merchantLegalName) {
    this.merchantLegalName = merchantLegalName;
  }

  public Merchants splititMerchantId(String splititMerchantId) {
    this.splititMerchantId = splititMerchantId;
    return this;
  }

   /**
   * Get splititMerchantId
   * @return splititMerchantId
  **/
  @ApiModelProperty(value = "")
  public String getSplititMerchantId() {
    return splititMerchantId;
  }

  public void setSplititMerchantId(String splititMerchantId) {
    this.splititMerchantId = splititMerchantId;
  }

  public Merchants websiteUrl(String websiteUrl) {
    this.websiteUrl = websiteUrl;
    return this;
  }

   /**
   * Get websiteUrl
   * @return websiteUrl
  **/
  @ApiModelProperty(value = "")
  public String getWebsiteUrl() {
    return websiteUrl;
  }

  public void setWebsiteUrl(String websiteUrl) {
    this.websiteUrl = websiteUrl;
  }

  public Merchants billingAddressAddressLine(String billingAddressAddressLine) {
    this.billingAddressAddressLine = billingAddressAddressLine;
    return this;
  }

   /**
   * Get billingAddressAddressLine
   * @return billingAddressAddressLine
  **/
  @ApiModelProperty(value = "")
  public String getBillingAddressAddressLine() {
    return billingAddressAddressLine;
  }

  public void setBillingAddressAddressLine(String billingAddressAddressLine) {
    this.billingAddressAddressLine = billingAddressAddressLine;
  }

  public Merchants billingAddressAddressLine2(String billingAddressAddressLine2) {
    this.billingAddressAddressLine2 = billingAddressAddressLine2;
    return this;
  }

   /**
   * Get billingAddressAddressLine2
   * @return billingAddressAddressLine2
  **/
  @ApiModelProperty(value = "")
  public String getBillingAddressAddressLine2() {
    return billingAddressAddressLine2;
  }

  public void setBillingAddressAddressLine2(String billingAddressAddressLine2) {
    this.billingAddressAddressLine2 = billingAddressAddressLine2;
  }

  public Merchants billingAddressCity(String billingAddressCity) {
    this.billingAddressCity = billingAddressCity;
    return this;
  }

   /**
   * Get billingAddressCity
   * @return billingAddressCity
  **/
  @ApiModelProperty(value = "")
  public String getBillingAddressCity() {
    return billingAddressCity;
  }

  public void setBillingAddressCity(String billingAddressCity) {
    this.billingAddressCity = billingAddressCity;
  }

  public Merchants orgGroup(String orgGroup) {
    this.orgGroup = orgGroup;
    return this;
  }

   /**
   * Get orgGroup
   * @return orgGroup
  **/
  @ApiModelProperty(value = "")
  public String getOrgGroup() {
    return orgGroup;
  }

  public void setOrgGroup(String orgGroup) {
    this.orgGroup = orgGroup;
  }

  public Merchants billingAddressCountryId(Long billingAddressCountryId) {
    this.billingAddressCountryId = billingAddressCountryId;
    return this;
  }

   /**
   * Get billingAddressCountryId
   * @return billingAddressCountryId
  **/
  @ApiModelProperty(value = "")
  public Long getBillingAddressCountryId() {
    return billingAddressCountryId;
  }

  public void setBillingAddressCountryId(Long billingAddressCountryId) {
    this.billingAddressCountryId = billingAddressCountryId;
  }

  public Merchants billingAddressStateId(Long billingAddressStateId) {
    this.billingAddressStateId = billingAddressStateId;
    return this;
  }

   /**
   * Get billingAddressStateId
   * @return billingAddressStateId
  **/
  @ApiModelProperty(value = "")
  public Long getBillingAddressStateId() {
    return billingAddressStateId;
  }

  public void setBillingAddressStateId(Long billingAddressStateId) {
    this.billingAddressStateId = billingAddressStateId;
  }

  public Merchants billingAddressZip(String billingAddressZip) {
    this.billingAddressZip = billingAddressZip;
    return this;
  }

   /**
   * Get billingAddressZip
   * @return billingAddressZip
  **/
  @ApiModelProperty(value = "")
  public String getBillingAddressZip() {
    return billingAddressZip;
  }

  public void setBillingAddressZip(String billingAddressZip) {
    this.billingAddressZip = billingAddressZip;
  }

  public Merchants billingAddressLegacyFullAddressLine(String billingAddressLegacyFullAddressLine) {
    this.billingAddressLegacyFullAddressLine = billingAddressLegacyFullAddressLine;
    return this;
  }

   /**
   * Get billingAddressLegacyFullAddressLine
   * @return billingAddressLegacyFullAddressLine
  **/
  @ApiModelProperty(value = "")
  public String getBillingAddressLegacyFullAddressLine() {
    return billingAddressLegacyFullAddressLine;
  }

  public void setBillingAddressLegacyFullAddressLine(String billingAddressLegacyFullAddressLine) {
    this.billingAddressLegacyFullAddressLine = billingAddressLegacyFullAddressLine;
  }

  public Merchants vatTaxId(String vatTaxId) {
    this.vatTaxId = vatTaxId;
    return this;
  }

   /**
   * Get vatTaxId
   * @return vatTaxId
  **/
  @ApiModelProperty(value = "")
  public String getVatTaxId() {
    return vatTaxId;
  }

  public void setVatTaxId(String vatTaxId) {
    this.vatTaxId = vatTaxId;
  }

  public Merchants salesAccossiateId(Long salesAccossiateId) {
    this.salesAccossiateId = salesAccossiateId;
    return this;
  }

   /**
   * Get salesAccossiateId
   * @return salesAccossiateId
  **/
  @ApiModelProperty(value = "")
  public Long getSalesAccossiateId() {
    return salesAccossiateId;
  }

  public void setSalesAccossiateId(Long salesAccossiateId) {
    this.salesAccossiateId = salesAccossiateId;
  }

  public Merchants registeredCountryOfBusinessCountryId(Long registeredCountryOfBusinessCountryId) {
    this.registeredCountryOfBusinessCountryId = registeredCountryOfBusinessCountryId;
    return this;
  }

   /**
   * Get registeredCountryOfBusinessCountryId
   * @return registeredCountryOfBusinessCountryId
  **/
  @ApiModelProperty(value = "")
  public Long getRegisteredCountryOfBusinessCountryId() {
    return registeredCountryOfBusinessCountryId;
  }

  public void setRegisteredCountryOfBusinessCountryId(Long registeredCountryOfBusinessCountryId) {
    this.registeredCountryOfBusinessCountryId = registeredCountryOfBusinessCountryId;
  }

  public Merchants registeredCountryOfBusinessStateId(Long registeredCountryOfBusinessStateId) {
    this.registeredCountryOfBusinessStateId = registeredCountryOfBusinessStateId;
    return this;
  }

   /**
   * Get registeredCountryOfBusinessStateId
   * @return registeredCountryOfBusinessStateId
  **/
  @ApiModelProperty(value = "")
  public Long getRegisteredCountryOfBusinessStateId() {
    return registeredCountryOfBusinessStateId;
  }

  public void setRegisteredCountryOfBusinessStateId(Long registeredCountryOfBusinessStateId) {
    this.registeredCountryOfBusinessStateId = registeredCountryOfBusinessStateId;
  }

  public Merchants merchantCountryCountryId(Long merchantCountryCountryId) {
    this.merchantCountryCountryId = merchantCountryCountryId;
    return this;
  }

   /**
   * Get merchantCountryCountryId
   * @return merchantCountryCountryId
  **/
  @ApiModelProperty(value = "")
  public Long getMerchantCountryCountryId() {
    return merchantCountryCountryId;
  }

  public void setMerchantCountryCountryId(Long merchantCountryCountryId) {
    this.merchantCountryCountryId = merchantCountryCountryId;
  }

  public Merchants merchantCountryStateId(Long merchantCountryStateId) {
    this.merchantCountryStateId = merchantCountryStateId;
    return this;
  }

   /**
   * Get merchantCountryStateId
   * @return merchantCountryStateId
  **/
  @ApiModelProperty(value = "")
  public Long getMerchantCountryStateId() {
    return merchantCountryStateId;
  }

  public void setMerchantCountryStateId(Long merchantCountryStateId) {
    this.merchantCountryStateId = merchantCountryStateId;
  }

  public Merchants bankDetailsBankAccountName(String bankDetailsBankAccountName) {
    this.bankDetailsBankAccountName = bankDetailsBankAccountName;
    return this;
  }

   /**
   * Get bankDetailsBankAccountName
   * @return bankDetailsBankAccountName
  **/
  @ApiModelProperty(value = "")
  public String getBankDetailsBankAccountName() {
    return bankDetailsBankAccountName;
  }

  public void setBankDetailsBankAccountName(String bankDetailsBankAccountName) {
    this.bankDetailsBankAccountName = bankDetailsBankAccountName;
  }

  public Merchants bankDetailsBankRoutingNumber(String bankDetailsBankRoutingNumber) {
    this.bankDetailsBankRoutingNumber = bankDetailsBankRoutingNumber;
    return this;
  }

   /**
   * Get bankDetailsBankRoutingNumber
   * @return bankDetailsBankRoutingNumber
  **/
  @ApiModelProperty(value = "")
  public String getBankDetailsBankRoutingNumber() {
    return bankDetailsBankRoutingNumber;
  }

  public void setBankDetailsBankRoutingNumber(String bankDetailsBankRoutingNumber) {
    this.bankDetailsBankRoutingNumber = bankDetailsBankRoutingNumber;
  }

  public Merchants bankDetailsBankAccountNumber(String bankDetailsBankAccountNumber) {
    this.bankDetailsBankAccountNumber = bankDetailsBankAccountNumber;
    return this;
  }

   /**
   * Get bankDetailsBankAccountNumber
   * @return bankDetailsBankAccountNumber
  **/
  @ApiModelProperty(value = "")
  public String getBankDetailsBankAccountNumber() {
    return bankDetailsBankAccountNumber;
  }

  public void setBankDetailsBankAccountNumber(String bankDetailsBankAccountNumber) {
    this.bankDetailsBankAccountNumber = bankDetailsBankAccountNumber;
  }

  public Merchants reportsFolderName(String reportsFolderName) {
    this.reportsFolderName = reportsFolderName;
    return this;
  }

   /**
   * Get reportsFolderName
   * @return reportsFolderName
  **/
  @ApiModelProperty(value = "")
  public String getReportsFolderName() {
    return reportsFolderName;
  }

  public void setReportsFolderName(String reportsFolderName) {
    this.reportsFolderName = reportsFolderName;
  }

  public Merchants onBoardingMethod(OnBoardingMethod onBoardingMethod) {
    this.onBoardingMethod = onBoardingMethod;
    return this;
  }

   /**
   * Get onBoardingMethod
   * @return onBoardingMethod
  **/
  @ApiModelProperty(required = true, value = "")
  public OnBoardingMethod getOnBoardingMethod() {
    return onBoardingMethod;
  }

  public void setOnBoardingMethod(OnBoardingMethod onBoardingMethod) {
    this.onBoardingMethod = onBoardingMethod;
  }

  public Merchants businessUnit(BusinessUnits businessUnit) {
    this.businessUnit = businessUnit;
    return this;
  }

   /**
   * Get businessUnit
   * @return businessUnit
  **/
  @ApiModelProperty(value = "")
  public BusinessUnits getBusinessUnit() {
    return businessUnit;
  }

  public void setBusinessUnit(BusinessUnits businessUnit) {
    this.businessUnit = businessUnit;
  }

  public Merchants parameterGroup(ParameterGroups parameterGroup) {
    this.parameterGroup = parameterGroup;
    return this;
  }

   /**
   * Get parameterGroup
   * @return parameterGroup
  **/
  @ApiModelProperty(value = "")
  public ParameterGroups getParameterGroup() {
    return parameterGroup;
  }

  public void setParameterGroup(ParameterGroups parameterGroup) {
    this.parameterGroup = parameterGroup;
  }

  public Merchants salesAccossiate(SalesAssociates salesAccossiate) {
    this.salesAccossiate = salesAccossiate;
    return this;
  }

   /**
   * Get salesAccossiate
   * @return salesAccossiate
  **/
  @ApiModelProperty(value = "")
  public SalesAssociates getSalesAccossiate() {
    return salesAccossiate;
  }

  public void setSalesAccossiate(SalesAssociates salesAccossiate) {
    this.salesAccossiate = salesAccossiate;
  }

  public Merchants apiUsers(ApiUsers apiUsers) {
    this.apiUsers = apiUsers;
    return this;
  }

   /**
   * Get apiUsers
   * @return apiUsers
  **/
  @ApiModelProperty(value = "")
  public ApiUsers getApiUsers() {
    return apiUsers;
  }

  public void setApiUsers(ApiUsers apiUsers) {
    this.apiUsers = apiUsers;
  }

  public Merchants agents(List<Agents> agents) {
    this.agents = agents;
    return this;
  }

  public Merchants addAgentsItem(Agents agentsItem) {
    if (this.agents == null) {
      this.agents = new ArrayList<Agents>();
    }
    this.agents.add(agentsItem);
    return this;
  }

   /**
   * Get agents
   * @return agents
  **/
  @ApiModelProperty(value = "")
  public List<Agents> getAgents() {
    return agents;
  }

  public void setAgents(List<Agents> agents) {
    this.agents = agents;
  }

  public Merchants installmentPlanEventsSubscriptionDatas(List<InstallmentPlanEventsSubscriptionDatas> installmentPlanEventsSubscriptionDatas) {
    this.installmentPlanEventsSubscriptionDatas = installmentPlanEventsSubscriptionDatas;
    return this;
  }

  public Merchants addInstallmentPlanEventsSubscriptionDatasItem(InstallmentPlanEventsSubscriptionDatas installmentPlanEventsSubscriptionDatasItem) {
    if (this.installmentPlanEventsSubscriptionDatas == null) {
      this.installmentPlanEventsSubscriptionDatas = new ArrayList<InstallmentPlanEventsSubscriptionDatas>();
    }
    this.installmentPlanEventsSubscriptionDatas.add(installmentPlanEventsSubscriptionDatasItem);
    return this;
  }

   /**
   * Get installmentPlanEventsSubscriptionDatas
   * @return installmentPlanEventsSubscriptionDatas
  **/
  @ApiModelProperty(value = "")
  public List<InstallmentPlanEventsSubscriptionDatas> getInstallmentPlanEventsSubscriptionDatas() {
    return installmentPlanEventsSubscriptionDatas;
  }

  public void setInstallmentPlanEventsSubscriptionDatas(List<InstallmentPlanEventsSubscriptionDatas> installmentPlanEventsSubscriptionDatas) {
    this.installmentPlanEventsSubscriptionDatas = installmentPlanEventsSubscriptionDatas;
  }

  public Merchants terminals(List<Terminals> terminals) {
    this.terminals = terminals;
    return this;
  }

  public Merchants addTerminalsItem(Terminals terminalsItem) {
    if (this.terminals == null) {
      this.terminals = new ArrayList<Terminals>();
    }
    this.terminals.add(terminalsItem);
    return this;
  }

   /**
   * Get terminals
   * @return terminals
  **/
  @ApiModelProperty(value = "")
  public List<Terminals> getTerminals() {
    return terminals;
  }

  public void setTerminals(List<Terminals> terminals) {
    this.terminals = terminals;
  }

  public Merchants touchPointColorValues(List<TouchPointColorValues> touchPointColorValues) {
    this.touchPointColorValues = touchPointColorValues;
    return this;
  }

  public Merchants addTouchPointColorValuesItem(TouchPointColorValues touchPointColorValuesItem) {
    if (this.touchPointColorValues == null) {
      this.touchPointColorValues = new ArrayList<TouchPointColorValues>();
    }
    this.touchPointColorValues.add(touchPointColorValuesItem);
    return this;
  }

   /**
   * Get touchPointColorValues
   * @return touchPointColorValues
  **/
  @ApiModelProperty(value = "")
  public List<TouchPointColorValues> getTouchPointColorValues() {
    return touchPointColorValues;
  }

  public void setTouchPointColorValues(List<TouchPointColorValues> touchPointColorValues) {
    this.touchPointColorValues = touchPointColorValues;
  }

  public Merchants isTest(Boolean isTest) {
    this.isTest = isTest;
    return this;
  }

   /**
   * Get isTest
   * @return isTest
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isIsTest() {
    return isTest;
  }

  public void setIsTest(Boolean isTest) {
    this.isTest = isTest;
  }

  public Merchants markedForDeletion(Boolean markedForDeletion) {
    this.markedForDeletion = markedForDeletion;
    return this;
  }

   /**
   * Get markedForDeletion
   * @return markedForDeletion
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isMarkedForDeletion() {
    return markedForDeletion;
  }

  public void setMarkedForDeletion(Boolean markedForDeletion) {
    this.markedForDeletion = markedForDeletion;
  }

  public Merchants registeredCountryOfBusiness(CountryState registeredCountryOfBusiness) {
    this.registeredCountryOfBusiness = registeredCountryOfBusiness;
    return this;
  }

   /**
   * Get registeredCountryOfBusiness
   * @return registeredCountryOfBusiness
  **/
  @ApiModelProperty(value = "")
  public CountryState getRegisteredCountryOfBusiness() {
    return registeredCountryOfBusiness;
  }

  public void setRegisteredCountryOfBusiness(CountryState registeredCountryOfBusiness) {
    this.registeredCountryOfBusiness = registeredCountryOfBusiness;
  }

  public Merchants merchantCountry(CountryState merchantCountry) {
    this.merchantCountry = merchantCountry;
    return this;
  }

   /**
   * Get merchantCountry
   * @return merchantCountry
  **/
  @ApiModelProperty(value = "")
  public CountryState getMerchantCountry() {
    return merchantCountry;
  }

  public void setMerchantCountry(CountryState merchantCountry) {
    this.merchantCountry = merchantCountry;
  }

  public Merchants status(MerchantStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(required = true, value = "")
  public MerchantStatus getStatus() {
    return status;
  }

  public void setStatus(MerchantStatus status) {
    this.status = status;
  }

  public Merchants vertical(Object vertical) {
    this.vertical = vertical;
    return this;
  }

   /**
   * Get vertical
   * @return vertical
  **/
  @ApiModelProperty(required = true, value = "")
  public Object getVertical() {
    return vertical;
  }

  public void setVertical(Object vertical) {
    this.vertical = vertical;
  }

  public Merchants bankDetails(BankDetails bankDetails) {
    this.bankDetails = bankDetails;
    return this;
  }

   /**
   * Get bankDetails
   * @return bankDetails
  **/
  @ApiModelProperty(value = "")
  public BankDetails getBankDetails() {
    return bankDetails;
  }

  public void setBankDetails(BankDetails bankDetails) {
    this.bankDetails = bankDetails;
  }

  public Merchants billingAddress(AddressData2 billingAddress) {
    this.billingAddress = billingAddress;
    return this;
  }

   /**
   * Get billingAddress
   * @return billingAddress
  **/
  @ApiModelProperty(value = "")
  public AddressData2 getBillingAddress() {
    return billingAddress;
  }

  public void setBillingAddress(AddressData2 billingAddress) {
    this.billingAddress = billingAddress;
  }

  public Merchants country(Countries country) {
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @ApiModelProperty(value = "")
  public Countries getCountry() {
    return country;
  }

  public void setCountry(Countries country) {
    this.country = country;
  }

  public Merchants state(CountrySubdivisions state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(value = "")
  public CountrySubdivisions getState() {
    return state;
  }

  public void setState(CountrySubdivisions state) {
    this.state = state;
  }

  public Merchants splititSigningEntity(SplititEntity splititSigningEntity) {
    this.splititSigningEntity = splititSigningEntity;
    return this;
  }

   /**
   * Get splititSigningEntity
   * @return splititSigningEntity
  **/
  @ApiModelProperty(required = true, value = "")
  public SplititEntity getSplititSigningEntity() {
    return splititSigningEntity;
  }

  public void setSplititSigningEntity(SplititEntity splititSigningEntity) {
    this.splititSigningEntity = splititSigningEntity;
  }

  public Merchants splititCurrentEntity(SplititEntity splititCurrentEntity) {
    this.splititCurrentEntity = splititCurrentEntity;
    return this;
  }

   /**
   * Get splititCurrentEntity
   * @return splititCurrentEntity
  **/
  @ApiModelProperty(required = true, value = "")
  public SplititEntity getSplititCurrentEntity() {
    return splititCurrentEntity;
  }

  public void setSplititCurrentEntity(SplititEntity splititCurrentEntity) {
    this.splititCurrentEntity = splititCurrentEntity;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Merchants merchants = (Merchants) o;
    return Objects.equals(this.id, merchants.id) &&
        Objects.equals(this.name, merchants.name) &&
        Objects.equals(this.address, merchants.address) &&
        Objects.equals(this.email, merchants.email) &&
        Objects.equals(this.merchantAdminWebsite, merchants.merchantAdminWebsite) &&
        Objects.equals(this.webApi, merchants.webApi) &&
        Objects.equals(this.embeddedClients, merchants.embeddedClients) &&
        Objects.equals(this.crmId, merchants.crmId) &&
        Objects.equals(this.sfParentAccountExternalId, merchants.sfParentAccountExternalId) &&
        Objects.equals(this.sfLeadId, merchants.sfLeadId) &&
        Objects.equals(this.sfParentAccountName, merchants.sfParentAccountName) &&
        Objects.equals(this.merchantVertical, merchants.merchantVertical) &&
        Objects.equals(this.sfAccountId, merchants.sfAccountId) &&
        Objects.equals(this.declaredAnnualVolumeUSD, merchants.declaredAnnualVolumeUSD) &&
        Objects.equals(this.declaredAOVUSD, merchants.declaredAOVUSD) &&
        Arrays.equals(this.logoImage, merchants.logoImage) &&
        Objects.equals(this.logoFileExtension, merchants.logoFileExtension) &&
        Objects.equals(this.code, merchants.code) &&
        Objects.equals(this.supportEmail, merchants.supportEmail) &&
        Objects.equals(this.supportPhone, merchants.supportPhone) &&
        Objects.equals(this.parameterGroupId, merchants.parameterGroupId) &&
        Objects.equals(this.businessUnitId, merchants.businessUnitId) &&
        Objects.equals(this.logoUrl, merchants.logoUrl) &&
        Objects.equals(this.merchantLegalName, merchants.merchantLegalName) &&
        Objects.equals(this.splititMerchantId, merchants.splititMerchantId) &&
        Objects.equals(this.websiteUrl, merchants.websiteUrl) &&
        Objects.equals(this.billingAddressAddressLine, merchants.billingAddressAddressLine) &&
        Objects.equals(this.billingAddressAddressLine2, merchants.billingAddressAddressLine2) &&
        Objects.equals(this.billingAddressCity, merchants.billingAddressCity) &&
        Objects.equals(this.orgGroup, merchants.orgGroup) &&
        Objects.equals(this.billingAddressCountryId, merchants.billingAddressCountryId) &&
        Objects.equals(this.billingAddressStateId, merchants.billingAddressStateId) &&
        Objects.equals(this.billingAddressZip, merchants.billingAddressZip) &&
        Objects.equals(this.billingAddressLegacyFullAddressLine, merchants.billingAddressLegacyFullAddressLine) &&
        Objects.equals(this.vatTaxId, merchants.vatTaxId) &&
        Objects.equals(this.salesAccossiateId, merchants.salesAccossiateId) &&
        Objects.equals(this.registeredCountryOfBusinessCountryId, merchants.registeredCountryOfBusinessCountryId) &&
        Objects.equals(this.registeredCountryOfBusinessStateId, merchants.registeredCountryOfBusinessStateId) &&
        Objects.equals(this.merchantCountryCountryId, merchants.merchantCountryCountryId) &&
        Objects.equals(this.merchantCountryStateId, merchants.merchantCountryStateId) &&
        Objects.equals(this.bankDetailsBankAccountName, merchants.bankDetailsBankAccountName) &&
        Objects.equals(this.bankDetailsBankRoutingNumber, merchants.bankDetailsBankRoutingNumber) &&
        Objects.equals(this.bankDetailsBankAccountNumber, merchants.bankDetailsBankAccountNumber) &&
        Objects.equals(this.reportsFolderName, merchants.reportsFolderName) &&
        Objects.equals(this.onBoardingMethod, merchants.onBoardingMethod) &&
        Objects.equals(this.businessUnit, merchants.businessUnit) &&
        Objects.equals(this.parameterGroup, merchants.parameterGroup) &&
        Objects.equals(this.salesAccossiate, merchants.salesAccossiate) &&
        Objects.equals(this.apiUsers, merchants.apiUsers) &&
        Objects.equals(this.agents, merchants.agents) &&
        Objects.equals(this.installmentPlanEventsSubscriptionDatas, merchants.installmentPlanEventsSubscriptionDatas) &&
        Objects.equals(this.terminals, merchants.terminals) &&
        Objects.equals(this.touchPointColorValues, merchants.touchPointColorValues) &&
        Objects.equals(this.isTest, merchants.isTest) &&
        Objects.equals(this.markedForDeletion, merchants.markedForDeletion) &&
        Objects.equals(this.registeredCountryOfBusiness, merchants.registeredCountryOfBusiness) &&
        Objects.equals(this.merchantCountry, merchants.merchantCountry) &&
        Objects.equals(this.status, merchants.status) &&
        Objects.equals(this.vertical, merchants.vertical) &&
        Objects.equals(this.bankDetails, merchants.bankDetails) &&
        Objects.equals(this.billingAddress, merchants.billingAddress) &&
        Objects.equals(this.country, merchants.country) &&
        Objects.equals(this.state, merchants.state) &&
        Objects.equals(this.splititSigningEntity, merchants.splititSigningEntity) &&
        Objects.equals(this.splititCurrentEntity, merchants.splititCurrentEntity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, address, email, merchantAdminWebsite, webApi, embeddedClients, crmId, sfParentAccountExternalId, sfLeadId, sfParentAccountName, merchantVertical, sfAccountId, declaredAnnualVolumeUSD, declaredAOVUSD, Arrays.hashCode(logoImage), logoFileExtension, code, supportEmail, supportPhone, parameterGroupId, businessUnitId, logoUrl, merchantLegalName, splititMerchantId, websiteUrl, billingAddressAddressLine, billingAddressAddressLine2, billingAddressCity, orgGroup, billingAddressCountryId, billingAddressStateId, billingAddressZip, billingAddressLegacyFullAddressLine, vatTaxId, salesAccossiateId, registeredCountryOfBusinessCountryId, registeredCountryOfBusinessStateId, merchantCountryCountryId, merchantCountryStateId, bankDetailsBankAccountName, bankDetailsBankRoutingNumber, bankDetailsBankAccountNumber, reportsFolderName, onBoardingMethod, businessUnit, parameterGroup, salesAccossiate, apiUsers, agents, installmentPlanEventsSubscriptionDatas, terminals, touchPointColorValues, isTest, markedForDeletion, registeredCountryOfBusiness, merchantCountry, status, vertical, bankDetails, billingAddress, country, state, splititSigningEntity, splititCurrentEntity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Merchants {\n");
    
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    merchantAdminWebsite: ").append(toIndentedString(merchantAdminWebsite)).append("\n");
    sb.append("    webApi: ").append(toIndentedString(webApi)).append("\n");
    sb.append("    embeddedClients: ").append(toIndentedString(embeddedClients)).append("\n");
    sb.append("    crmId: ").append(toIndentedString(crmId)).append("\n");
    sb.append("    sfParentAccountExternalId: ").append(toIndentedString(sfParentAccountExternalId)).append("\n");
    sb.append("    sfLeadId: ").append(toIndentedString(sfLeadId)).append("\n");
    sb.append("    sfParentAccountName: ").append(toIndentedString(sfParentAccountName)).append("\n");
    sb.append("    merchantVertical: ").append(toIndentedString(merchantVertical)).append("\n");
    sb.append("    sfAccountId: ").append(toIndentedString(sfAccountId)).append("\n");
    sb.append("    declaredAnnualVolumeUSD: ").append(toIndentedString(declaredAnnualVolumeUSD)).append("\n");
    sb.append("    declaredAOVUSD: ").append(toIndentedString(declaredAOVUSD)).append("\n");
    sb.append("    logoImage: ").append(toIndentedString(logoImage)).append("\n");
    sb.append("    logoFileExtension: ").append(toIndentedString(logoFileExtension)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    supportEmail: ").append(toIndentedString(supportEmail)).append("\n");
    sb.append("    supportPhone: ").append(toIndentedString(supportPhone)).append("\n");
    sb.append("    parameterGroupId: ").append(toIndentedString(parameterGroupId)).append("\n");
    sb.append("    businessUnitId: ").append(toIndentedString(businessUnitId)).append("\n");
    sb.append("    logoUrl: ").append(toIndentedString(logoUrl)).append("\n");
    sb.append("    merchantLegalName: ").append(toIndentedString(merchantLegalName)).append("\n");
    sb.append("    splititMerchantId: ").append(toIndentedString(splititMerchantId)).append("\n");
    sb.append("    websiteUrl: ").append(toIndentedString(websiteUrl)).append("\n");
    sb.append("    billingAddressAddressLine: ").append(toIndentedString(billingAddressAddressLine)).append("\n");
    sb.append("    billingAddressAddressLine2: ").append(toIndentedString(billingAddressAddressLine2)).append("\n");
    sb.append("    billingAddressCity: ").append(toIndentedString(billingAddressCity)).append("\n");
    sb.append("    orgGroup: ").append(toIndentedString(orgGroup)).append("\n");
    sb.append("    billingAddressCountryId: ").append(toIndentedString(billingAddressCountryId)).append("\n");
    sb.append("    billingAddressStateId: ").append(toIndentedString(billingAddressStateId)).append("\n");
    sb.append("    billingAddressZip: ").append(toIndentedString(billingAddressZip)).append("\n");
    sb.append("    billingAddressLegacyFullAddressLine: ").append(toIndentedString(billingAddressLegacyFullAddressLine)).append("\n");
    sb.append("    vatTaxId: ").append(toIndentedString(vatTaxId)).append("\n");
    sb.append("    salesAccossiateId: ").append(toIndentedString(salesAccossiateId)).append("\n");
    sb.append("    registeredCountryOfBusinessCountryId: ").append(toIndentedString(registeredCountryOfBusinessCountryId)).append("\n");
    sb.append("    registeredCountryOfBusinessStateId: ").append(toIndentedString(registeredCountryOfBusinessStateId)).append("\n");
    sb.append("    merchantCountryCountryId: ").append(toIndentedString(merchantCountryCountryId)).append("\n");
    sb.append("    merchantCountryStateId: ").append(toIndentedString(merchantCountryStateId)).append("\n");
    sb.append("    bankDetailsBankAccountName: ").append(toIndentedString(bankDetailsBankAccountName)).append("\n");
    sb.append("    bankDetailsBankRoutingNumber: ").append(toIndentedString(bankDetailsBankRoutingNumber)).append("\n");
    sb.append("    bankDetailsBankAccountNumber: ").append(toIndentedString(bankDetailsBankAccountNumber)).append("\n");
    sb.append("    reportsFolderName: ").append(toIndentedString(reportsFolderName)).append("\n");
    sb.append("    onBoardingMethod: ").append(toIndentedString(onBoardingMethod)).append("\n");
    sb.append("    businessUnit: ").append(toIndentedString(businessUnit)).append("\n");
    sb.append("    parameterGroup: ").append(toIndentedString(parameterGroup)).append("\n");
    sb.append("    salesAccossiate: ").append(toIndentedString(salesAccossiate)).append("\n");
    sb.append("    apiUsers: ").append(toIndentedString(apiUsers)).append("\n");
    sb.append("    agents: ").append(toIndentedString(agents)).append("\n");
    sb.append("    installmentPlanEventsSubscriptionDatas: ").append(toIndentedString(installmentPlanEventsSubscriptionDatas)).append("\n");
    sb.append("    terminals: ").append(toIndentedString(terminals)).append("\n");
    sb.append("    touchPointColorValues: ").append(toIndentedString(touchPointColorValues)).append("\n");
    sb.append("    isTest: ").append(toIndentedString(isTest)).append("\n");
    sb.append("    markedForDeletion: ").append(toIndentedString(markedForDeletion)).append("\n");
    sb.append("    registeredCountryOfBusiness: ").append(toIndentedString(registeredCountryOfBusiness)).append("\n");
    sb.append("    merchantCountry: ").append(toIndentedString(merchantCountry)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    vertical: ").append(toIndentedString(vertical)).append("\n");
    sb.append("    bankDetails: ").append(toIndentedString(bankDetails)).append("\n");
    sb.append("    billingAddress: ").append(toIndentedString(billingAddress)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    splititSigningEntity: ").append(toIndentedString(splititSigningEntity)).append("\n");
    sb.append("    splititCurrentEntity: ").append(toIndentedString(splititCurrentEntity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

