/*
 * splitit-web-api-public-sdk
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.splitit.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.splitit.sdk.model.BusinessParty;
import com.splitit.sdk.model.ConfigKeys;
import com.splitit.sdk.model.EntityBase;
import com.splitit.sdk.model.VersionedTouchPoints;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * TouchPoints
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-05-31T11:14:42.224Z")
public class TouchPoints  {
  @SerializedName("Id")
  private Long id = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Code")
  private String code = null;

  @SerializedName("DefaultColorValuesId")
  private Long defaultColorValuesId = null;

  @SerializedName("LogoSupported")
  private Boolean logoSupported = null;

  @SerializedName("Owner")
  private String owner = null;

  @SerializedName("Url")
  private String url = null;

  @SerializedName("BusinessParty")
  private BusinessParty businessParty = null;

  @SerializedName("ConfigKeys")
  private List<ConfigKeys> configKeys = null;

  @SerializedName("VersionedTouchPoints")
  private List<VersionedTouchPoints> versionedTouchPoints = null;

  public TouchPoints id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public TouchPoints name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TouchPoints code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @ApiModelProperty(value = "")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public TouchPoints defaultColorValuesId(Long defaultColorValuesId) {
    this.defaultColorValuesId = defaultColorValuesId;
    return this;
  }

   /**
   * Get defaultColorValuesId
   * @return defaultColorValuesId
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getDefaultColorValuesId() {
    return defaultColorValuesId;
  }

  public void setDefaultColorValuesId(Long defaultColorValuesId) {
    this.defaultColorValuesId = defaultColorValuesId;
  }

  public TouchPoints logoSupported(Boolean logoSupported) {
    this.logoSupported = logoSupported;
    return this;
  }

   /**
   * Get logoSupported
   * @return logoSupported
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isLogoSupported() {
    return logoSupported;
  }

  public void setLogoSupported(Boolean logoSupported) {
    this.logoSupported = logoSupported;
  }

  public TouchPoints owner(String owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @ApiModelProperty(value = "")
  public String getOwner() {
    return owner;
  }

  public void setOwner(String owner) {
    this.owner = owner;
  }

  public TouchPoints url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @ApiModelProperty(value = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public TouchPoints businessParty(BusinessParty businessParty) {
    this.businessParty = businessParty;
    return this;
  }

   /**
   * Get businessParty
   * @return businessParty
  **/
  @ApiModelProperty(value = "")
  public BusinessParty getBusinessParty() {
    return businessParty;
  }

  public void setBusinessParty(BusinessParty businessParty) {
    this.businessParty = businessParty;
  }

  public TouchPoints configKeys(List<ConfigKeys> configKeys) {
    this.configKeys = configKeys;
    return this;
  }

  public TouchPoints addConfigKeysItem(ConfigKeys configKeysItem) {
    if (this.configKeys == null) {
      this.configKeys = new ArrayList<ConfigKeys>();
    }
    this.configKeys.add(configKeysItem);
    return this;
  }

   /**
   * Get configKeys
   * @return configKeys
  **/
  @ApiModelProperty(value = "")
  public List<ConfigKeys> getConfigKeys() {
    return configKeys;
  }

  public void setConfigKeys(List<ConfigKeys> configKeys) {
    this.configKeys = configKeys;
  }

  public TouchPoints versionedTouchPoints(List<VersionedTouchPoints> versionedTouchPoints) {
    this.versionedTouchPoints = versionedTouchPoints;
    return this;
  }

  public TouchPoints addVersionedTouchPointsItem(VersionedTouchPoints versionedTouchPointsItem) {
    if (this.versionedTouchPoints == null) {
      this.versionedTouchPoints = new ArrayList<VersionedTouchPoints>();
    }
    this.versionedTouchPoints.add(versionedTouchPointsItem);
    return this;
  }

   /**
   * Get versionedTouchPoints
   * @return versionedTouchPoints
  **/
  @ApiModelProperty(value = "")
  public List<VersionedTouchPoints> getVersionedTouchPoints() {
    return versionedTouchPoints;
  }

  public void setVersionedTouchPoints(List<VersionedTouchPoints> versionedTouchPoints) {
    this.versionedTouchPoints = versionedTouchPoints;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TouchPoints touchPoints = (TouchPoints) o;
    return Objects.equals(this.id, touchPoints.id) &&
        Objects.equals(this.name, touchPoints.name) &&
        Objects.equals(this.code, touchPoints.code) &&
        Objects.equals(this.defaultColorValuesId, touchPoints.defaultColorValuesId) &&
        Objects.equals(this.logoSupported, touchPoints.logoSupported) &&
        Objects.equals(this.owner, touchPoints.owner) &&
        Objects.equals(this.url, touchPoints.url) &&
        Objects.equals(this.businessParty, touchPoints.businessParty) &&
        Objects.equals(this.configKeys, touchPoints.configKeys) &&
        Objects.equals(this.versionedTouchPoints, touchPoints.versionedTouchPoints);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, code, defaultColorValuesId, logoSupported, owner, url, businessParty, configKeys, versionedTouchPoints);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TouchPoints {\n");
    
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    defaultColorValuesId: ").append(toIndentedString(defaultColorValuesId)).append("\n");
    sb.append("    logoSupported: ").append(toIndentedString(logoSupported)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    businessParty: ").append(toIndentedString(businessParty)).append("\n");
    sb.append("    configKeys: ").append(toIndentedString(configKeys)).append("\n");
    sb.append("    versionedTouchPoints: ").append(toIndentedString(versionedTouchPoints)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

