/*
 * splitit-web-api-public-sdk
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.splitit.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.splitit.sdk.model.AddressData2;
import com.splitit.sdk.model.Countries;
import com.splitit.sdk.model.CountrySubdivisions;
import com.splitit.sdk.model.EntityBase;
import com.splitit.sdk.model.InstallmentPlans;
import com.splitit.sdk.model.PaymentFormTPABTestingDefinition;
import com.splitit.sdk.model.PlanStrategy;
import com.splitit.sdk.model.VersionedTouchPoints;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * InstallmentPlanSetupContexts
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-05-06T07:48:08.244Z")
public class InstallmentPlanSetupContexts  {
  @SerializedName("Id")
  private Long id = null;

  @SerializedName("PublicInstallmentPlanSession")
  private String publicInstallmentPlanSession = null;

  @SerializedName("BillingAddressAddressLine")
  private String billingAddressAddressLine = null;

  @SerializedName("BillingAddressZip")
  private String billingAddressZip = null;

  @SerializedName("BillingAddressAddressLine2")
  private String billingAddressAddressLine2 = null;

  @SerializedName("BillingAddressCity")
  private String billingAddressCity = null;

  @SerializedName("RequestedNumberOfInstallments")
  private String requestedNumberOfInstallments = null;

  @SerializedName("SuccessExitUrl")
  private String successExitUrl = null;

  @SerializedName("ErrorExitUrl")
  private String errorExitUrl = null;

  @SerializedName("CancelExitUrl")
  private String cancelExitUrl = null;

  @SerializedName("AbTestQueryString")
  private String abTestQueryString = null;

  @SerializedName("RequestedFirstInstallmentAmount")
  private BigDecimal requestedFirstInstallmentAmount = null;

  @SerializedName("RequestedFirstScheduledInstallmentDate")
  private OffsetDateTime requestedFirstScheduledInstallmentDate = null;

  @SerializedName("SendShopperApprovalRequest")
  private OffsetDateTime sendShopperApprovalRequest = null;

  @SerializedName("SendShopperPaymentRequest")
  private OffsetDateTime sendShopperPaymentRequest = null;

  @SerializedName("RequestedCaptureOnCreation")
  private Boolean requestedCaptureOnCreation = null;

  @SerializedName("BillingAddressCountryId")
  private Long billingAddressCountryId = null;

  @SerializedName("SuggestedPaymentTPId")
  private Long suggestedPaymentTPId = null;

  @SerializedName("ABTestingSessionId")
  private Long abTestingSessionId = null;

  @SerializedName("DefaultNumOfInstallments")
  private Integer defaultNumOfInstallments = null;

  @SerializedName("BillingAddressStateId")
  private Long billingAddressStateId = null;

  @SerializedName("BillingAddressLegacyFullAddressLine")
  private String billingAddressLegacyFullAddressLine = null;

  @SerializedName("RequestedFunding")
  private Boolean requestedFunding = null;

  @SerializedName("SuccessAsyncUrl")
  private String successAsyncUrl = null;

  @SerializedName("Attempt3Dsecure")
  private Boolean attempt3Dsecure = null;

  @SerializedName("ViewName")
  private String viewName = null;

  @SerializedName("IsOpenedInIframe")
  private Boolean isOpenedInIframe = null;

  @SerializedName("Is3dSecureInPopup")
  private Boolean is3dSecureInPopup = null;

  @SerializedName("ExternalAuthUniqueGatewayId")
  private String externalAuthUniqueGatewayId = null;

  @SerializedName("ExternalAmountDetails")
  private BigDecimal externalAmountDetails = null;

  @SerializedName("ExternalAuthDate")
  private OffsetDateTime externalAuthDate = null;

  @SerializedName("ExternalAuthTransactionLog")
  private String externalAuthTransactionLog = null;

  @SerializedName("PaymentApprovalPhone")
  private String paymentApprovalPhone = null;

  @SerializedName("PaymentApprovalEmail")
  private String paymentApprovalEmail = null;

  @SerializedName("PaymentMessage")
  private String paymentMessage = null;

  @SerializedName("TermsAndConditionsKey")
  private String termsAndConditionsKey = null;

  @SerializedName("FingerPrintId")
  private String fingerPrintId = null;

  @SerializedName("RequestUpdateCardPhone")
  private String requestUpdateCardPhone = null;

  @SerializedName("RequestUpdateCardEmail")
  private String requestUpdateCardEmail = null;

  @SerializedName("RequestUpdateCardTime")
  private OffsetDateTime requestUpdateCardTime = null;

  @SerializedName("BillingAddressFirstTimePopulatedBy")
  private String billingAddressFirstTimePopulatedBy = null;

  @SerializedName("Country")
  private Countries country = null;

  @SerializedName("State")
  private CountrySubdivisions state = null;

  @SerializedName("ABTestingSession")
  private PaymentFormTPABTestingDefinition abTestingSession = null;

  @SerializedName("SuggestedPaymentTP")
  private VersionedTouchPoints suggestedPaymentTP = null;

  @SerializedName("InstallmentPlans")
  private List<InstallmentPlans> installmentPlans = null;

  @SerializedName("RequestedStrategy")
  private PlanStrategy requestedStrategy = null;

  @SerializedName("BillingAddress")
  private AddressData2 billingAddress = null;

  public InstallmentPlanSetupContexts id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public InstallmentPlanSetupContexts publicInstallmentPlanSession(String publicInstallmentPlanSession) {
    this.publicInstallmentPlanSession = publicInstallmentPlanSession;
    return this;
  }

   /**
   * Get publicInstallmentPlanSession
   * @return publicInstallmentPlanSession
  **/
  @ApiModelProperty(value = "")
  public String getPublicInstallmentPlanSession() {
    return publicInstallmentPlanSession;
  }

  public void setPublicInstallmentPlanSession(String publicInstallmentPlanSession) {
    this.publicInstallmentPlanSession = publicInstallmentPlanSession;
  }

  public InstallmentPlanSetupContexts billingAddressAddressLine(String billingAddressAddressLine) {
    this.billingAddressAddressLine = billingAddressAddressLine;
    return this;
  }

   /**
   * Get billingAddressAddressLine
   * @return billingAddressAddressLine
  **/
  @ApiModelProperty(value = "")
  public String getBillingAddressAddressLine() {
    return billingAddressAddressLine;
  }

  public void setBillingAddressAddressLine(String billingAddressAddressLine) {
    this.billingAddressAddressLine = billingAddressAddressLine;
  }

  public InstallmentPlanSetupContexts billingAddressZip(String billingAddressZip) {
    this.billingAddressZip = billingAddressZip;
    return this;
  }

   /**
   * Get billingAddressZip
   * @return billingAddressZip
  **/
  @ApiModelProperty(value = "")
  public String getBillingAddressZip() {
    return billingAddressZip;
  }

  public void setBillingAddressZip(String billingAddressZip) {
    this.billingAddressZip = billingAddressZip;
  }

  public InstallmentPlanSetupContexts billingAddressAddressLine2(String billingAddressAddressLine2) {
    this.billingAddressAddressLine2 = billingAddressAddressLine2;
    return this;
  }

   /**
   * Get billingAddressAddressLine2
   * @return billingAddressAddressLine2
  **/
  @ApiModelProperty(value = "")
  public String getBillingAddressAddressLine2() {
    return billingAddressAddressLine2;
  }

  public void setBillingAddressAddressLine2(String billingAddressAddressLine2) {
    this.billingAddressAddressLine2 = billingAddressAddressLine2;
  }

  public InstallmentPlanSetupContexts billingAddressCity(String billingAddressCity) {
    this.billingAddressCity = billingAddressCity;
    return this;
  }

   /**
   * Get billingAddressCity
   * @return billingAddressCity
  **/
  @ApiModelProperty(value = "")
  public String getBillingAddressCity() {
    return billingAddressCity;
  }

  public void setBillingAddressCity(String billingAddressCity) {
    this.billingAddressCity = billingAddressCity;
  }

  public InstallmentPlanSetupContexts requestedNumberOfInstallments(String requestedNumberOfInstallments) {
    this.requestedNumberOfInstallments = requestedNumberOfInstallments;
    return this;
  }

   /**
   * Get requestedNumberOfInstallments
   * @return requestedNumberOfInstallments
  **/
  @ApiModelProperty(value = "")
  public String getRequestedNumberOfInstallments() {
    return requestedNumberOfInstallments;
  }

  public void setRequestedNumberOfInstallments(String requestedNumberOfInstallments) {
    this.requestedNumberOfInstallments = requestedNumberOfInstallments;
  }

  public InstallmentPlanSetupContexts successExitUrl(String successExitUrl) {
    this.successExitUrl = successExitUrl;
    return this;
  }

   /**
   * Get successExitUrl
   * @return successExitUrl
  **/
  @ApiModelProperty(value = "")
  public String getSuccessExitUrl() {
    return successExitUrl;
  }

  public void setSuccessExitUrl(String successExitUrl) {
    this.successExitUrl = successExitUrl;
  }

  public InstallmentPlanSetupContexts errorExitUrl(String errorExitUrl) {
    this.errorExitUrl = errorExitUrl;
    return this;
  }

   /**
   * Get errorExitUrl
   * @return errorExitUrl
  **/
  @ApiModelProperty(value = "")
  public String getErrorExitUrl() {
    return errorExitUrl;
  }

  public void setErrorExitUrl(String errorExitUrl) {
    this.errorExitUrl = errorExitUrl;
  }

  public InstallmentPlanSetupContexts cancelExitUrl(String cancelExitUrl) {
    this.cancelExitUrl = cancelExitUrl;
    return this;
  }

   /**
   * Get cancelExitUrl
   * @return cancelExitUrl
  **/
  @ApiModelProperty(value = "")
  public String getCancelExitUrl() {
    return cancelExitUrl;
  }

  public void setCancelExitUrl(String cancelExitUrl) {
    this.cancelExitUrl = cancelExitUrl;
  }

  public InstallmentPlanSetupContexts abTestQueryString(String abTestQueryString) {
    this.abTestQueryString = abTestQueryString;
    return this;
  }

   /**
   * Get abTestQueryString
   * @return abTestQueryString
  **/
  @ApiModelProperty(value = "")
  public String getAbTestQueryString() {
    return abTestQueryString;
  }

  public void setAbTestQueryString(String abTestQueryString) {
    this.abTestQueryString = abTestQueryString;
  }

  public InstallmentPlanSetupContexts requestedFirstInstallmentAmount(BigDecimal requestedFirstInstallmentAmount) {
    this.requestedFirstInstallmentAmount = requestedFirstInstallmentAmount;
    return this;
  }

   /**
   * Get requestedFirstInstallmentAmount
   * @return requestedFirstInstallmentAmount
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getRequestedFirstInstallmentAmount() {
    return requestedFirstInstallmentAmount;
  }

  public void setRequestedFirstInstallmentAmount(BigDecimal requestedFirstInstallmentAmount) {
    this.requestedFirstInstallmentAmount = requestedFirstInstallmentAmount;
  }

  public InstallmentPlanSetupContexts requestedFirstScheduledInstallmentDate(OffsetDateTime requestedFirstScheduledInstallmentDate) {
    this.requestedFirstScheduledInstallmentDate = requestedFirstScheduledInstallmentDate;
    return this;
  }

   /**
   * Get requestedFirstScheduledInstallmentDate
   * @return requestedFirstScheduledInstallmentDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getRequestedFirstScheduledInstallmentDate() {
    return requestedFirstScheduledInstallmentDate;
  }

  public void setRequestedFirstScheduledInstallmentDate(OffsetDateTime requestedFirstScheduledInstallmentDate) {
    this.requestedFirstScheduledInstallmentDate = requestedFirstScheduledInstallmentDate;
  }

  public InstallmentPlanSetupContexts sendShopperApprovalRequest(OffsetDateTime sendShopperApprovalRequest) {
    this.sendShopperApprovalRequest = sendShopperApprovalRequest;
    return this;
  }

   /**
   * Get sendShopperApprovalRequest
   * @return sendShopperApprovalRequest
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getSendShopperApprovalRequest() {
    return sendShopperApprovalRequest;
  }

  public void setSendShopperApprovalRequest(OffsetDateTime sendShopperApprovalRequest) {
    this.sendShopperApprovalRequest = sendShopperApprovalRequest;
  }

  public InstallmentPlanSetupContexts sendShopperPaymentRequest(OffsetDateTime sendShopperPaymentRequest) {
    this.sendShopperPaymentRequest = sendShopperPaymentRequest;
    return this;
  }

   /**
   * Get sendShopperPaymentRequest
   * @return sendShopperPaymentRequest
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getSendShopperPaymentRequest() {
    return sendShopperPaymentRequest;
  }

  public void setSendShopperPaymentRequest(OffsetDateTime sendShopperPaymentRequest) {
    this.sendShopperPaymentRequest = sendShopperPaymentRequest;
  }

  public InstallmentPlanSetupContexts requestedCaptureOnCreation(Boolean requestedCaptureOnCreation) {
    this.requestedCaptureOnCreation = requestedCaptureOnCreation;
    return this;
  }

   /**
   * Get requestedCaptureOnCreation
   * @return requestedCaptureOnCreation
  **/
  @ApiModelProperty(value = "")
  public Boolean isRequestedCaptureOnCreation() {
    return requestedCaptureOnCreation;
  }

  public void setRequestedCaptureOnCreation(Boolean requestedCaptureOnCreation) {
    this.requestedCaptureOnCreation = requestedCaptureOnCreation;
  }

  public InstallmentPlanSetupContexts billingAddressCountryId(Long billingAddressCountryId) {
    this.billingAddressCountryId = billingAddressCountryId;
    return this;
  }

   /**
   * Get billingAddressCountryId
   * @return billingAddressCountryId
  **/
  @ApiModelProperty(value = "")
  public Long getBillingAddressCountryId() {
    return billingAddressCountryId;
  }

  public void setBillingAddressCountryId(Long billingAddressCountryId) {
    this.billingAddressCountryId = billingAddressCountryId;
  }

  public InstallmentPlanSetupContexts suggestedPaymentTPId(Long suggestedPaymentTPId) {
    this.suggestedPaymentTPId = suggestedPaymentTPId;
    return this;
  }

   /**
   * Get suggestedPaymentTPId
   * @return suggestedPaymentTPId
  **/
  @ApiModelProperty(value = "")
  public Long getSuggestedPaymentTPId() {
    return suggestedPaymentTPId;
  }

  public void setSuggestedPaymentTPId(Long suggestedPaymentTPId) {
    this.suggestedPaymentTPId = suggestedPaymentTPId;
  }

  public InstallmentPlanSetupContexts abTestingSessionId(Long abTestingSessionId) {
    this.abTestingSessionId = abTestingSessionId;
    return this;
  }

   /**
   * Get abTestingSessionId
   * @return abTestingSessionId
  **/
  @ApiModelProperty(value = "")
  public Long getAbTestingSessionId() {
    return abTestingSessionId;
  }

  public void setAbTestingSessionId(Long abTestingSessionId) {
    this.abTestingSessionId = abTestingSessionId;
  }

  public InstallmentPlanSetupContexts defaultNumOfInstallments(Integer defaultNumOfInstallments) {
    this.defaultNumOfInstallments = defaultNumOfInstallments;
    return this;
  }

   /**
   * Get defaultNumOfInstallments
   * @return defaultNumOfInstallments
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getDefaultNumOfInstallments() {
    return defaultNumOfInstallments;
  }

  public void setDefaultNumOfInstallments(Integer defaultNumOfInstallments) {
    this.defaultNumOfInstallments = defaultNumOfInstallments;
  }

  public InstallmentPlanSetupContexts billingAddressStateId(Long billingAddressStateId) {
    this.billingAddressStateId = billingAddressStateId;
    return this;
  }

   /**
   * Get billingAddressStateId
   * @return billingAddressStateId
  **/
  @ApiModelProperty(value = "")
  public Long getBillingAddressStateId() {
    return billingAddressStateId;
  }

  public void setBillingAddressStateId(Long billingAddressStateId) {
    this.billingAddressStateId = billingAddressStateId;
  }

  public InstallmentPlanSetupContexts billingAddressLegacyFullAddressLine(String billingAddressLegacyFullAddressLine) {
    this.billingAddressLegacyFullAddressLine = billingAddressLegacyFullAddressLine;
    return this;
  }

   /**
   * Get billingAddressLegacyFullAddressLine
   * @return billingAddressLegacyFullAddressLine
  **/
  @ApiModelProperty(value = "")
  public String getBillingAddressLegacyFullAddressLine() {
    return billingAddressLegacyFullAddressLine;
  }

  public void setBillingAddressLegacyFullAddressLine(String billingAddressLegacyFullAddressLine) {
    this.billingAddressLegacyFullAddressLine = billingAddressLegacyFullAddressLine;
  }

  public InstallmentPlanSetupContexts requestedFunding(Boolean requestedFunding) {
    this.requestedFunding = requestedFunding;
    return this;
  }

   /**
   * Get requestedFunding
   * @return requestedFunding
  **/
  @ApiModelProperty(value = "")
  public Boolean isRequestedFunding() {
    return requestedFunding;
  }

  public void setRequestedFunding(Boolean requestedFunding) {
    this.requestedFunding = requestedFunding;
  }

  public InstallmentPlanSetupContexts successAsyncUrl(String successAsyncUrl) {
    this.successAsyncUrl = successAsyncUrl;
    return this;
  }

   /**
   * Get successAsyncUrl
   * @return successAsyncUrl
  **/
  @ApiModelProperty(value = "")
  public String getSuccessAsyncUrl() {
    return successAsyncUrl;
  }

  public void setSuccessAsyncUrl(String successAsyncUrl) {
    this.successAsyncUrl = successAsyncUrl;
  }

  public InstallmentPlanSetupContexts attempt3Dsecure(Boolean attempt3Dsecure) {
    this.attempt3Dsecure = attempt3Dsecure;
    return this;
  }

   /**
   * Get attempt3Dsecure
   * @return attempt3Dsecure
  **/
  @ApiModelProperty(value = "")
  public Boolean isAttempt3Dsecure() {
    return attempt3Dsecure;
  }

  public void setAttempt3Dsecure(Boolean attempt3Dsecure) {
    this.attempt3Dsecure = attempt3Dsecure;
  }

  public InstallmentPlanSetupContexts viewName(String viewName) {
    this.viewName = viewName;
    return this;
  }

   /**
   * Get viewName
   * @return viewName
  **/
  @ApiModelProperty(value = "")
  public String getViewName() {
    return viewName;
  }

  public void setViewName(String viewName) {
    this.viewName = viewName;
  }

  public InstallmentPlanSetupContexts isOpenedInIframe(Boolean isOpenedInIframe) {
    this.isOpenedInIframe = isOpenedInIframe;
    return this;
  }

   /**
   * Get isOpenedInIframe
   * @return isOpenedInIframe
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isIsOpenedInIframe() {
    return isOpenedInIframe;
  }

  public void setIsOpenedInIframe(Boolean isOpenedInIframe) {
    this.isOpenedInIframe = isOpenedInIframe;
  }

  public InstallmentPlanSetupContexts is3dSecureInPopup(Boolean is3dSecureInPopup) {
    this.is3dSecureInPopup = is3dSecureInPopup;
    return this;
  }

   /**
   * Get is3dSecureInPopup
   * @return is3dSecureInPopup
  **/
  @ApiModelProperty(value = "")
  public Boolean isIs3dSecureInPopup() {
    return is3dSecureInPopup;
  }

  public void setIs3dSecureInPopup(Boolean is3dSecureInPopup) {
    this.is3dSecureInPopup = is3dSecureInPopup;
  }

  public InstallmentPlanSetupContexts externalAuthUniqueGatewayId(String externalAuthUniqueGatewayId) {
    this.externalAuthUniqueGatewayId = externalAuthUniqueGatewayId;
    return this;
  }

   /**
   * Get externalAuthUniqueGatewayId
   * @return externalAuthUniqueGatewayId
  **/
  @ApiModelProperty(value = "")
  public String getExternalAuthUniqueGatewayId() {
    return externalAuthUniqueGatewayId;
  }

  public void setExternalAuthUniqueGatewayId(String externalAuthUniqueGatewayId) {
    this.externalAuthUniqueGatewayId = externalAuthUniqueGatewayId;
  }

  public InstallmentPlanSetupContexts externalAmountDetails(BigDecimal externalAmountDetails) {
    this.externalAmountDetails = externalAmountDetails;
    return this;
  }

   /**
   * Get externalAmountDetails
   * @return externalAmountDetails
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getExternalAmountDetails() {
    return externalAmountDetails;
  }

  public void setExternalAmountDetails(BigDecimal externalAmountDetails) {
    this.externalAmountDetails = externalAmountDetails;
  }

  public InstallmentPlanSetupContexts externalAuthDate(OffsetDateTime externalAuthDate) {
    this.externalAuthDate = externalAuthDate;
    return this;
  }

   /**
   * Get externalAuthDate
   * @return externalAuthDate
  **/
  @ApiModelProperty(required = true, value = "")
  public OffsetDateTime getExternalAuthDate() {
    return externalAuthDate;
  }

  public void setExternalAuthDate(OffsetDateTime externalAuthDate) {
    this.externalAuthDate = externalAuthDate;
  }

  public InstallmentPlanSetupContexts externalAuthTransactionLog(String externalAuthTransactionLog) {
    this.externalAuthTransactionLog = externalAuthTransactionLog;
    return this;
  }

   /**
   * Get externalAuthTransactionLog
   * @return externalAuthTransactionLog
  **/
  @ApiModelProperty(value = "")
  public String getExternalAuthTransactionLog() {
    return externalAuthTransactionLog;
  }

  public void setExternalAuthTransactionLog(String externalAuthTransactionLog) {
    this.externalAuthTransactionLog = externalAuthTransactionLog;
  }

  public InstallmentPlanSetupContexts paymentApprovalPhone(String paymentApprovalPhone) {
    this.paymentApprovalPhone = paymentApprovalPhone;
    return this;
  }

   /**
   * Get paymentApprovalPhone
   * @return paymentApprovalPhone
  **/
  @ApiModelProperty(value = "")
  public String getPaymentApprovalPhone() {
    return paymentApprovalPhone;
  }

  public void setPaymentApprovalPhone(String paymentApprovalPhone) {
    this.paymentApprovalPhone = paymentApprovalPhone;
  }

  public InstallmentPlanSetupContexts paymentApprovalEmail(String paymentApprovalEmail) {
    this.paymentApprovalEmail = paymentApprovalEmail;
    return this;
  }

   /**
   * Get paymentApprovalEmail
   * @return paymentApprovalEmail
  **/
  @ApiModelProperty(value = "")
  public String getPaymentApprovalEmail() {
    return paymentApprovalEmail;
  }

  public void setPaymentApprovalEmail(String paymentApprovalEmail) {
    this.paymentApprovalEmail = paymentApprovalEmail;
  }

  public InstallmentPlanSetupContexts paymentMessage(String paymentMessage) {
    this.paymentMessage = paymentMessage;
    return this;
  }

   /**
   * Get paymentMessage
   * @return paymentMessage
  **/
  @ApiModelProperty(value = "")
  public String getPaymentMessage() {
    return paymentMessage;
  }

  public void setPaymentMessage(String paymentMessage) {
    this.paymentMessage = paymentMessage;
  }

  public InstallmentPlanSetupContexts termsAndConditionsKey(String termsAndConditionsKey) {
    this.termsAndConditionsKey = termsAndConditionsKey;
    return this;
  }

   /**
   * Get termsAndConditionsKey
   * @return termsAndConditionsKey
  **/
  @ApiModelProperty(value = "")
  public String getTermsAndConditionsKey() {
    return termsAndConditionsKey;
  }

  public void setTermsAndConditionsKey(String termsAndConditionsKey) {
    this.termsAndConditionsKey = termsAndConditionsKey;
  }

  public InstallmentPlanSetupContexts fingerPrintId(String fingerPrintId) {
    this.fingerPrintId = fingerPrintId;
    return this;
  }

   /**
   * Get fingerPrintId
   * @return fingerPrintId
  **/
  @ApiModelProperty(value = "")
  public String getFingerPrintId() {
    return fingerPrintId;
  }

  public void setFingerPrintId(String fingerPrintId) {
    this.fingerPrintId = fingerPrintId;
  }

  public InstallmentPlanSetupContexts requestUpdateCardPhone(String requestUpdateCardPhone) {
    this.requestUpdateCardPhone = requestUpdateCardPhone;
    return this;
  }

   /**
   * Get requestUpdateCardPhone
   * @return requestUpdateCardPhone
  **/
  @ApiModelProperty(value = "")
  public String getRequestUpdateCardPhone() {
    return requestUpdateCardPhone;
  }

  public void setRequestUpdateCardPhone(String requestUpdateCardPhone) {
    this.requestUpdateCardPhone = requestUpdateCardPhone;
  }

  public InstallmentPlanSetupContexts requestUpdateCardEmail(String requestUpdateCardEmail) {
    this.requestUpdateCardEmail = requestUpdateCardEmail;
    return this;
  }

   /**
   * Get requestUpdateCardEmail
   * @return requestUpdateCardEmail
  **/
  @ApiModelProperty(value = "")
  public String getRequestUpdateCardEmail() {
    return requestUpdateCardEmail;
  }

  public void setRequestUpdateCardEmail(String requestUpdateCardEmail) {
    this.requestUpdateCardEmail = requestUpdateCardEmail;
  }

  public InstallmentPlanSetupContexts requestUpdateCardTime(OffsetDateTime requestUpdateCardTime) {
    this.requestUpdateCardTime = requestUpdateCardTime;
    return this;
  }

   /**
   * Get requestUpdateCardTime
   * @return requestUpdateCardTime
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getRequestUpdateCardTime() {
    return requestUpdateCardTime;
  }

  public void setRequestUpdateCardTime(OffsetDateTime requestUpdateCardTime) {
    this.requestUpdateCardTime = requestUpdateCardTime;
  }

  public InstallmentPlanSetupContexts billingAddressFirstTimePopulatedBy(String billingAddressFirstTimePopulatedBy) {
    this.billingAddressFirstTimePopulatedBy = billingAddressFirstTimePopulatedBy;
    return this;
  }

   /**
   * Get billingAddressFirstTimePopulatedBy
   * @return billingAddressFirstTimePopulatedBy
  **/
  @ApiModelProperty(value = "")
  public String getBillingAddressFirstTimePopulatedBy() {
    return billingAddressFirstTimePopulatedBy;
  }

  public void setBillingAddressFirstTimePopulatedBy(String billingAddressFirstTimePopulatedBy) {
    this.billingAddressFirstTimePopulatedBy = billingAddressFirstTimePopulatedBy;
  }

  public InstallmentPlanSetupContexts country(Countries country) {
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @ApiModelProperty(value = "")
  public Countries getCountry() {
    return country;
  }

  public void setCountry(Countries country) {
    this.country = country;
  }

  public InstallmentPlanSetupContexts state(CountrySubdivisions state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(value = "")
  public CountrySubdivisions getState() {
    return state;
  }

  public void setState(CountrySubdivisions state) {
    this.state = state;
  }

  public InstallmentPlanSetupContexts abTestingSession(PaymentFormTPABTestingDefinition abTestingSession) {
    this.abTestingSession = abTestingSession;
    return this;
  }

   /**
   * Get abTestingSession
   * @return abTestingSession
  **/
  @ApiModelProperty(value = "")
  public PaymentFormTPABTestingDefinition getAbTestingSession() {
    return abTestingSession;
  }

  public void setAbTestingSession(PaymentFormTPABTestingDefinition abTestingSession) {
    this.abTestingSession = abTestingSession;
  }

  public InstallmentPlanSetupContexts suggestedPaymentTP(VersionedTouchPoints suggestedPaymentTP) {
    this.suggestedPaymentTP = suggestedPaymentTP;
    return this;
  }

   /**
   * Get suggestedPaymentTP
   * @return suggestedPaymentTP
  **/
  @ApiModelProperty(value = "")
  public VersionedTouchPoints getSuggestedPaymentTP() {
    return suggestedPaymentTP;
  }

  public void setSuggestedPaymentTP(VersionedTouchPoints suggestedPaymentTP) {
    this.suggestedPaymentTP = suggestedPaymentTP;
  }

  public InstallmentPlanSetupContexts installmentPlans(List<InstallmentPlans> installmentPlans) {
    this.installmentPlans = installmentPlans;
    return this;
  }

  public InstallmentPlanSetupContexts addInstallmentPlansItem(InstallmentPlans installmentPlansItem) {
    if (this.installmentPlans == null) {
      this.installmentPlans = new ArrayList<InstallmentPlans>();
    }
    this.installmentPlans.add(installmentPlansItem);
    return this;
  }

   /**
   * Get installmentPlans
   * @return installmentPlans
  **/
  @ApiModelProperty(value = "")
  public List<InstallmentPlans> getInstallmentPlans() {
    return installmentPlans;
  }

  public void setInstallmentPlans(List<InstallmentPlans> installmentPlans) {
    this.installmentPlans = installmentPlans;
  }

  public InstallmentPlanSetupContexts requestedStrategy(PlanStrategy requestedStrategy) {
    this.requestedStrategy = requestedStrategy;
    return this;
  }

   /**
   * Get requestedStrategy
   * @return requestedStrategy
  **/
  @ApiModelProperty(value = "")
  public PlanStrategy getRequestedStrategy() {
    return requestedStrategy;
  }

  public void setRequestedStrategy(PlanStrategy requestedStrategy) {
    this.requestedStrategy = requestedStrategy;
  }

  public InstallmentPlanSetupContexts billingAddress(AddressData2 billingAddress) {
    this.billingAddress = billingAddress;
    return this;
  }

   /**
   * Get billingAddress
   * @return billingAddress
  **/
  @ApiModelProperty(value = "")
  public AddressData2 getBillingAddress() {
    return billingAddress;
  }

  public void setBillingAddress(AddressData2 billingAddress) {
    this.billingAddress = billingAddress;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstallmentPlanSetupContexts installmentPlanSetupContexts = (InstallmentPlanSetupContexts) o;
    return Objects.equals(this.id, installmentPlanSetupContexts.id) &&
        Objects.equals(this.publicInstallmentPlanSession, installmentPlanSetupContexts.publicInstallmentPlanSession) &&
        Objects.equals(this.billingAddressAddressLine, installmentPlanSetupContexts.billingAddressAddressLine) &&
        Objects.equals(this.billingAddressZip, installmentPlanSetupContexts.billingAddressZip) &&
        Objects.equals(this.billingAddressAddressLine2, installmentPlanSetupContexts.billingAddressAddressLine2) &&
        Objects.equals(this.billingAddressCity, installmentPlanSetupContexts.billingAddressCity) &&
        Objects.equals(this.requestedNumberOfInstallments, installmentPlanSetupContexts.requestedNumberOfInstallments) &&
        Objects.equals(this.successExitUrl, installmentPlanSetupContexts.successExitUrl) &&
        Objects.equals(this.errorExitUrl, installmentPlanSetupContexts.errorExitUrl) &&
        Objects.equals(this.cancelExitUrl, installmentPlanSetupContexts.cancelExitUrl) &&
        Objects.equals(this.abTestQueryString, installmentPlanSetupContexts.abTestQueryString) &&
        Objects.equals(this.requestedFirstInstallmentAmount, installmentPlanSetupContexts.requestedFirstInstallmentAmount) &&
        Objects.equals(this.requestedFirstScheduledInstallmentDate, installmentPlanSetupContexts.requestedFirstScheduledInstallmentDate) &&
        Objects.equals(this.sendShopperApprovalRequest, installmentPlanSetupContexts.sendShopperApprovalRequest) &&
        Objects.equals(this.sendShopperPaymentRequest, installmentPlanSetupContexts.sendShopperPaymentRequest) &&
        Objects.equals(this.requestedCaptureOnCreation, installmentPlanSetupContexts.requestedCaptureOnCreation) &&
        Objects.equals(this.billingAddressCountryId, installmentPlanSetupContexts.billingAddressCountryId) &&
        Objects.equals(this.suggestedPaymentTPId, installmentPlanSetupContexts.suggestedPaymentTPId) &&
        Objects.equals(this.abTestingSessionId, installmentPlanSetupContexts.abTestingSessionId) &&
        Objects.equals(this.defaultNumOfInstallments, installmentPlanSetupContexts.defaultNumOfInstallments) &&
        Objects.equals(this.billingAddressStateId, installmentPlanSetupContexts.billingAddressStateId) &&
        Objects.equals(this.billingAddressLegacyFullAddressLine, installmentPlanSetupContexts.billingAddressLegacyFullAddressLine) &&
        Objects.equals(this.requestedFunding, installmentPlanSetupContexts.requestedFunding) &&
        Objects.equals(this.successAsyncUrl, installmentPlanSetupContexts.successAsyncUrl) &&
        Objects.equals(this.attempt3Dsecure, installmentPlanSetupContexts.attempt3Dsecure) &&
        Objects.equals(this.viewName, installmentPlanSetupContexts.viewName) &&
        Objects.equals(this.isOpenedInIframe, installmentPlanSetupContexts.isOpenedInIframe) &&
        Objects.equals(this.is3dSecureInPopup, installmentPlanSetupContexts.is3dSecureInPopup) &&
        Objects.equals(this.externalAuthUniqueGatewayId, installmentPlanSetupContexts.externalAuthUniqueGatewayId) &&
        Objects.equals(this.externalAmountDetails, installmentPlanSetupContexts.externalAmountDetails) &&
        Objects.equals(this.externalAuthDate, installmentPlanSetupContexts.externalAuthDate) &&
        Objects.equals(this.externalAuthTransactionLog, installmentPlanSetupContexts.externalAuthTransactionLog) &&
        Objects.equals(this.paymentApprovalPhone, installmentPlanSetupContexts.paymentApprovalPhone) &&
        Objects.equals(this.paymentApprovalEmail, installmentPlanSetupContexts.paymentApprovalEmail) &&
        Objects.equals(this.paymentMessage, installmentPlanSetupContexts.paymentMessage) &&
        Objects.equals(this.termsAndConditionsKey, installmentPlanSetupContexts.termsAndConditionsKey) &&
        Objects.equals(this.fingerPrintId, installmentPlanSetupContexts.fingerPrintId) &&
        Objects.equals(this.requestUpdateCardPhone, installmentPlanSetupContexts.requestUpdateCardPhone) &&
        Objects.equals(this.requestUpdateCardEmail, installmentPlanSetupContexts.requestUpdateCardEmail) &&
        Objects.equals(this.requestUpdateCardTime, installmentPlanSetupContexts.requestUpdateCardTime) &&
        Objects.equals(this.billingAddressFirstTimePopulatedBy, installmentPlanSetupContexts.billingAddressFirstTimePopulatedBy) &&
        Objects.equals(this.country, installmentPlanSetupContexts.country) &&
        Objects.equals(this.state, installmentPlanSetupContexts.state) &&
        Objects.equals(this.abTestingSession, installmentPlanSetupContexts.abTestingSession) &&
        Objects.equals(this.suggestedPaymentTP, installmentPlanSetupContexts.suggestedPaymentTP) &&
        Objects.equals(this.installmentPlans, installmentPlanSetupContexts.installmentPlans) &&
        Objects.equals(this.requestedStrategy, installmentPlanSetupContexts.requestedStrategy) &&
        Objects.equals(this.billingAddress, installmentPlanSetupContexts.billingAddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, publicInstallmentPlanSession, billingAddressAddressLine, billingAddressZip, billingAddressAddressLine2, billingAddressCity, requestedNumberOfInstallments, successExitUrl, errorExitUrl, cancelExitUrl, abTestQueryString, requestedFirstInstallmentAmount, requestedFirstScheduledInstallmentDate, sendShopperApprovalRequest, sendShopperPaymentRequest, requestedCaptureOnCreation, billingAddressCountryId, suggestedPaymentTPId, abTestingSessionId, defaultNumOfInstallments, billingAddressStateId, billingAddressLegacyFullAddressLine, requestedFunding, successAsyncUrl, attempt3Dsecure, viewName, isOpenedInIframe, is3dSecureInPopup, externalAuthUniqueGatewayId, externalAmountDetails, externalAuthDate, externalAuthTransactionLog, paymentApprovalPhone, paymentApprovalEmail, paymentMessage, termsAndConditionsKey, fingerPrintId, requestUpdateCardPhone, requestUpdateCardEmail, requestUpdateCardTime, billingAddressFirstTimePopulatedBy, country, state, abTestingSession, suggestedPaymentTP, installmentPlans, requestedStrategy, billingAddress);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstallmentPlanSetupContexts {\n");
    
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    publicInstallmentPlanSession: ").append(toIndentedString(publicInstallmentPlanSession)).append("\n");
    sb.append("    billingAddressAddressLine: ").append(toIndentedString(billingAddressAddressLine)).append("\n");
    sb.append("    billingAddressZip: ").append(toIndentedString(billingAddressZip)).append("\n");
    sb.append("    billingAddressAddressLine2: ").append(toIndentedString(billingAddressAddressLine2)).append("\n");
    sb.append("    billingAddressCity: ").append(toIndentedString(billingAddressCity)).append("\n");
    sb.append("    requestedNumberOfInstallments: ").append(toIndentedString(requestedNumberOfInstallments)).append("\n");
    sb.append("    successExitUrl: ").append(toIndentedString(successExitUrl)).append("\n");
    sb.append("    errorExitUrl: ").append(toIndentedString(errorExitUrl)).append("\n");
    sb.append("    cancelExitUrl: ").append(toIndentedString(cancelExitUrl)).append("\n");
    sb.append("    abTestQueryString: ").append(toIndentedString(abTestQueryString)).append("\n");
    sb.append("    requestedFirstInstallmentAmount: ").append(toIndentedString(requestedFirstInstallmentAmount)).append("\n");
    sb.append("    requestedFirstScheduledInstallmentDate: ").append(toIndentedString(requestedFirstScheduledInstallmentDate)).append("\n");
    sb.append("    sendShopperApprovalRequest: ").append(toIndentedString(sendShopperApprovalRequest)).append("\n");
    sb.append("    sendShopperPaymentRequest: ").append(toIndentedString(sendShopperPaymentRequest)).append("\n");
    sb.append("    requestedCaptureOnCreation: ").append(toIndentedString(requestedCaptureOnCreation)).append("\n");
    sb.append("    billingAddressCountryId: ").append(toIndentedString(billingAddressCountryId)).append("\n");
    sb.append("    suggestedPaymentTPId: ").append(toIndentedString(suggestedPaymentTPId)).append("\n");
    sb.append("    abTestingSessionId: ").append(toIndentedString(abTestingSessionId)).append("\n");
    sb.append("    defaultNumOfInstallments: ").append(toIndentedString(defaultNumOfInstallments)).append("\n");
    sb.append("    billingAddressStateId: ").append(toIndentedString(billingAddressStateId)).append("\n");
    sb.append("    billingAddressLegacyFullAddressLine: ").append(toIndentedString(billingAddressLegacyFullAddressLine)).append("\n");
    sb.append("    requestedFunding: ").append(toIndentedString(requestedFunding)).append("\n");
    sb.append("    successAsyncUrl: ").append(toIndentedString(successAsyncUrl)).append("\n");
    sb.append("    attempt3Dsecure: ").append(toIndentedString(attempt3Dsecure)).append("\n");
    sb.append("    viewName: ").append(toIndentedString(viewName)).append("\n");
    sb.append("    isOpenedInIframe: ").append(toIndentedString(isOpenedInIframe)).append("\n");
    sb.append("    is3dSecureInPopup: ").append(toIndentedString(is3dSecureInPopup)).append("\n");
    sb.append("    externalAuthUniqueGatewayId: ").append(toIndentedString(externalAuthUniqueGatewayId)).append("\n");
    sb.append("    externalAmountDetails: ").append(toIndentedString(externalAmountDetails)).append("\n");
    sb.append("    externalAuthDate: ").append(toIndentedString(externalAuthDate)).append("\n");
    sb.append("    externalAuthTransactionLog: ").append(toIndentedString(externalAuthTransactionLog)).append("\n");
    sb.append("    paymentApprovalPhone: ").append(toIndentedString(paymentApprovalPhone)).append("\n");
    sb.append("    paymentApprovalEmail: ").append(toIndentedString(paymentApprovalEmail)).append("\n");
    sb.append("    paymentMessage: ").append(toIndentedString(paymentMessage)).append("\n");
    sb.append("    termsAndConditionsKey: ").append(toIndentedString(termsAndConditionsKey)).append("\n");
    sb.append("    fingerPrintId: ").append(toIndentedString(fingerPrintId)).append("\n");
    sb.append("    requestUpdateCardPhone: ").append(toIndentedString(requestUpdateCardPhone)).append("\n");
    sb.append("    requestUpdateCardEmail: ").append(toIndentedString(requestUpdateCardEmail)).append("\n");
    sb.append("    requestUpdateCardTime: ").append(toIndentedString(requestUpdateCardTime)).append("\n");
    sb.append("    billingAddressFirstTimePopulatedBy: ").append(toIndentedString(billingAddressFirstTimePopulatedBy)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    abTestingSession: ").append(toIndentedString(abTestingSession)).append("\n");
    sb.append("    suggestedPaymentTP: ").append(toIndentedString(suggestedPaymentTP)).append("\n");
    sb.append("    installmentPlans: ").append(toIndentedString(installmentPlans)).append("\n");
    sb.append("    requestedStrategy: ").append(toIndentedString(requestedStrategy)).append("\n");
    sb.append("    billingAddress: ").append(toIndentedString(billingAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

