/*
 * splitit-web-api-public-sdk
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.splitit.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.splitit.sdk.model.BusinessUnits;
import com.splitit.sdk.model.Currencies;
import com.splitit.sdk.model.EntityBase;
import com.splitit.sdk.model.FundingCollectDocumentDetails;
import com.splitit.sdk.model.ScpProviders;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * CollectDocuments
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-05-06T07:48:08.244Z")
public class CollectDocuments  {
  @SerializedName("Id")
  private Long id = null;

  @SerializedName("Amount")
  private BigDecimal amount = null;

  @SerializedName("CurrencyId")
  private Long currencyId = null;

  @SerializedName("BusinessUnitId")
  private Long businessUnitId = null;

  @SerializedName("ApprovalDate")
  private OffsetDateTime approvalDate = null;

  @SerializedName("Discriminator")
  private String discriminator = null;

  @SerializedName("LenderId")
  private Long lenderId = null;

  @SerializedName("ExcludeFromEmails")
  private Boolean excludeFromEmails = null;

  @SerializedName("BusinessUnit")
  private BusinessUnits businessUnit = null;

  @SerializedName("Currency")
  private Currencies currency = null;

  @SerializedName("Lender")
  private ScpProviders lender = null;

  @SerializedName("FundingCollectDocumentDetails")
  private List<FundingCollectDocumentDetails> fundingCollectDocumentDetails = null;

  public CollectDocuments id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public CollectDocuments amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }

  public CollectDocuments currencyId(Long currencyId) {
    this.currencyId = currencyId;
    return this;
  }

   /**
   * Get currencyId
   * @return currencyId
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getCurrencyId() {
    return currencyId;
  }

  public void setCurrencyId(Long currencyId) {
    this.currencyId = currencyId;
  }

  public CollectDocuments businessUnitId(Long businessUnitId) {
    this.businessUnitId = businessUnitId;
    return this;
  }

   /**
   * Get businessUnitId
   * @return businessUnitId
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getBusinessUnitId() {
    return businessUnitId;
  }

  public void setBusinessUnitId(Long businessUnitId) {
    this.businessUnitId = businessUnitId;
  }

  public CollectDocuments approvalDate(OffsetDateTime approvalDate) {
    this.approvalDate = approvalDate;
    return this;
  }

   /**
   * Get approvalDate
   * @return approvalDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getApprovalDate() {
    return approvalDate;
  }

  public void setApprovalDate(OffsetDateTime approvalDate) {
    this.approvalDate = approvalDate;
  }

  public CollectDocuments discriminator(String discriminator) {
    this.discriminator = discriminator;
    return this;
  }

   /**
   * Get discriminator
   * @return discriminator
  **/
  @ApiModelProperty(value = "")
  public String getDiscriminator() {
    return discriminator;
  }

  public void setDiscriminator(String discriminator) {
    this.discriminator = discriminator;
  }

  public CollectDocuments lenderId(Long lenderId) {
    this.lenderId = lenderId;
    return this;
  }

   /**
   * Get lenderId
   * @return lenderId
  **/
  @ApiModelProperty(value = "")
  public Long getLenderId() {
    return lenderId;
  }

  public void setLenderId(Long lenderId) {
    this.lenderId = lenderId;
  }

  public CollectDocuments excludeFromEmails(Boolean excludeFromEmails) {
    this.excludeFromEmails = excludeFromEmails;
    return this;
  }

   /**
   * Get excludeFromEmails
   * @return excludeFromEmails
  **/
  @ApiModelProperty(value = "")
  public Boolean isExcludeFromEmails() {
    return excludeFromEmails;
  }

  public void setExcludeFromEmails(Boolean excludeFromEmails) {
    this.excludeFromEmails = excludeFromEmails;
  }

  public CollectDocuments businessUnit(BusinessUnits businessUnit) {
    this.businessUnit = businessUnit;
    return this;
  }

   /**
   * Get businessUnit
   * @return businessUnit
  **/
  @ApiModelProperty(value = "")
  public BusinessUnits getBusinessUnit() {
    return businessUnit;
  }

  public void setBusinessUnit(BusinessUnits businessUnit) {
    this.businessUnit = businessUnit;
  }

  public CollectDocuments currency(Currencies currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public Currencies getCurrency() {
    return currency;
  }

  public void setCurrency(Currencies currency) {
    this.currency = currency;
  }

  public CollectDocuments lender(ScpProviders lender) {
    this.lender = lender;
    return this;
  }

   /**
   * Get lender
   * @return lender
  **/
  @ApiModelProperty(value = "")
  public ScpProviders getLender() {
    return lender;
  }

  public void setLender(ScpProviders lender) {
    this.lender = lender;
  }

  public CollectDocuments fundingCollectDocumentDetails(List<FundingCollectDocumentDetails> fundingCollectDocumentDetails) {
    this.fundingCollectDocumentDetails = fundingCollectDocumentDetails;
    return this;
  }

  public CollectDocuments addFundingCollectDocumentDetailsItem(FundingCollectDocumentDetails fundingCollectDocumentDetailsItem) {
    if (this.fundingCollectDocumentDetails == null) {
      this.fundingCollectDocumentDetails = new ArrayList<FundingCollectDocumentDetails>();
    }
    this.fundingCollectDocumentDetails.add(fundingCollectDocumentDetailsItem);
    return this;
  }

   /**
   * Get fundingCollectDocumentDetails
   * @return fundingCollectDocumentDetails
  **/
  @ApiModelProperty(value = "")
  public List<FundingCollectDocumentDetails> getFundingCollectDocumentDetails() {
    return fundingCollectDocumentDetails;
  }

  public void setFundingCollectDocumentDetails(List<FundingCollectDocumentDetails> fundingCollectDocumentDetails) {
    this.fundingCollectDocumentDetails = fundingCollectDocumentDetails;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CollectDocuments collectDocuments = (CollectDocuments) o;
    return Objects.equals(this.id, collectDocuments.id) &&
        Objects.equals(this.amount, collectDocuments.amount) &&
        Objects.equals(this.currencyId, collectDocuments.currencyId) &&
        Objects.equals(this.businessUnitId, collectDocuments.businessUnitId) &&
        Objects.equals(this.approvalDate, collectDocuments.approvalDate) &&
        Objects.equals(this.discriminator, collectDocuments.discriminator) &&
        Objects.equals(this.lenderId, collectDocuments.lenderId) &&
        Objects.equals(this.excludeFromEmails, collectDocuments.excludeFromEmails) &&
        Objects.equals(this.businessUnit, collectDocuments.businessUnit) &&
        Objects.equals(this.currency, collectDocuments.currency) &&
        Objects.equals(this.lender, collectDocuments.lender) &&
        Objects.equals(this.fundingCollectDocumentDetails, collectDocuments.fundingCollectDocumentDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, amount, currencyId, businessUnitId, approvalDate, discriminator, lenderId, excludeFromEmails, businessUnit, currency, lender, fundingCollectDocumentDetails);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CollectDocuments {\n");
    
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    businessUnitId: ").append(toIndentedString(businessUnitId)).append("\n");
    sb.append("    approvalDate: ").append(toIndentedString(approvalDate)).append("\n");
    sb.append("    discriminator: ").append(toIndentedString(discriminator)).append("\n");
    sb.append("    lenderId: ").append(toIndentedString(lenderId)).append("\n");
    sb.append("    excludeFromEmails: ").append(toIndentedString(excludeFromEmails)).append("\n");
    sb.append("    businessUnit: ").append(toIndentedString(businessUnit)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    lender: ").append(toIndentedString(lender)).append("\n");
    sb.append("    fundingCollectDocumentDetails: ").append(toIndentedString(fundingCollectDocumentDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

