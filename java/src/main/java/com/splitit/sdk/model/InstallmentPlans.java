/*
 * splitit-web-api-public-sdk
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.splitit.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.splitit.sdk.model.AmountDetails2;
import com.splitit.sdk.model.Cards;
import com.splitit.sdk.model.CartItems;
import com.splitit.sdk.model.Currencies;
import com.splitit.sdk.model.DelayResolution;
import com.splitit.sdk.model.EmailAuditLogs;
import com.splitit.sdk.model.EntityBase;
import com.splitit.sdk.model.FeesDocuments;
import com.splitit.sdk.model.FraudDetectionLogs;
import com.splitit.sdk.model.FundingCollectDocumentDetails;
import com.splitit.sdk.model.InstallmentPlanAuditLogs;
import com.splitit.sdk.model.InstallmentPlanEvents;
import com.splitit.sdk.model.InstallmentPlanSetupContexts;
import com.splitit.sdk.model.InstallmentPlanStatus;
import com.splitit.sdk.model.InstallmentPlanStatusLogEntries;
import com.splitit.sdk.model.InstallmentPlanTerminalDatas;
import com.splitit.sdk.model.Installments;
import com.splitit.sdk.model.MoneyFlows;
import com.splitit.sdk.model.PlanStrategy;
import com.splitit.sdk.model.PurchaseMethod;
import com.splitit.sdk.model.ReAuthorizations;
import com.splitit.sdk.model.RefundLogEntries;
import com.splitit.sdk.model.TerminalGatewayDatas;
import com.splitit.sdk.model.Terminals;
import com.splitit.sdk.model.TestModes;
import com.splitit.sdk.model.TransferDocumentDetails;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;

/**
 * InstallmentPlans
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-05-06T09:33:27.783Z")
public class InstallmentPlans  {
  @SerializedName("Id")
  private Long id = null;

  @SerializedName("TerminalId")
  private Long terminalId = null;

  @SerializedName("NumberOfInstallments")
  private Long numberOfInstallments = null;

  @SerializedName("Amount")
  private BigDecimal amount = null;

  @SerializedName("AmountBeforeFees")
  private BigDecimal amountBeforeFees = null;

  @SerializedName("Eula")
  private Boolean eula = null;

  @SerializedName("InstallmentPlanNumber")
  private String installmentPlanNumber = null;

  @SerializedName("IsFullCaptured")
  private Boolean isFullCaptured = null;

  @SerializedName("BeginLockTime")
  private OffsetDateTime beginLockTime = null;

  @SerializedName("MerchantFinancedDate")
  private OffsetDateTime merchantFinancedDate = null;

  @SerializedName("MerchantReserveReturnedDate")
  private OffsetDateTime merchantReserveReturnedDate = null;

  @SerializedName("PlannedFullCapture")
  private OffsetDateTime plannedFullCapture = null;

  @SerializedName("InstallmentPlanTerminalDataId")
  private Long installmentPlanTerminalDataId = null;

  @SerializedName("CurrencyId")
  private Long currencyId = null;

  @SerializedName("RefOrderNumber")
  private String refOrderNumber = null;

  @SerializedName("ActiveCardId")
  private Long activeCardId = null;

  @SerializedName("Base64PngSignature")
  private String base64PngSignature = null;

  @SerializedName("IsChargedBack")
  private Boolean isChargedBack = null;

  @SerializedName("AreChargesHeld")
  private Boolean areChargesHeld = null;

  @SerializedName("AutoRetry")
  private Boolean autoRetry = null;

  @SerializedName("PisMemberUniqueId")
  private String pisMemberUniqueId = null;

  @SerializedName("PisMemberId")
  private Long pisMemberId = null;

  @SerializedName("Subtotal")
  private BigDecimal subtotal = null;

  @SerializedName("Tax")
  private BigDecimal tax = null;

  @SerializedName("Shipping")
  private BigDecimal shipping = null;

  @SerializedName("SetupContextId")
  private Long setupContextId = null;

  @SerializedName("OriginalAmount")
  private BigDecimal originalAmount = null;

  @SerializedName("RefundAmount")
  private BigDecimal refundAmount = null;

  @SerializedName("ReservePoolAmount")
  private BigDecimal reservePoolAmount = null;

  @SerializedName("ShopperApprovalDateTime")
  private OffsetDateTime shopperApprovalDateTime = null;

  @SerializedName("CancellationDateTime")
  private OffsetDateTime cancellationDateTime = null;

  @SerializedName("ActivatedDate")
  private OffsetDateTime activatedDate = null;

  @SerializedName("DeActivatedDate")
  private OffsetDateTime deActivatedDate = null;

  @SerializedName("AmountForFunding")
  private BigDecimal amountForFunding = null;

  @SerializedName("AmountForFunding_Currency")
  private Currencies amountForFundingCurrency = null;

  @SerializedName("AmountForFunding_ExchangeRate")
  private BigDecimal amountForFundingExchangeRate = null;

  @SerializedName("AmountForFunding_TransactionCurrency")
  private BigDecimal amountForFundingTransactionCurrency = null;

  @SerializedName("ActiveCard")
  private Cards activeCard = null;

  @SerializedName("Currency")
  private Currencies currency = null;

  @SerializedName("InstallmentPlanTerminalData")
  private InstallmentPlanTerminalDatas installmentPlanTerminalData = null;

  @SerializedName("PisMember")
  private Object pisMember = null;

  @SerializedName("SetupContext")
  private InstallmentPlanSetupContexts setupContext = null;

  @SerializedName("Terminal")
  private Terminals terminal = null;

  @SerializedName("CartItems")
  private List<CartItems> cartItems = null;

  @SerializedName("EmailAuditLogs")
  private List<EmailAuditLogs> emailAuditLogs = null;

  @SerializedName("FeesDocuments")
  private List<FeesDocuments> feesDocuments = null;

  @SerializedName("FraudDetectionLogs")
  private List<FraudDetectionLogs> fraudDetectionLogs = null;

  @SerializedName("FundingCollectDocumentDetails")
  private List<FundingCollectDocumentDetails> fundingCollectDocumentDetails = null;

  @SerializedName("InstallmentPlanAuditLogs")
  private List<InstallmentPlanAuditLogs> installmentPlanAuditLogs = null;

  @SerializedName("InstallmentPlanEvents")
  private List<InstallmentPlanEvents> installmentPlanEvents = null;

  @SerializedName("InstallmentPlanStatusLogEntries")
  private List<InstallmentPlanStatusLogEntries> installmentPlanStatusLogEntries = null;

  @SerializedName("Installments")
  private List<Installments> installments = null;

  @SerializedName("ReAuthorizations")
  private List<ReAuthorizations> reAuthorizations = null;

  @SerializedName("RefundLogEntries")
  private List<RefundLogEntries> refundLogEntries = null;

  @SerializedName("TransferDocumentDetails")
  private List<TransferDocumentDetails> transferDocumentDetails = null;

  @SerializedName("ActiveTerminalDataId")
  private Long activeTerminalDataId = null;

  @SerializedName("ActiveTerminalData")
  private TerminalGatewayDatas activeTerminalData = null;

  @SerializedName("DelayResolution")
  private DelayResolution delayResolution = null;

  @SerializedName("TestMode")
  private TestModes testMode = null;

  @SerializedName("FundingTypesId")
  private MoneyFlows fundingTypesId = null;

  @SerializedName("Strategy")
  private PlanStrategy strategy = null;

  @SerializedName("Status")
  private InstallmentPlanStatus status = null;

  @SerializedName("PurchaseMethod")
  private PurchaseMethod purchaseMethod = null;

  @SerializedName("ExtendedParamsSerializedData")
  private String extendedParamsSerializedData = null;

  @SerializedName("ExtendedParams")
  private Map<String, String> extendedParams = null;

  @SerializedName("AutoCapture")
  private Boolean autoCapture = null;

  @SerializedName("Items")
  private List<CartItems> items = null;

  @SerializedName("AmountDetails")
  private AmountDetails2 amountDetails = null;

  public InstallmentPlans id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public InstallmentPlans terminalId(Long terminalId) {
    this.terminalId = terminalId;
    return this;
  }

   /**
   * Get terminalId
   * @return terminalId
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getTerminalId() {
    return terminalId;
  }

  public void setTerminalId(Long terminalId) {
    this.terminalId = terminalId;
  }

  public InstallmentPlans numberOfInstallments(Long numberOfInstallments) {
    this.numberOfInstallments = numberOfInstallments;
    return this;
  }

   /**
   * Get numberOfInstallments
   * @return numberOfInstallments
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getNumberOfInstallments() {
    return numberOfInstallments;
  }

  public void setNumberOfInstallments(Long numberOfInstallments) {
    this.numberOfInstallments = numberOfInstallments;
  }

  public InstallmentPlans amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }

  public InstallmentPlans amountBeforeFees(BigDecimal amountBeforeFees) {
    this.amountBeforeFees = amountBeforeFees;
    return this;
  }

   /**
   * Get amountBeforeFees
   * @return amountBeforeFees
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getAmountBeforeFees() {
    return amountBeforeFees;
  }

  public void setAmountBeforeFees(BigDecimal amountBeforeFees) {
    this.amountBeforeFees = amountBeforeFees;
  }

  public InstallmentPlans eula(Boolean eula) {
    this.eula = eula;
    return this;
  }

   /**
   * Get eula
   * @return eula
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isEula() {
    return eula;
  }

  public void setEula(Boolean eula) {
    this.eula = eula;
  }

  public InstallmentPlans installmentPlanNumber(String installmentPlanNumber) {
    this.installmentPlanNumber = installmentPlanNumber;
    return this;
  }

   /**
   * Get installmentPlanNumber
   * @return installmentPlanNumber
  **/
  @ApiModelProperty(value = "")
  public String getInstallmentPlanNumber() {
    return installmentPlanNumber;
  }

  public void setInstallmentPlanNumber(String installmentPlanNumber) {
    this.installmentPlanNumber = installmentPlanNumber;
  }

  public InstallmentPlans isFullCaptured(Boolean isFullCaptured) {
    this.isFullCaptured = isFullCaptured;
    return this;
  }

   /**
   * Get isFullCaptured
   * @return isFullCaptured
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isIsFullCaptured() {
    return isFullCaptured;
  }

  public void setIsFullCaptured(Boolean isFullCaptured) {
    this.isFullCaptured = isFullCaptured;
  }

  public InstallmentPlans beginLockTime(OffsetDateTime beginLockTime) {
    this.beginLockTime = beginLockTime;
    return this;
  }

   /**
   * Get beginLockTime
   * @return beginLockTime
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getBeginLockTime() {
    return beginLockTime;
  }

  public void setBeginLockTime(OffsetDateTime beginLockTime) {
    this.beginLockTime = beginLockTime;
  }

  public InstallmentPlans merchantFinancedDate(OffsetDateTime merchantFinancedDate) {
    this.merchantFinancedDate = merchantFinancedDate;
    return this;
  }

   /**
   * Get merchantFinancedDate
   * @return merchantFinancedDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getMerchantFinancedDate() {
    return merchantFinancedDate;
  }

  public void setMerchantFinancedDate(OffsetDateTime merchantFinancedDate) {
    this.merchantFinancedDate = merchantFinancedDate;
  }

  public InstallmentPlans merchantReserveReturnedDate(OffsetDateTime merchantReserveReturnedDate) {
    this.merchantReserveReturnedDate = merchantReserveReturnedDate;
    return this;
  }

   /**
   * Get merchantReserveReturnedDate
   * @return merchantReserveReturnedDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getMerchantReserveReturnedDate() {
    return merchantReserveReturnedDate;
  }

  public void setMerchantReserveReturnedDate(OffsetDateTime merchantReserveReturnedDate) {
    this.merchantReserveReturnedDate = merchantReserveReturnedDate;
  }

  public InstallmentPlans plannedFullCapture(OffsetDateTime plannedFullCapture) {
    this.plannedFullCapture = plannedFullCapture;
    return this;
  }

   /**
   * Get plannedFullCapture
   * @return plannedFullCapture
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getPlannedFullCapture() {
    return plannedFullCapture;
  }

  public void setPlannedFullCapture(OffsetDateTime plannedFullCapture) {
    this.plannedFullCapture = plannedFullCapture;
  }

  public InstallmentPlans installmentPlanTerminalDataId(Long installmentPlanTerminalDataId) {
    this.installmentPlanTerminalDataId = installmentPlanTerminalDataId;
    return this;
  }

   /**
   * Get installmentPlanTerminalDataId
   * @return installmentPlanTerminalDataId
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getInstallmentPlanTerminalDataId() {
    return installmentPlanTerminalDataId;
  }

  public void setInstallmentPlanTerminalDataId(Long installmentPlanTerminalDataId) {
    this.installmentPlanTerminalDataId = installmentPlanTerminalDataId;
  }

  public InstallmentPlans currencyId(Long currencyId) {
    this.currencyId = currencyId;
    return this;
  }

   /**
   * Get currencyId
   * @return currencyId
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getCurrencyId() {
    return currencyId;
  }

  public void setCurrencyId(Long currencyId) {
    this.currencyId = currencyId;
  }

  public InstallmentPlans refOrderNumber(String refOrderNumber) {
    this.refOrderNumber = refOrderNumber;
    return this;
  }

   /**
   * Get refOrderNumber
   * @return refOrderNumber
  **/
  @ApiModelProperty(value = "")
  public String getRefOrderNumber() {
    return refOrderNumber;
  }

  public void setRefOrderNumber(String refOrderNumber) {
    this.refOrderNumber = refOrderNumber;
  }

  public InstallmentPlans activeCardId(Long activeCardId) {
    this.activeCardId = activeCardId;
    return this;
  }

   /**
   * Get activeCardId
   * @return activeCardId
  **/
  @ApiModelProperty(value = "")
  public Long getActiveCardId() {
    return activeCardId;
  }

  public void setActiveCardId(Long activeCardId) {
    this.activeCardId = activeCardId;
  }

  public InstallmentPlans base64PngSignature(String base64PngSignature) {
    this.base64PngSignature = base64PngSignature;
    return this;
  }

   /**
   * Get base64PngSignature
   * @return base64PngSignature
  **/
  @ApiModelProperty(value = "")
  public String getBase64PngSignature() {
    return base64PngSignature;
  }

  public void setBase64PngSignature(String base64PngSignature) {
    this.base64PngSignature = base64PngSignature;
  }

  public InstallmentPlans isChargedBack(Boolean isChargedBack) {
    this.isChargedBack = isChargedBack;
    return this;
  }

   /**
   * Get isChargedBack
   * @return isChargedBack
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isIsChargedBack() {
    return isChargedBack;
  }

  public void setIsChargedBack(Boolean isChargedBack) {
    this.isChargedBack = isChargedBack;
  }

  public InstallmentPlans areChargesHeld(Boolean areChargesHeld) {
    this.areChargesHeld = areChargesHeld;
    return this;
  }

   /**
   * Get areChargesHeld
   * @return areChargesHeld
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isAreChargesHeld() {
    return areChargesHeld;
  }

  public void setAreChargesHeld(Boolean areChargesHeld) {
    this.areChargesHeld = areChargesHeld;
  }

  public InstallmentPlans autoRetry(Boolean autoRetry) {
    this.autoRetry = autoRetry;
    return this;
  }

   /**
   * Get autoRetry
   * @return autoRetry
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isAutoRetry() {
    return autoRetry;
  }

  public void setAutoRetry(Boolean autoRetry) {
    this.autoRetry = autoRetry;
  }

  public InstallmentPlans pisMemberUniqueId(String pisMemberUniqueId) {
    this.pisMemberUniqueId = pisMemberUniqueId;
    return this;
  }

   /**
   * Get pisMemberUniqueId
   * @return pisMemberUniqueId
  **/
  @ApiModelProperty(value = "")
  public String getPisMemberUniqueId() {
    return pisMemberUniqueId;
  }

  public void setPisMemberUniqueId(String pisMemberUniqueId) {
    this.pisMemberUniqueId = pisMemberUniqueId;
  }

  public InstallmentPlans pisMemberId(Long pisMemberId) {
    this.pisMemberId = pisMemberId;
    return this;
  }

   /**
   * Get pisMemberId
   * @return pisMemberId
  **/
  @ApiModelProperty(value = "")
  public Long getPisMemberId() {
    return pisMemberId;
  }

  public void setPisMemberId(Long pisMemberId) {
    this.pisMemberId = pisMemberId;
  }

  public InstallmentPlans subtotal(BigDecimal subtotal) {
    this.subtotal = subtotal;
    return this;
  }

   /**
   * Get subtotal
   * @return subtotal
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getSubtotal() {
    return subtotal;
  }

  public void setSubtotal(BigDecimal subtotal) {
    this.subtotal = subtotal;
  }

  public InstallmentPlans tax(BigDecimal tax) {
    this.tax = tax;
    return this;
  }

   /**
   * Get tax
   * @return tax
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getTax() {
    return tax;
  }

  public void setTax(BigDecimal tax) {
    this.tax = tax;
  }

  public InstallmentPlans shipping(BigDecimal shipping) {
    this.shipping = shipping;
    return this;
  }

   /**
   * Get shipping
   * @return shipping
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getShipping() {
    return shipping;
  }

  public void setShipping(BigDecimal shipping) {
    this.shipping = shipping;
  }

  public InstallmentPlans setupContextId(Long setupContextId) {
    this.setupContextId = setupContextId;
    return this;
  }

   /**
   * Get setupContextId
   * @return setupContextId
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getSetupContextId() {
    return setupContextId;
  }

  public void setSetupContextId(Long setupContextId) {
    this.setupContextId = setupContextId;
  }

  public InstallmentPlans originalAmount(BigDecimal originalAmount) {
    this.originalAmount = originalAmount;
    return this;
  }

   /**
   * Get originalAmount
   * @return originalAmount
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getOriginalAmount() {
    return originalAmount;
  }

  public void setOriginalAmount(BigDecimal originalAmount) {
    this.originalAmount = originalAmount;
  }

  public InstallmentPlans refundAmount(BigDecimal refundAmount) {
    this.refundAmount = refundAmount;
    return this;
  }

   /**
   * Get refundAmount
   * @return refundAmount
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getRefundAmount() {
    return refundAmount;
  }

  public void setRefundAmount(BigDecimal refundAmount) {
    this.refundAmount = refundAmount;
  }

  public InstallmentPlans reservePoolAmount(BigDecimal reservePoolAmount) {
    this.reservePoolAmount = reservePoolAmount;
    return this;
  }

   /**
   * Get reservePoolAmount
   * @return reservePoolAmount
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getReservePoolAmount() {
    return reservePoolAmount;
  }

  public void setReservePoolAmount(BigDecimal reservePoolAmount) {
    this.reservePoolAmount = reservePoolAmount;
  }

  public InstallmentPlans shopperApprovalDateTime(OffsetDateTime shopperApprovalDateTime) {
    this.shopperApprovalDateTime = shopperApprovalDateTime;
    return this;
  }

   /**
   * Get shopperApprovalDateTime
   * @return shopperApprovalDateTime
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getShopperApprovalDateTime() {
    return shopperApprovalDateTime;
  }

  public void setShopperApprovalDateTime(OffsetDateTime shopperApprovalDateTime) {
    this.shopperApprovalDateTime = shopperApprovalDateTime;
  }

  public InstallmentPlans cancellationDateTime(OffsetDateTime cancellationDateTime) {
    this.cancellationDateTime = cancellationDateTime;
    return this;
  }

   /**
   * Get cancellationDateTime
   * @return cancellationDateTime
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCancellationDateTime() {
    return cancellationDateTime;
  }

  public void setCancellationDateTime(OffsetDateTime cancellationDateTime) {
    this.cancellationDateTime = cancellationDateTime;
  }

  public InstallmentPlans activatedDate(OffsetDateTime activatedDate) {
    this.activatedDate = activatedDate;
    return this;
  }

   /**
   * Get activatedDate
   * @return activatedDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getActivatedDate() {
    return activatedDate;
  }

  public void setActivatedDate(OffsetDateTime activatedDate) {
    this.activatedDate = activatedDate;
  }

  public InstallmentPlans deActivatedDate(OffsetDateTime deActivatedDate) {
    this.deActivatedDate = deActivatedDate;
    return this;
  }

   /**
   * Get deActivatedDate
   * @return deActivatedDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getDeActivatedDate() {
    return deActivatedDate;
  }

  public void setDeActivatedDate(OffsetDateTime deActivatedDate) {
    this.deActivatedDate = deActivatedDate;
  }

  public InstallmentPlans amountForFunding(BigDecimal amountForFunding) {
    this.amountForFunding = amountForFunding;
    return this;
  }

   /**
   * Get amountForFunding
   * @return amountForFunding
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getAmountForFunding() {
    return amountForFunding;
  }

  public void setAmountForFunding(BigDecimal amountForFunding) {
    this.amountForFunding = amountForFunding;
  }

  public InstallmentPlans amountForFundingCurrency(Currencies amountForFundingCurrency) {
    this.amountForFundingCurrency = amountForFundingCurrency;
    return this;
  }

   /**
   * Get amountForFundingCurrency
   * @return amountForFundingCurrency
  **/
  @ApiModelProperty(value = "")
  public Currencies getAmountForFundingCurrency() {
    return amountForFundingCurrency;
  }

  public void setAmountForFundingCurrency(Currencies amountForFundingCurrency) {
    this.amountForFundingCurrency = amountForFundingCurrency;
  }

  public InstallmentPlans amountForFundingExchangeRate(BigDecimal amountForFundingExchangeRate) {
    this.amountForFundingExchangeRate = amountForFundingExchangeRate;
    return this;
  }

   /**
   * Get amountForFundingExchangeRate
   * @return amountForFundingExchangeRate
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getAmountForFundingExchangeRate() {
    return amountForFundingExchangeRate;
  }

  public void setAmountForFundingExchangeRate(BigDecimal amountForFundingExchangeRate) {
    this.amountForFundingExchangeRate = amountForFundingExchangeRate;
  }

  public InstallmentPlans amountForFundingTransactionCurrency(BigDecimal amountForFundingTransactionCurrency) {
    this.amountForFundingTransactionCurrency = amountForFundingTransactionCurrency;
    return this;
  }

   /**
   * Get amountForFundingTransactionCurrency
   * @return amountForFundingTransactionCurrency
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getAmountForFundingTransactionCurrency() {
    return amountForFundingTransactionCurrency;
  }

  public void setAmountForFundingTransactionCurrency(BigDecimal amountForFundingTransactionCurrency) {
    this.amountForFundingTransactionCurrency = amountForFundingTransactionCurrency;
  }

  public InstallmentPlans activeCard(Cards activeCard) {
    this.activeCard = activeCard;
    return this;
  }

   /**
   * Get activeCard
   * @return activeCard
  **/
  @ApiModelProperty(value = "")
  public Cards getActiveCard() {
    return activeCard;
  }

  public void setActiveCard(Cards activeCard) {
    this.activeCard = activeCard;
  }

  public InstallmentPlans currency(Currencies currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public Currencies getCurrency() {
    return currency;
  }

  public void setCurrency(Currencies currency) {
    this.currency = currency;
  }

  public InstallmentPlans installmentPlanTerminalData(InstallmentPlanTerminalDatas installmentPlanTerminalData) {
    this.installmentPlanTerminalData = installmentPlanTerminalData;
    return this;
  }

   /**
   * Get installmentPlanTerminalData
   * @return installmentPlanTerminalData
  **/
  @ApiModelProperty(value = "")
  public InstallmentPlanTerminalDatas getInstallmentPlanTerminalData() {
    return installmentPlanTerminalData;
  }

  public void setInstallmentPlanTerminalData(InstallmentPlanTerminalDatas installmentPlanTerminalData) {
    this.installmentPlanTerminalData = installmentPlanTerminalData;
  }

  public InstallmentPlans pisMember(Object pisMember) {
    this.pisMember = pisMember;
    return this;
  }

   /**
   * Get pisMember
   * @return pisMember
  **/
  @ApiModelProperty(value = "")
  public Object getPisMember() {
    return pisMember;
  }

  public void setPisMember(Object pisMember) {
    this.pisMember = pisMember;
  }

  public InstallmentPlans setupContext(InstallmentPlanSetupContexts setupContext) {
    this.setupContext = setupContext;
    return this;
  }

   /**
   * Get setupContext
   * @return setupContext
  **/
  @ApiModelProperty(value = "")
  public InstallmentPlanSetupContexts getSetupContext() {
    return setupContext;
  }

  public void setSetupContext(InstallmentPlanSetupContexts setupContext) {
    this.setupContext = setupContext;
  }

  public InstallmentPlans terminal(Terminals terminal) {
    this.terminal = terminal;
    return this;
  }

   /**
   * Get terminal
   * @return terminal
  **/
  @ApiModelProperty(value = "")
  public Terminals getTerminal() {
    return terminal;
  }

  public void setTerminal(Terminals terminal) {
    this.terminal = terminal;
  }

  public InstallmentPlans cartItems(List<CartItems> cartItems) {
    this.cartItems = cartItems;
    return this;
  }

  public InstallmentPlans addCartItemsItem(CartItems cartItemsItem) {
    if (this.cartItems == null) {
      this.cartItems = new ArrayList<CartItems>();
    }
    this.cartItems.add(cartItemsItem);
    return this;
  }

   /**
   * Get cartItems
   * @return cartItems
  **/
  @ApiModelProperty(value = "")
  public List<CartItems> getCartItems() {
    return cartItems;
  }

  public void setCartItems(List<CartItems> cartItems) {
    this.cartItems = cartItems;
  }

  public InstallmentPlans emailAuditLogs(List<EmailAuditLogs> emailAuditLogs) {
    this.emailAuditLogs = emailAuditLogs;
    return this;
  }

  public InstallmentPlans addEmailAuditLogsItem(EmailAuditLogs emailAuditLogsItem) {
    if (this.emailAuditLogs == null) {
      this.emailAuditLogs = new ArrayList<EmailAuditLogs>();
    }
    this.emailAuditLogs.add(emailAuditLogsItem);
    return this;
  }

   /**
   * Get emailAuditLogs
   * @return emailAuditLogs
  **/
  @ApiModelProperty(value = "")
  public List<EmailAuditLogs> getEmailAuditLogs() {
    return emailAuditLogs;
  }

  public void setEmailAuditLogs(List<EmailAuditLogs> emailAuditLogs) {
    this.emailAuditLogs = emailAuditLogs;
  }

  public InstallmentPlans feesDocuments(List<FeesDocuments> feesDocuments) {
    this.feesDocuments = feesDocuments;
    return this;
  }

  public InstallmentPlans addFeesDocumentsItem(FeesDocuments feesDocumentsItem) {
    if (this.feesDocuments == null) {
      this.feesDocuments = new ArrayList<FeesDocuments>();
    }
    this.feesDocuments.add(feesDocumentsItem);
    return this;
  }

   /**
   * Get feesDocuments
   * @return feesDocuments
  **/
  @ApiModelProperty(value = "")
  public List<FeesDocuments> getFeesDocuments() {
    return feesDocuments;
  }

  public void setFeesDocuments(List<FeesDocuments> feesDocuments) {
    this.feesDocuments = feesDocuments;
  }

  public InstallmentPlans fraudDetectionLogs(List<FraudDetectionLogs> fraudDetectionLogs) {
    this.fraudDetectionLogs = fraudDetectionLogs;
    return this;
  }

  public InstallmentPlans addFraudDetectionLogsItem(FraudDetectionLogs fraudDetectionLogsItem) {
    if (this.fraudDetectionLogs == null) {
      this.fraudDetectionLogs = new ArrayList<FraudDetectionLogs>();
    }
    this.fraudDetectionLogs.add(fraudDetectionLogsItem);
    return this;
  }

   /**
   * Get fraudDetectionLogs
   * @return fraudDetectionLogs
  **/
  @ApiModelProperty(value = "")
  public List<FraudDetectionLogs> getFraudDetectionLogs() {
    return fraudDetectionLogs;
  }

  public void setFraudDetectionLogs(List<FraudDetectionLogs> fraudDetectionLogs) {
    this.fraudDetectionLogs = fraudDetectionLogs;
  }

  public InstallmentPlans fundingCollectDocumentDetails(List<FundingCollectDocumentDetails> fundingCollectDocumentDetails) {
    this.fundingCollectDocumentDetails = fundingCollectDocumentDetails;
    return this;
  }

  public InstallmentPlans addFundingCollectDocumentDetailsItem(FundingCollectDocumentDetails fundingCollectDocumentDetailsItem) {
    if (this.fundingCollectDocumentDetails == null) {
      this.fundingCollectDocumentDetails = new ArrayList<FundingCollectDocumentDetails>();
    }
    this.fundingCollectDocumentDetails.add(fundingCollectDocumentDetailsItem);
    return this;
  }

   /**
   * Get fundingCollectDocumentDetails
   * @return fundingCollectDocumentDetails
  **/
  @ApiModelProperty(value = "")
  public List<FundingCollectDocumentDetails> getFundingCollectDocumentDetails() {
    return fundingCollectDocumentDetails;
  }

  public void setFundingCollectDocumentDetails(List<FundingCollectDocumentDetails> fundingCollectDocumentDetails) {
    this.fundingCollectDocumentDetails = fundingCollectDocumentDetails;
  }

  public InstallmentPlans installmentPlanAuditLogs(List<InstallmentPlanAuditLogs> installmentPlanAuditLogs) {
    this.installmentPlanAuditLogs = installmentPlanAuditLogs;
    return this;
  }

  public InstallmentPlans addInstallmentPlanAuditLogsItem(InstallmentPlanAuditLogs installmentPlanAuditLogsItem) {
    if (this.installmentPlanAuditLogs == null) {
      this.installmentPlanAuditLogs = new ArrayList<InstallmentPlanAuditLogs>();
    }
    this.installmentPlanAuditLogs.add(installmentPlanAuditLogsItem);
    return this;
  }

   /**
   * Get installmentPlanAuditLogs
   * @return installmentPlanAuditLogs
  **/
  @ApiModelProperty(value = "")
  public List<InstallmentPlanAuditLogs> getInstallmentPlanAuditLogs() {
    return installmentPlanAuditLogs;
  }

  public void setInstallmentPlanAuditLogs(List<InstallmentPlanAuditLogs> installmentPlanAuditLogs) {
    this.installmentPlanAuditLogs = installmentPlanAuditLogs;
  }

  public InstallmentPlans installmentPlanEvents(List<InstallmentPlanEvents> installmentPlanEvents) {
    this.installmentPlanEvents = installmentPlanEvents;
    return this;
  }

  public InstallmentPlans addInstallmentPlanEventsItem(InstallmentPlanEvents installmentPlanEventsItem) {
    if (this.installmentPlanEvents == null) {
      this.installmentPlanEvents = new ArrayList<InstallmentPlanEvents>();
    }
    this.installmentPlanEvents.add(installmentPlanEventsItem);
    return this;
  }

   /**
   * Get installmentPlanEvents
   * @return installmentPlanEvents
  **/
  @ApiModelProperty(value = "")
  public List<InstallmentPlanEvents> getInstallmentPlanEvents() {
    return installmentPlanEvents;
  }

  public void setInstallmentPlanEvents(List<InstallmentPlanEvents> installmentPlanEvents) {
    this.installmentPlanEvents = installmentPlanEvents;
  }

  public InstallmentPlans installmentPlanStatusLogEntries(List<InstallmentPlanStatusLogEntries> installmentPlanStatusLogEntries) {
    this.installmentPlanStatusLogEntries = installmentPlanStatusLogEntries;
    return this;
  }

  public InstallmentPlans addInstallmentPlanStatusLogEntriesItem(InstallmentPlanStatusLogEntries installmentPlanStatusLogEntriesItem) {
    if (this.installmentPlanStatusLogEntries == null) {
      this.installmentPlanStatusLogEntries = new ArrayList<InstallmentPlanStatusLogEntries>();
    }
    this.installmentPlanStatusLogEntries.add(installmentPlanStatusLogEntriesItem);
    return this;
  }

   /**
   * Get installmentPlanStatusLogEntries
   * @return installmentPlanStatusLogEntries
  **/
  @ApiModelProperty(value = "")
  public List<InstallmentPlanStatusLogEntries> getInstallmentPlanStatusLogEntries() {
    return installmentPlanStatusLogEntries;
  }

  public void setInstallmentPlanStatusLogEntries(List<InstallmentPlanStatusLogEntries> installmentPlanStatusLogEntries) {
    this.installmentPlanStatusLogEntries = installmentPlanStatusLogEntries;
  }

  public InstallmentPlans installments(List<Installments> installments) {
    this.installments = installments;
    return this;
  }

  public InstallmentPlans addInstallmentsItem(Installments installmentsItem) {
    if (this.installments == null) {
      this.installments = new ArrayList<Installments>();
    }
    this.installments.add(installmentsItem);
    return this;
  }

   /**
   * Get installments
   * @return installments
  **/
  @ApiModelProperty(value = "")
  public List<Installments> getInstallments() {
    return installments;
  }

  public void setInstallments(List<Installments> installments) {
    this.installments = installments;
  }

  public InstallmentPlans reAuthorizations(List<ReAuthorizations> reAuthorizations) {
    this.reAuthorizations = reAuthorizations;
    return this;
  }

  public InstallmentPlans addReAuthorizationsItem(ReAuthorizations reAuthorizationsItem) {
    if (this.reAuthorizations == null) {
      this.reAuthorizations = new ArrayList<ReAuthorizations>();
    }
    this.reAuthorizations.add(reAuthorizationsItem);
    return this;
  }

   /**
   * Get reAuthorizations
   * @return reAuthorizations
  **/
  @ApiModelProperty(value = "")
  public List<ReAuthorizations> getReAuthorizations() {
    return reAuthorizations;
  }

  public void setReAuthorizations(List<ReAuthorizations> reAuthorizations) {
    this.reAuthorizations = reAuthorizations;
  }

  public InstallmentPlans refundLogEntries(List<RefundLogEntries> refundLogEntries) {
    this.refundLogEntries = refundLogEntries;
    return this;
  }

  public InstallmentPlans addRefundLogEntriesItem(RefundLogEntries refundLogEntriesItem) {
    if (this.refundLogEntries == null) {
      this.refundLogEntries = new ArrayList<RefundLogEntries>();
    }
    this.refundLogEntries.add(refundLogEntriesItem);
    return this;
  }

   /**
   * Get refundLogEntries
   * @return refundLogEntries
  **/
  @ApiModelProperty(value = "")
  public List<RefundLogEntries> getRefundLogEntries() {
    return refundLogEntries;
  }

  public void setRefundLogEntries(List<RefundLogEntries> refundLogEntries) {
    this.refundLogEntries = refundLogEntries;
  }

  public InstallmentPlans transferDocumentDetails(List<TransferDocumentDetails> transferDocumentDetails) {
    this.transferDocumentDetails = transferDocumentDetails;
    return this;
  }

  public InstallmentPlans addTransferDocumentDetailsItem(TransferDocumentDetails transferDocumentDetailsItem) {
    if (this.transferDocumentDetails == null) {
      this.transferDocumentDetails = new ArrayList<TransferDocumentDetails>();
    }
    this.transferDocumentDetails.add(transferDocumentDetailsItem);
    return this;
  }

   /**
   * Get transferDocumentDetails
   * @return transferDocumentDetails
  **/
  @ApiModelProperty(value = "")
  public List<TransferDocumentDetails> getTransferDocumentDetails() {
    return transferDocumentDetails;
  }

  public void setTransferDocumentDetails(List<TransferDocumentDetails> transferDocumentDetails) {
    this.transferDocumentDetails = transferDocumentDetails;
  }

  public InstallmentPlans activeTerminalDataId(Long activeTerminalDataId) {
    this.activeTerminalDataId = activeTerminalDataId;
    return this;
  }

   /**
   * Get activeTerminalDataId
   * @return activeTerminalDataId
  **/
  @ApiModelProperty(value = "")
  public Long getActiveTerminalDataId() {
    return activeTerminalDataId;
  }

  public void setActiveTerminalDataId(Long activeTerminalDataId) {
    this.activeTerminalDataId = activeTerminalDataId;
  }

  public InstallmentPlans activeTerminalData(TerminalGatewayDatas activeTerminalData) {
    this.activeTerminalData = activeTerminalData;
    return this;
  }

   /**
   * Get activeTerminalData
   * @return activeTerminalData
  **/
  @ApiModelProperty(value = "")
  public TerminalGatewayDatas getActiveTerminalData() {
    return activeTerminalData;
  }

  public void setActiveTerminalData(TerminalGatewayDatas activeTerminalData) {
    this.activeTerminalData = activeTerminalData;
  }

  public InstallmentPlans delayResolution(DelayResolution delayResolution) {
    this.delayResolution = delayResolution;
    return this;
  }

   /**
   * Get delayResolution
   * @return delayResolution
  **/
  @ApiModelProperty(value = "")
  public DelayResolution getDelayResolution() {
    return delayResolution;
  }

  public void setDelayResolution(DelayResolution delayResolution) {
    this.delayResolution = delayResolution;
  }

  public InstallmentPlans testMode(TestModes testMode) {
    this.testMode = testMode;
    return this;
  }

   /**
   * Get testMode
   * @return testMode
  **/
  @ApiModelProperty(required = true, value = "")
  public TestModes getTestMode() {
    return testMode;
  }

  public void setTestMode(TestModes testMode) {
    this.testMode = testMode;
  }

  public InstallmentPlans fundingTypesId(MoneyFlows fundingTypesId) {
    this.fundingTypesId = fundingTypesId;
    return this;
  }

   /**
   * Get fundingTypesId
   * @return fundingTypesId
  **/
  @ApiModelProperty(required = true, value = "")
  public MoneyFlows getFundingTypesId() {
    return fundingTypesId;
  }

  public void setFundingTypesId(MoneyFlows fundingTypesId) {
    this.fundingTypesId = fundingTypesId;
  }

  public InstallmentPlans strategy(PlanStrategy strategy) {
    this.strategy = strategy;
    return this;
  }

   /**
   * Get strategy
   * @return strategy
  **/
  @ApiModelProperty(required = true, value = "")
  public PlanStrategy getStrategy() {
    return strategy;
  }

  public void setStrategy(PlanStrategy strategy) {
    this.strategy = strategy;
  }

  public InstallmentPlans status(InstallmentPlanStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(required = true, value = "")
  public InstallmentPlanStatus getStatus() {
    return status;
  }

  public void setStatus(InstallmentPlanStatus status) {
    this.status = status;
  }

  public InstallmentPlans purchaseMethod(PurchaseMethod purchaseMethod) {
    this.purchaseMethod = purchaseMethod;
    return this;
  }

   /**
   * Get purchaseMethod
   * @return purchaseMethod
  **/
  @ApiModelProperty(required = true, value = "")
  public PurchaseMethod getPurchaseMethod() {
    return purchaseMethod;
  }

  public void setPurchaseMethod(PurchaseMethod purchaseMethod) {
    this.purchaseMethod = purchaseMethod;
  }

  public InstallmentPlans extendedParamsSerializedData(String extendedParamsSerializedData) {
    this.extendedParamsSerializedData = extendedParamsSerializedData;
    return this;
  }

   /**
   * Get extendedParamsSerializedData
   * @return extendedParamsSerializedData
  **/
  @ApiModelProperty(value = "")
  public String getExtendedParamsSerializedData() {
    return extendedParamsSerializedData;
  }

  public void setExtendedParamsSerializedData(String extendedParamsSerializedData) {
    this.extendedParamsSerializedData = extendedParamsSerializedData;
  }

  public InstallmentPlans extendedParams(Map<String, String> extendedParams) {
    this.extendedParams = extendedParams;
    return this;
  }

  public InstallmentPlans putExtendedParamsItem(String key, String extendedParamsItem) {
    if (this.extendedParams == null) {
      this.extendedParams = new HashMap<String, String>();
    }
    this.extendedParams.put(key, extendedParamsItem);
    return this;
  }

   /**
   * Get extendedParams
   * @return extendedParams
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getExtendedParams() {
    return extendedParams;
  }

  public void setExtendedParams(Map<String, String> extendedParams) {
    this.extendedParams = extendedParams;
  }

  public InstallmentPlans autoCapture(Boolean autoCapture) {
    this.autoCapture = autoCapture;
    return this;
  }

   /**
   * Get autoCapture
   * @return autoCapture
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isAutoCapture() {
    return autoCapture;
  }

  public void setAutoCapture(Boolean autoCapture) {
    this.autoCapture = autoCapture;
  }

  public InstallmentPlans items(List<CartItems> items) {
    this.items = items;
    return this;
  }

  public InstallmentPlans addItemsItem(CartItems itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<CartItems>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * Get items
   * @return items
  **/
  @ApiModelProperty(value = "")
  public List<CartItems> getItems() {
    return items;
  }

  public void setItems(List<CartItems> items) {
    this.items = items;
  }

  public InstallmentPlans amountDetails(AmountDetails2 amountDetails) {
    this.amountDetails = amountDetails;
    return this;
  }

   /**
   * Get amountDetails
   * @return amountDetails
  **/
  @ApiModelProperty(value = "")
  public AmountDetails2 getAmountDetails() {
    return amountDetails;
  }

  public void setAmountDetails(AmountDetails2 amountDetails) {
    this.amountDetails = amountDetails;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstallmentPlans installmentPlans = (InstallmentPlans) o;
    return Objects.equals(this.id, installmentPlans.id) &&
        Objects.equals(this.terminalId, installmentPlans.terminalId) &&
        Objects.equals(this.numberOfInstallments, installmentPlans.numberOfInstallments) &&
        Objects.equals(this.amount, installmentPlans.amount) &&
        Objects.equals(this.amountBeforeFees, installmentPlans.amountBeforeFees) &&
        Objects.equals(this.eula, installmentPlans.eula) &&
        Objects.equals(this.installmentPlanNumber, installmentPlans.installmentPlanNumber) &&
        Objects.equals(this.isFullCaptured, installmentPlans.isFullCaptured) &&
        Objects.equals(this.beginLockTime, installmentPlans.beginLockTime) &&
        Objects.equals(this.merchantFinancedDate, installmentPlans.merchantFinancedDate) &&
        Objects.equals(this.merchantReserveReturnedDate, installmentPlans.merchantReserveReturnedDate) &&
        Objects.equals(this.plannedFullCapture, installmentPlans.plannedFullCapture) &&
        Objects.equals(this.installmentPlanTerminalDataId, installmentPlans.installmentPlanTerminalDataId) &&
        Objects.equals(this.currencyId, installmentPlans.currencyId) &&
        Objects.equals(this.refOrderNumber, installmentPlans.refOrderNumber) &&
        Objects.equals(this.activeCardId, installmentPlans.activeCardId) &&
        Objects.equals(this.base64PngSignature, installmentPlans.base64PngSignature) &&
        Objects.equals(this.isChargedBack, installmentPlans.isChargedBack) &&
        Objects.equals(this.areChargesHeld, installmentPlans.areChargesHeld) &&
        Objects.equals(this.autoRetry, installmentPlans.autoRetry) &&
        Objects.equals(this.pisMemberUniqueId, installmentPlans.pisMemberUniqueId) &&
        Objects.equals(this.pisMemberId, installmentPlans.pisMemberId) &&
        Objects.equals(this.subtotal, installmentPlans.subtotal) &&
        Objects.equals(this.tax, installmentPlans.tax) &&
        Objects.equals(this.shipping, installmentPlans.shipping) &&
        Objects.equals(this.setupContextId, installmentPlans.setupContextId) &&
        Objects.equals(this.originalAmount, installmentPlans.originalAmount) &&
        Objects.equals(this.refundAmount, installmentPlans.refundAmount) &&
        Objects.equals(this.reservePoolAmount, installmentPlans.reservePoolAmount) &&
        Objects.equals(this.shopperApprovalDateTime, installmentPlans.shopperApprovalDateTime) &&
        Objects.equals(this.cancellationDateTime, installmentPlans.cancellationDateTime) &&
        Objects.equals(this.activatedDate, installmentPlans.activatedDate) &&
        Objects.equals(this.deActivatedDate, installmentPlans.deActivatedDate) &&
        Objects.equals(this.amountForFunding, installmentPlans.amountForFunding) &&
        Objects.equals(this.amountForFundingCurrency, installmentPlans.amountForFundingCurrency) &&
        Objects.equals(this.amountForFundingExchangeRate, installmentPlans.amountForFundingExchangeRate) &&
        Objects.equals(this.amountForFundingTransactionCurrency, installmentPlans.amountForFundingTransactionCurrency) &&
        Objects.equals(this.activeCard, installmentPlans.activeCard) &&
        Objects.equals(this.currency, installmentPlans.currency) &&
        Objects.equals(this.installmentPlanTerminalData, installmentPlans.installmentPlanTerminalData) &&
        Objects.equals(this.pisMember, installmentPlans.pisMember) &&
        Objects.equals(this.setupContext, installmentPlans.setupContext) &&
        Objects.equals(this.terminal, installmentPlans.terminal) &&
        Objects.equals(this.cartItems, installmentPlans.cartItems) &&
        Objects.equals(this.emailAuditLogs, installmentPlans.emailAuditLogs) &&
        Objects.equals(this.feesDocuments, installmentPlans.feesDocuments) &&
        Objects.equals(this.fraudDetectionLogs, installmentPlans.fraudDetectionLogs) &&
        Objects.equals(this.fundingCollectDocumentDetails, installmentPlans.fundingCollectDocumentDetails) &&
        Objects.equals(this.installmentPlanAuditLogs, installmentPlans.installmentPlanAuditLogs) &&
        Objects.equals(this.installmentPlanEvents, installmentPlans.installmentPlanEvents) &&
        Objects.equals(this.installmentPlanStatusLogEntries, installmentPlans.installmentPlanStatusLogEntries) &&
        Objects.equals(this.installments, installmentPlans.installments) &&
        Objects.equals(this.reAuthorizations, installmentPlans.reAuthorizations) &&
        Objects.equals(this.refundLogEntries, installmentPlans.refundLogEntries) &&
        Objects.equals(this.transferDocumentDetails, installmentPlans.transferDocumentDetails) &&
        Objects.equals(this.activeTerminalDataId, installmentPlans.activeTerminalDataId) &&
        Objects.equals(this.activeTerminalData, installmentPlans.activeTerminalData) &&
        Objects.equals(this.delayResolution, installmentPlans.delayResolution) &&
        Objects.equals(this.testMode, installmentPlans.testMode) &&
        Objects.equals(this.fundingTypesId, installmentPlans.fundingTypesId) &&
        Objects.equals(this.strategy, installmentPlans.strategy) &&
        Objects.equals(this.status, installmentPlans.status) &&
        Objects.equals(this.purchaseMethod, installmentPlans.purchaseMethod) &&
        Objects.equals(this.extendedParamsSerializedData, installmentPlans.extendedParamsSerializedData) &&
        Objects.equals(this.extendedParams, installmentPlans.extendedParams) &&
        Objects.equals(this.autoCapture, installmentPlans.autoCapture) &&
        Objects.equals(this.items, installmentPlans.items) &&
        Objects.equals(this.amountDetails, installmentPlans.amountDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, terminalId, numberOfInstallments, amount, amountBeforeFees, eula, installmentPlanNumber, isFullCaptured, beginLockTime, merchantFinancedDate, merchantReserveReturnedDate, plannedFullCapture, installmentPlanTerminalDataId, currencyId, refOrderNumber, activeCardId, base64PngSignature, isChargedBack, areChargesHeld, autoRetry, pisMemberUniqueId, pisMemberId, subtotal, tax, shipping, setupContextId, originalAmount, refundAmount, reservePoolAmount, shopperApprovalDateTime, cancellationDateTime, activatedDate, deActivatedDate, amountForFunding, amountForFundingCurrency, amountForFundingExchangeRate, amountForFundingTransactionCurrency, activeCard, currency, installmentPlanTerminalData, pisMember, setupContext, terminal, cartItems, emailAuditLogs, feesDocuments, fraudDetectionLogs, fundingCollectDocumentDetails, installmentPlanAuditLogs, installmentPlanEvents, installmentPlanStatusLogEntries, installments, reAuthorizations, refundLogEntries, transferDocumentDetails, activeTerminalDataId, activeTerminalData, delayResolution, testMode, fundingTypesId, strategy, status, purchaseMethod, extendedParamsSerializedData, extendedParams, autoCapture, items, amountDetails);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstallmentPlans {\n");
    
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    terminalId: ").append(toIndentedString(terminalId)).append("\n");
    sb.append("    numberOfInstallments: ").append(toIndentedString(numberOfInstallments)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    amountBeforeFees: ").append(toIndentedString(amountBeforeFees)).append("\n");
    sb.append("    eula: ").append(toIndentedString(eula)).append("\n");
    sb.append("    installmentPlanNumber: ").append(toIndentedString(installmentPlanNumber)).append("\n");
    sb.append("    isFullCaptured: ").append(toIndentedString(isFullCaptured)).append("\n");
    sb.append("    beginLockTime: ").append(toIndentedString(beginLockTime)).append("\n");
    sb.append("    merchantFinancedDate: ").append(toIndentedString(merchantFinancedDate)).append("\n");
    sb.append("    merchantReserveReturnedDate: ").append(toIndentedString(merchantReserveReturnedDate)).append("\n");
    sb.append("    plannedFullCapture: ").append(toIndentedString(plannedFullCapture)).append("\n");
    sb.append("    installmentPlanTerminalDataId: ").append(toIndentedString(installmentPlanTerminalDataId)).append("\n");
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    refOrderNumber: ").append(toIndentedString(refOrderNumber)).append("\n");
    sb.append("    activeCardId: ").append(toIndentedString(activeCardId)).append("\n");
    sb.append("    base64PngSignature: ").append(toIndentedString(base64PngSignature)).append("\n");
    sb.append("    isChargedBack: ").append(toIndentedString(isChargedBack)).append("\n");
    sb.append("    areChargesHeld: ").append(toIndentedString(areChargesHeld)).append("\n");
    sb.append("    autoRetry: ").append(toIndentedString(autoRetry)).append("\n");
    sb.append("    pisMemberUniqueId: ").append(toIndentedString(pisMemberUniqueId)).append("\n");
    sb.append("    pisMemberId: ").append(toIndentedString(pisMemberId)).append("\n");
    sb.append("    subtotal: ").append(toIndentedString(subtotal)).append("\n");
    sb.append("    tax: ").append(toIndentedString(tax)).append("\n");
    sb.append("    shipping: ").append(toIndentedString(shipping)).append("\n");
    sb.append("    setupContextId: ").append(toIndentedString(setupContextId)).append("\n");
    sb.append("    originalAmount: ").append(toIndentedString(originalAmount)).append("\n");
    sb.append("    refundAmount: ").append(toIndentedString(refundAmount)).append("\n");
    sb.append("    reservePoolAmount: ").append(toIndentedString(reservePoolAmount)).append("\n");
    sb.append("    shopperApprovalDateTime: ").append(toIndentedString(shopperApprovalDateTime)).append("\n");
    sb.append("    cancellationDateTime: ").append(toIndentedString(cancellationDateTime)).append("\n");
    sb.append("    activatedDate: ").append(toIndentedString(activatedDate)).append("\n");
    sb.append("    deActivatedDate: ").append(toIndentedString(deActivatedDate)).append("\n");
    sb.append("    amountForFunding: ").append(toIndentedString(amountForFunding)).append("\n");
    sb.append("    amountForFundingCurrency: ").append(toIndentedString(amountForFundingCurrency)).append("\n");
    sb.append("    amountForFundingExchangeRate: ").append(toIndentedString(amountForFundingExchangeRate)).append("\n");
    sb.append("    amountForFundingTransactionCurrency: ").append(toIndentedString(amountForFundingTransactionCurrency)).append("\n");
    sb.append("    activeCard: ").append(toIndentedString(activeCard)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    installmentPlanTerminalData: ").append(toIndentedString(installmentPlanTerminalData)).append("\n");
    sb.append("    pisMember: ").append(toIndentedString(pisMember)).append("\n");
    sb.append("    setupContext: ").append(toIndentedString(setupContext)).append("\n");
    sb.append("    terminal: ").append(toIndentedString(terminal)).append("\n");
    sb.append("    cartItems: ").append(toIndentedString(cartItems)).append("\n");
    sb.append("    emailAuditLogs: ").append(toIndentedString(emailAuditLogs)).append("\n");
    sb.append("    feesDocuments: ").append(toIndentedString(feesDocuments)).append("\n");
    sb.append("    fraudDetectionLogs: ").append(toIndentedString(fraudDetectionLogs)).append("\n");
    sb.append("    fundingCollectDocumentDetails: ").append(toIndentedString(fundingCollectDocumentDetails)).append("\n");
    sb.append("    installmentPlanAuditLogs: ").append(toIndentedString(installmentPlanAuditLogs)).append("\n");
    sb.append("    installmentPlanEvents: ").append(toIndentedString(installmentPlanEvents)).append("\n");
    sb.append("    installmentPlanStatusLogEntries: ").append(toIndentedString(installmentPlanStatusLogEntries)).append("\n");
    sb.append("    installments: ").append(toIndentedString(installments)).append("\n");
    sb.append("    reAuthorizations: ").append(toIndentedString(reAuthorizations)).append("\n");
    sb.append("    refundLogEntries: ").append(toIndentedString(refundLogEntries)).append("\n");
    sb.append("    transferDocumentDetails: ").append(toIndentedString(transferDocumentDetails)).append("\n");
    sb.append("    activeTerminalDataId: ").append(toIndentedString(activeTerminalDataId)).append("\n");
    sb.append("    activeTerminalData: ").append(toIndentedString(activeTerminalData)).append("\n");
    sb.append("    delayResolution: ").append(toIndentedString(delayResolution)).append("\n");
    sb.append("    testMode: ").append(toIndentedString(testMode)).append("\n");
    sb.append("    fundingTypesId: ").append(toIndentedString(fundingTypesId)).append("\n");
    sb.append("    strategy: ").append(toIndentedString(strategy)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    purchaseMethod: ").append(toIndentedString(purchaseMethod)).append("\n");
    sb.append("    extendedParamsSerializedData: ").append(toIndentedString(extendedParamsSerializedData)).append("\n");
    sb.append("    extendedParams: ").append(toIndentedString(extendedParams)).append("\n");
    sb.append("    autoCapture: ").append(toIndentedString(autoCapture)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    amountDetails: ").append(toIndentedString(amountDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

